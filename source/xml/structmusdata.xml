<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="structmusdata" kind="struct" language="C++" prot="public">
    <compoundname>musdata</compoundname>
    <includes refid="musicDB_8hpp" local="no">musicDB.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmusdata_1a79bba5e62dddb894f040a563c5927222" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string musdata::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="14" column="17" bodyfile="include/db/musicDB.hpp" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmusdata_1accc9d5168dbbdbbc65c4bef04568d470" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string musdata::composer</definition>
        <argsstring></argsstring>
        <name>composer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="15" column="17" bodyfile="include/db/musicDB.hpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmusdata_1a4c559e6ff43eba8a98d37d07a0447856" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string musdata::musicPath</definition>
        <argsstring></argsstring>
        <name>musicPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="16" column="17" bodyfile="include/db/musicDB.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmusdata_1aaba9b1ecc8a2a58f74a00ec2d9041a28" prot="public" static="no" mutable="no">
        <type><ref refid="dbState_8hpp_1a32af0badd6a40566b8e04071484b2f83" kindref="member">BIN</ref></type>
        <definition>BIN musdata::bpmBinary</definition>
        <argsstring></argsstring>
        <name>bpmBinary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="17" column="9" bodyfile="include/db/musicDB.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmusdata_1a4739e5c5967894bb4a5d6566b8e2a422" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double musdata::bpm</definition>
        <argsstring></argsstring>
        <name>bpm</name>
        <initializer>= -1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="18" column="12" bodyfile="include/db/musicDB.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmusdata_1ab37ae262449a6d62ba70f9a0b3b9ea56" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string musdata::firstBar</definition>
        <argsstring></argsstring>
        <name>firstBar</name>
        <briefdescription>
<para>this means the first beat&apos;s position. The measurement unit is a PCM frame. For higher precision, double value is stored as strings in Capâ€™n Proto, so the corresponding variable is also a string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="21" column="17" bodyfile="include/db/musicDB.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmusdata_1a5ac662aaa154dffde0bbf676df945c22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>musdata::musdata</definition>
        <argsstring>(stmt *dbstate)</argsstring>
        <name>musdata</name>
        <param>
          <type><ref refid="structstmt" kindref="compound">stmt</ref> *</type>
          <declname>dbstate</declname>
        </param>
        <briefdescription>
<para>Constructor. typically used for returning search results. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbstate</parametername>
</parameternamelist>
<parameterdescription>
<para>the sqlite statement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="27" column="5" bodyfile="include/db/musicDB.cpp" bodystart="13" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structmusdata_1a8141efe3ecaacddb1d08024a52feb47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>musdata::musdata</definition>
        <argsstring>(const std::string &amp;title__=&quot;&quot;, const std::string &amp;composer__=&quot;&quot;, const std::string &amp;musicPath__=&quot;&quot;, const double bpm__=-1.0)</argsstring>
        <name>musdata</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title__</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>composer__</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicPath__</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const double</type>
          <declname>bpm__</declname>
          <defval>-1.0</defval>
        </param>
        <briefdescription>
<para>Constructor used for filtering music entries. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this constructor to specify filtering conditions for a search query. Leave parameters blank (or set to a negative value for bpm) if filtering by that field is not required.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title__</parametername>
</parameternamelist>
<parameterdescription>
<para>The title of the music. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>composer__</parametername>
</parameternamelist>
<parameterdescription>
<para>The composer of the music. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>musicPath__</parametername>
</parameternamelist>
<parameterdescription>
<para>Path to the music file, relative to the root of the database. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bpm__</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classBPM" kindref="compound">BPM</ref> (beats per minute) of the music. Use a negative value to ignore this field. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="40" column="5" bodyfile="include/db/musicDB.cpp" bodystart="23" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structmusdata_1a2b91926d793d176242d6689e2a4386f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool musdata::GenSearchSTMT</definition>
        <argsstring>(stmt &amp;dbstate, sqlite3 *db)</argsstring>
        <name>GenSearchSTMT</name>
        <param>
          <type><ref refid="structstmt" kindref="compound">stmt</ref> &amp;</type>
          <declname>dbstate</declname>
        </param>
        <param>
          <type>sqlite3 *</type>
          <declname>db</declname>
        </param>
        <briefdescription>
<para>generates the search statement </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbstate</parametername>
</parameternamelist>
<parameterdescription>
<para>statement pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>Root DB </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="54" column="10" bodyfile="include/db/musicDB.cpp" bodystart="37" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structmusdata_1afdbc23e8fce465938ddbabfa7d8ee5a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool musdata::GenInsertSTMT</definition>
        <argsstring>(stmt &amp;dbstate, sqlite3 *db)</argsstring>
        <name>GenInsertSTMT</name>
        <param>
          <type><ref refid="structstmt" kindref="compound">stmt</ref> &amp;</type>
          <declname>dbstate</declname>
        </param>
        <param>
          <type>sqlite3 *</type>
          <declname>db</declname>
        </param>
        <briefdescription>
<para>generates the insert statement </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dbstate</parametername>
</parameternamelist>
<parameterdescription>
<para>statement pointer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>Root DB </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/musicDB.hpp" line="64" column="10" bodyfile="include/db/musicDB.cpp" bodystart="79" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>the music meta data&apos;s struct </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>musdata</label>
        <link refid="structmusdata"/>
        <childnode refid="2" relation="usage">
          <edgelabel>bpmBinary</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>title</edgelabel>
          <edgelabel>firstBar</edgelabel>
          <edgelabel>composer</edgelabel>
          <edgelabel>musicPath</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="2">
        <label>std::vector&lt; u_int8_t &gt;</label>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/db/musicDB.hpp" line="12" column="14" bodyfile="include/db/musicDB.hpp" bodystart="12" bodyend="65"/>
    <listofallmembers>
      <member refid="structmusdata_1a4739e5c5967894bb4a5d6566b8e2a422" prot="public" virt="non-virtual"><scope>musdata</scope><name>bpm</name></member>
      <member refid="structmusdata_1aaba9b1ecc8a2a58f74a00ec2d9041a28" prot="public" virt="non-virtual"><scope>musdata</scope><name>bpmBinary</name></member>
      <member refid="structmusdata_1accc9d5168dbbdbbc65c4bef04568d470" prot="public" virt="non-virtual"><scope>musdata</scope><name>composer</name></member>
      <member refid="structmusdata_1ab37ae262449a6d62ba70f9a0b3b9ea56" prot="public" virt="non-virtual"><scope>musdata</scope><name>firstBar</name></member>
      <member refid="structmusdata_1afdbc23e8fce465938ddbabfa7d8ee5a3" prot="public" virt="non-virtual"><scope>musdata</scope><name>GenInsertSTMT</name></member>
      <member refid="structmusdata_1a2b91926d793d176242d6689e2a4386f3" prot="public" virt="non-virtual"><scope>musdata</scope><name>GenSearchSTMT</name></member>
      <member refid="structmusdata_1a5ac662aaa154dffde0bbf676df945c22" prot="public" virt="non-virtual"><scope>musdata</scope><name>musdata</name></member>
      <member refid="structmusdata_1a8141efe3ecaacddb1d08024a52feb47a" prot="public" virt="non-virtual"><scope>musdata</scope><name>musdata</name></member>
      <member refid="structmusdata_1a4c559e6ff43eba8a98d37d07a0447856" prot="public" virt="non-virtual"><scope>musdata</scope><name>musicPath</name></member>
      <member refid="structmusdata_1a79bba5e62dddb894f040a563c5927222" prot="public" virt="non-virtual"><scope>musdata</scope><name>title</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
