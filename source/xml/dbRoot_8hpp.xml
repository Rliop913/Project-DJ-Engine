<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="dbRoot_8hpp" kind="file" language="C++">
    <compoundname>dbRoot.hpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes local="no">optional</includes>
    <includes local="no">sqlite3.h</includes>
    <includes refid="musicDB_8hpp" local="yes">musicDB.hpp</includes>
    <includes refid="trackDB_8hpp" local="yes">trackDB.hpp</includes>
    <includedby refid="MUSIC__CTR_8hpp" local="yes">include/audioRender/MixMachine/MUSIC_CTR/MUSIC_CTR.hpp</includedby>
    <includedby refid="MixMachine_8hpp" local="yes">include/audioRender/MixMachine/MixMachine.hpp</includedby>
    <includedby refid="dbRoot_8cpp" local="yes">include/db/dbRoot.cpp</includedby>
    <includedby refid="editor_8hpp" local="yes">include/editor/editor.hpp</includedby>
    <includedby refid="PDJE__interface_8hpp" local="yes">include/interface/PDJE_interface.hpp</includedby>
    <includedby refid="audioTest_8cpp" local="yes">include/tests/audioTest.cpp</includedby>
    <includedby refid="dbTest_8cpp" local="yes">include/tests/dbTest.cpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/db/dbRoot.hpp</label>
        <link refid="dbRoot_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>dbState.hpp</label>
        <link refid="dbState_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>musicDB.hpp</label>
        <link refid="musicDB_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>trackDB.hpp</label>
        <link refid="trackDB_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="5">
        <label>sqlite3.h</label>
      </node>
      <node id="2">
        <label>string</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>include/audioRender/MixMachine/MUSIC_CTR/BattleDj.cpp</label>
        <link refid="BattleDj_8cpp"/>
      </node>
      <node id="3">
        <label>include/audioRender/MixMachine/MUSIC_CTR/BattleDj.hpp</label>
        <link refid="BattleDj_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>include/audioRender/MixMachine/MUSIC_CTR/MUSIC_CTR.cpp</label>
        <link refid="MUSIC__CTR_8cpp"/>
      </node>
      <node id="2">
        <label>include/audioRender/MixMachine/MUSIC_CTR/MUSIC_CTR.hpp</label>
        <link refid="MUSIC__CTR_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>include/audioRender/MixMachine/MUSIC_CTR/SetCue.cpp</label>
        <link refid="SetCue_8cpp"/>
      </node>
      <node id="6">
        <label>include/audioRender/MixMachine/MixMachine.cpp</label>
        <link refid="MixMachine_8cpp"/>
      </node>
      <node id="5">
        <label>include/audioRender/MixMachine/MixMachine.hpp</label>
        <link refid="MixMachine_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_COMPRESSOR.cpp</label>
        <link refid="Type__FX__COMPRESSOR_8cpp"/>
      </node>
      <node id="8">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_DISTORTION.cpp</label>
        <link refid="Type__FX__DISTORTION_8cpp"/>
      </node>
      <node id="9">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_ECHO.cpp</label>
        <link refid="Type__FX__ECHO_8cpp"/>
      </node>
      <node id="10">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_EQ.cpp</label>
        <link refid="Type__FX__EQ_8cpp"/>
      </node>
      <node id="11">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_FILTER.cpp</label>
        <link refid="Type__FX__FILTER_8cpp"/>
      </node>
      <node id="12">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_FLANGER.cpp</label>
        <link refid="Type__FX__FLANGER_8cpp"/>
      </node>
      <node id="13">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_OCS_FILTER.cpp</label>
        <link refid="Type__FX__OCS__FILTER_8cpp"/>
      </node>
      <node id="14">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_PANNER.cpp</label>
        <link refid="Type__FX__PANNER_8cpp"/>
      </node>
      <node id="15">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_PHASER.cpp</label>
        <link refid="Type__FX__PHASER_8cpp"/>
      </node>
      <node id="16">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_ROBOT.cpp</label>
        <link refid="Type__FX__ROBOT_8cpp"/>
      </node>
      <node id="17">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_ROLL.cpp</label>
        <link refid="Type__FX__ROLL_8cpp"/>
      </node>
      <node id="18">
        <label>include/audioRender/MixMachine/MixTypes/Type_FX_TRANCE.cpp</label>
        <link refid="Type__FX__TRANCE_8cpp"/>
      </node>
      <node id="19">
        <label>include/audioRender/MixMachine/MixTypes/Type_MUSCTR.cpp</label>
        <link refid="Type__MUSCTR_8cpp"/>
      </node>
      <node id="20">
        <label>include/audioRender/MixMachine/MixTypes/Type_VOL.cpp</label>
        <link refid="Type__VOL_8cpp"/>
      </node>
      <node id="22">
        <label>include/audioRender/audioRender.cpp</label>
        <link refid="audioRender_8cpp"/>
      </node>
      <node id="21">
        <label>include/audioRender/audioRender.hpp</label>
        <link refid="audioRender_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>include/db/dbRoot.cpp</label>
        <link refid="dbRoot_8cpp"/>
      </node>
      <node id="1">
        <label>include/db/dbRoot.hpp</label>
        <link refid="dbRoot_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>include/editor/editor.hpp</label>
        <link refid="editor_8hpp"/>
      </node>
      <node id="25">
        <label>include/interface/PDJE_interface.cpp</label>
        <link refid="PDJE__interface_8cpp"/>
      </node>
      <node id="24">
        <label>include/interface/PDJE_interface.hpp</label>
        <link refid="PDJE__interface_8hpp"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>include/interface/PDJE_polyglot_wraps.cpp</label>
        <link refid="PDJE__polyglot__wraps_8cpp"/>
      </node>
      <node id="28">
        <label>include/players/audioPlayer/audioPlayer.cpp</label>
        <link refid="audioPlayer_8cpp"/>
      </node>
      <node id="23">
        <label>include/players/audioPlayer/audioPlayer.hpp</label>
        <link refid="audioPlayer_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>include/tests/CapnpTest.cpp</label>
        <link refid="CapnpTest_8cpp"/>
      </node>
      <node id="29">
        <label>include/tests/audioTest.cpp</label>
        <link refid="audioTest_8cpp"/>
      </node>
      <node id="35">
        <label>include/tests/dbTest.cpp</label>
        <link refid="dbTest_8cpp"/>
      </node>
      <node id="27">
        <label>include/tests/interfaceTest.cpp</label>
        <link refid="interfaceTest_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classlitedb" prot="public">litedb</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dbRoot_8hpp_1a3f1b13e99715292c40c6aa3f77c558e0" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structmusdata" kindref="compound">musdata</ref> &gt;</type>
        <definition>using MUS_VEC =  std::vector&lt;musdata&gt;</definition>
        <argsstring></argsstring>
        <name>MUS_VEC</name>
        <briefdescription>
<para>music data vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/dbRoot.hpp" line="11" column="1" bodyfile="include/db/dbRoot.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dbRoot_8hpp_1a1bb451b755a8140750f0c66ddd292a40" prot="public" static="no">
        <type>std::optional&lt; <ref refid="dbRoot_8hpp_1a3f1b13e99715292c40c6aa3f77c558e0" kindref="member">MUS_VEC</ref> &gt;</type>
        <definition>using MAYBE_MUS_VEC =  std::optional&lt;MUS_VEC&gt;</definition>
        <argsstring></argsstring>
        <name>MAYBE_MUS_VEC</name>
        <briefdescription>
<para>music data vector. check before use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/dbRoot.hpp" line="13" column="1" bodyfile="include/db/dbRoot.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dbRoot_8hpp_1a5e5f6eb44078b1ddbcbb421faec83470" prot="public" static="no">
        <type>std::vector&lt; <ref refid="structtrackdata" kindref="compound">trackdata</ref> &gt;</type>
        <definition>using TRACK_VEC =  std::vector&lt;trackdata&gt;</definition>
        <argsstring></argsstring>
        <name>TRACK_VEC</name>
        <briefdescription>
<para>track data vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/dbRoot.hpp" line="16" column="1" bodyfile="include/db/dbRoot.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dbRoot_8hpp_1a6ab0599a5878a648af6017d8ff86b842" prot="public" static="no">
        <type>std::optional&lt; <ref refid="dbRoot_8hpp_1a5e5f6eb44078b1ddbcbb421faec83470" kindref="member">TRACK_VEC</ref> &gt;</type>
        <definition>using MAYBE_TRACK_VEC =  std::optional&lt;TRACK_VEC&gt;</definition>
        <argsstring></argsstring>
        <name>MAYBE_TRACK_VEC</name>
        <briefdescription>
<para>track data vector. check before use. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/db/dbRoot.hpp" line="18" column="1" bodyfile="include/db/dbRoot.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="classlitedb_1ad34e34703f0871c6f7ac4eb1c3242a1b" refkind="member"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sqlite3.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="musicDB_8hpp" kindref="compound">musicDB.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="trackDB_8hpp" kindref="compound">trackDB.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="dbRoot_8hpp_1a3f1b13e99715292c40c6aa3f77c558e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="dbRoot_8hpp_1a3f1b13e99715292c40c6aa3f77c558e0" kindref="member">MUS_VEC</ref><sp/>=<sp/>std::vector&lt;musdata&gt;;</highlight></codeline>
<codeline lineno="13" refid="dbRoot_8hpp_1a1bb451b755a8140750f0c66ddd292a40" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="dbRoot_8hpp_1a1bb451b755a8140750f0c66ddd292a40" kindref="member">MAYBE_MUS_VEC</ref><sp/>=<sp/>std::optional&lt;MUS_VEC&gt;;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="dbRoot_8hpp_1a5e5f6eb44078b1ddbcbb421faec83470" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="dbRoot_8hpp_1a5e5f6eb44078b1ddbcbb421faec83470" kindref="member">TRACK_VEC</ref><sp/>=<sp/>std::vector&lt;trackdata&gt;;</highlight></codeline>
<codeline lineno="18" refid="dbRoot_8hpp_1a6ab0599a5878a648af6017d8ff86b842" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="dbRoot_8hpp_1a6ab0599a5878a648af6017d8ff86b842" kindref="member">MAYBE_TRACK_VEC</ref><sp/>=<sp/>std::optional&lt;TRACK_VEC&gt;;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classlitedb" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlitedb_1a9f3b4346801213c5cb95d7c86921a1c3" kindref="member">litedb</ref>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="classlitedb_1a8fb1beb3b2af4ec4b48c95f16eac8c34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classlitedb_1a8fb1beb3b2af4ec4b48c95f16eac8c34" kindref="member">ROOT_PATH</ref>;</highlight></codeline>
<codeline lineno="29" refid="classlitedb_1a066eb42c53fcc5e765b27b400aca5779" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>sqlite3*<sp/><ref refid="classlitedb_1a066eb42c53fcc5e765b27b400aca5779" kindref="member">db</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlitedb_1ac516f0ac3215ae1f81a733037ae1cd67" kindref="member">CheckTables</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DBType&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;std::vector&lt;DBType&gt;&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlitedb_1ad34e34703f0871c6f7ac4eb1c3242a1b" kindref="member">operator&lt;&lt;</ref>(DBType&amp;<sp/>searchClue);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DBType&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlitedb_1ad2789c301c55befe5e85284f272bb46d" kindref="member">operator&lt;=</ref>(DBType&amp;<sp/>insertObject);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlitedb_1a4cc81fddce5ff104cf82da212efc2f38" kindref="member">openDB</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>dbPath);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/></highlight></codeline>
<codeline lineno="72" refid="classlitedb_1af16e54cebbe62f5b1b44b03dbc3d3529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlitedb_1af16e54cebbe62f5b1b44b03dbc3d3529" kindref="member">getRoot</ref>(){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlitedb_1a8fb1beb3b2af4ec4b48c95f16eac8c34" kindref="member">ROOT_PATH</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlitedb_1a9f3b4346801213c5cb95d7c86921a1c3" kindref="member">litedb</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlitedb_1a81aed319e301d84ed8dde7bbe0e86c07" kindref="member">~litedb</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DBType&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">std::optional&lt;std::vector&lt;DBType&gt;&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="classlitedb_1ad34e34703f0871c6f7ac4eb1c3242a1b" kindref="member">litedb::operator&lt;&lt;</ref>(DBType&amp;<sp/>searchClue)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>stmt<sp/>dbstate<sp/>=<sp/>stmt();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(searchClue.GenSearchSTMT(dbstate,<sp/><ref refid="classlitedb_1a066eb42c53fcc5e765b27b400aca5779" kindref="member">db</ref>)){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DBType&gt;<sp/>data;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(sqlite3_step(dbstate.<ref refid="structstmt_1a411c1a2d054375b6bd93e937e4dadae5" kindref="member">S</ref>)<sp/>==<sp/>SQLITE_ROW){</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data.emplace_back(&amp;dbstate);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(data);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DBType&gt;</highlight></codeline>
<codeline lineno="98" refid="classlitedb_1ad2789c301c55befe5e85284f272bb46d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="classlitedb_1ad2789c301c55befe5e85284f272bb46d" kindref="member">litedb::operator&lt;=</ref>(DBType&amp;<sp/>insertObject)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structstmt" kindref="compound">stmt</ref><sp/>dbstate<sp/>=<sp/><ref refid="structstmt" kindref="compound">stmt</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(insertObject.GenInsertSTMT(dbstate,<sp/><ref refid="classlitedb_1a066eb42c53fcc5e765b27b400aca5779" kindref="member">db</ref>)){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>insertRes<sp/>=<sp/>sqlite3_step(dbstate.<ref refid="structstmt_1a411c1a2d054375b6bd93e937e4dadae5" kindref="member">S</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(insertRes<sp/>!=<sp/>SQLITE_DONE){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/db/dbRoot.hpp"/>
  </compounddef>
</doxygen>
