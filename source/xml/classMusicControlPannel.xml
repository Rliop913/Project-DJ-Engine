<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classMusicControlPannel" kind="class" language="C++" prot="public">
    <compoundname>MusicControlPannel</compoundname>
    <includes refid="MusicControlPannel_8hpp" local="no">MusicControlPannel.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMusicControlPannel_1aaeddd0b360590bc2d0479e78d8c8cc26" prot="private" static="no" mutable="no">
        <type><ref refid="MusicControlPannel_8hpp_1ab133b0d81c222324c3cd46e91d30fb7d" kindref="member">LOADS</ref></type>
        <definition>LOADS MusicControlPannel::deck</definition>
        <argsstring></argsstring>
        <name>deck</name>
        <qualifiedname>MusicControlPannel::deck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="53" column="11" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1a265ebc998ff106d6e0cf970a4cd3577f" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long MusicControlPannel::fsize</definition>
        <argsstring></argsstring>
        <name>fsize</name>
        <qualifiedname>MusicControlPannel::fsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="54" column="19" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1a782d114ee5d83f0904a556ff19d58706" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; MusicControlPannel::L</definition>
        <argsstring></argsstring>
        <name>L</name>
        <qualifiedname>MusicControlPannel::L</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="55" column="17" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1a50d07acc06b3befe66b5bd149916acd7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; MusicControlPannel::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>MusicControlPannel::R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="56" column="17" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1a5cadec26088b9207b4bbe3a6df1710e4" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* MusicControlPannel::FaustStyle[2]</definition>
        <argsstring>[2]</argsstring>
        <name>FaustStyle</name>
        <qualifiedname>MusicControlPannel::FaustStyle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="57" column="11" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1aa9c6be0915123d9a4a24681b04a756f7" prot="private" static="no" mutable="no">
        <type><ref refid="FrameCalc_8hpp_1a4ae0f789157647f4609ec87fb5b58e5a" kindref="member">SIMD_FLOAT</ref></type>
        <definition>SIMD_FLOAT MusicControlPannel::tempFrames</definition>
        <argsstring></argsstring>
        <name>tempFrames</name>
        <qualifiedname>MusicControlPannel::tempFrames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="58" column="16" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classMusicControlPannel_1abb7edb1051ec46ee153c1893ba5a3450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::LoadMusic</definition>
        <argsstring>(litedb &amp;ROOTDB, const musdata &amp;Mus)</argsstring>
        <name>LoadMusic</name>
        <qualifiedname>MusicControlPannel::LoadMusic</qualifiedname>
        <param>
          <type><ref refid="classlitedb" kindref="compound">litedb</ref> &amp;</type>
          <declname>ROOTDB</declname>
        </param>
        <param>
          <type>const <ref refid="structmusdata" kindref="compound">musdata</ref> &amp;</type>
          <declname>Mus</declname>
        </param>
        <briefdescription>
<para>loads music to the deck. doesn&apos;t play music </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Mus</parametername>
</parameternamelist>
<parameterdescription>
<para>Searched music </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int, miniaudio Error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="67" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="17" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1a7cc175695540fb5ba7c3c030da090681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::CueMusic</definition>
        <argsstring>(const UNSANITIZED &amp;title, const unsigned long long newPos)</argsstring>
        <name>CueMusic</name>
        <qualifiedname>MusicControlPannel::CueMusic</qualifiedname>
        <param>
          <type>const <ref refid="fileNameSanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const unsigned long long</type>
          <declname>newPos</declname>
        </param>
        <briefdescription>
<para>Change playback position of the music. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the music title </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newPos</parametername>
</parameternamelist>
<parameterdescription>
<para>the new playback position of the music </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="77" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="29" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1a7402cd45c5ebeca17332417a3e1359d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::SetMusic</definition>
        <argsstring>(const UNSANITIZED &amp;title, const bool onOff)</argsstring>
        <name>SetMusic</name>
        <qualifiedname>MusicControlPannel::SetMusic</qualifiedname>
        <param>
          <type>const <ref refid="fileNameSanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onOff</declname>
        </param>
        <briefdescription>
<para>turn on, off the music </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the music title </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onOff</parametername>
</parameternamelist>
<parameterdescription>
<para>True is on, False is off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="87" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="49" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1ad2ab2405535221002f7ad2d096169f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MusicControlPannel_8hpp_1ade6cd1e55ebee7c7fbbe63cd3590d1d8" kindref="member">LOADED_LIST</ref></type>
        <definition>LOADED_LIST MusicControlPannel::GetLoadedMusicList</definition>
        <argsstring>()</argsstring>
        <name>GetLoadedMusicList</name>
        <qualifiedname>MusicControlPannel::GetLoadedMusicList</qualifiedname>
        <briefdescription>
<para>get music list on the deck </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="MusicControlPannel_8hpp_1ade6cd1e55ebee7c7fbbe63cd3590d1d8" kindref="member">LOADED_LIST</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="94" column="17" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1a34dc2fe25fe8382f7f60823289cfb4ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::UnloadMusic</definition>
        <argsstring>(const UNSANITIZED &amp;title)</argsstring>
        <name>UnloadMusic</name>
        <qualifiedname>MusicControlPannel::UnloadMusic</qualifiedname>
        <param>
          <type>const <ref refid="fileNameSanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>unload music from deck. used to prevent memory leaks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the target music title </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="103" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1ac5484c7b650f475d92edaa7bcd7c32d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::GetPCMFrames</definition>
        <argsstring>(float *array, const unsigned long FrameSize)</argsstring>
        <name>GetPCMFrames</name>
        <qualifiedname>MusicControlPannel::GetPCMFrames</qualifiedname>
        <param>
          <type>float *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const unsigned long</type>
          <declname>FrameSize</declname>
        </param>
        <briefdescription>
<para>gets decoded pcm frames </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>pcm array output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FrameSize</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of frames </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="113" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="96" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1abc61176dfa07cf2da9ad733d873751a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classFXControlPannel" kindref="compound">FXControlPannel</ref> *</type>
        <definition>FXControlPannel * MusicControlPannel::getFXHandle</definition>
        <argsstring>(const UNSANITIZED &amp;title)</argsstring>
        <name>getFXHandle</name>
        <qualifiedname>MusicControlPannel::getFXHandle</qualifiedname>
        <param>
          <type>const <ref refid="fileNameSanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>gets FX handler </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the title of the music </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FXControlPannel*, the handler pointer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="121" column="21" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="111" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1a5cda48876a96b5ff01e56493ea52f1b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MusicControlPannel::MusicControlPannel</definition>
        <argsstring>(const unsigned long FrameSize)</argsstring>
        <name>MusicControlPannel</name>
        <qualifiedname>MusicControlPannel::MusicControlPannel</qualifiedname>
        <param>
          <type>const unsigned long</type>
          <declname>FrameSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="122" column="5" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1ad81a485f6df7756f01a2f97779ab1bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MusicControlPannel::~MusicControlPannel</definition>
        <argsstring>()</argsstring>
        <name>~MusicControlPannel</name>
        <qualifiedname>MusicControlPannel::~MusicControlPannel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="123" column="5" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="11" bodyend="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Music handler for manual mode. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>MusicControlPannel</label>
        <link refid="classMusicControlPannel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>deck</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>L</edgelabel>
          <edgelabel>R</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>tempFrames</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::map&lt; std::string, MusicOnDeck &gt;</label>
      </node>
      <node id="3">
        <label>std::vector&lt; float &gt;</label>
      </node>
      <node id="4">
        <label>std::vector&lt; float, hwy::AlignedAllocator&lt; float &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="50" column="1" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="50" bodyend="125"/>
    <listofallmembers>
      <member refid="classMusicControlPannel_1a7cc175695540fb5ba7c3c030da090681" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>CueMusic</name></member>
      <member refid="classMusicControlPannel_1aaeddd0b360590bc2d0479e78d8c8cc26" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>deck</name></member>
      <member refid="classMusicControlPannel_1a5cadec26088b9207b4bbe3a6df1710e4" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>FaustStyle</name></member>
      <member refid="classMusicControlPannel_1a265ebc998ff106d6e0cf970a4cd3577f" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>fsize</name></member>
      <member refid="classMusicControlPannel_1abc61176dfa07cf2da9ad733d873751a7" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>getFXHandle</name></member>
      <member refid="classMusicControlPannel_1ad2ab2405535221002f7ad2d096169f9e" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>GetLoadedMusicList</name></member>
      <member refid="classMusicControlPannel_1ac5484c7b650f475d92edaa7bcd7c32d0" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>GetPCMFrames</name></member>
      <member refid="classMusicControlPannel_1a782d114ee5d83f0904a556ff19d58706" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>L</name></member>
      <member refid="classMusicControlPannel_1abb7edb1051ec46ee153c1893ba5a3450" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>LoadMusic</name></member>
      <member refid="classMusicControlPannel_1a5cda48876a96b5ff01e56493ea52f1b7" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>MusicControlPannel</name></member>
      <member refid="classMusicControlPannel_1a50d07acc06b3befe66b5bd149916acd7" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>R</name></member>
      <member refid="classMusicControlPannel_1a7402cd45c5ebeca17332417a3e1359d6" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>SetMusic</name></member>
      <member refid="classMusicControlPannel_1aa9c6be0915123d9a4a24681b04a756f7" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>tempFrames</name></member>
      <member refid="classMusicControlPannel_1a34dc2fe25fe8382f7f60823289cfb4ce" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>UnloadMusic</name></member>
      <member refid="classMusicControlPannel_1ad81a485f6df7756f01a2f97779ab1bab" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>~MusicControlPannel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
