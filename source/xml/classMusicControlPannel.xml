<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classMusicControlPannel" kind="class" language="C++" prot="public">
    <compoundname>MusicControlPannel</compoundname>
    <includes refid="MusicControlPannel_8hpp" local="no">MusicControlPannel.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classMusicControlPannel_1aaeddd0b360590bc2d0479e78d8c8cc26" prot="private" static="no" mutable="no">
        <type><ref refid="MusicControlPannel_8hpp_1ab088038ca92417562a68857146129830" kindref="member">LOADS</ref></type>
        <definition>LOADS MusicControlPannel::deck</definition>
        <argsstring></argsstring>
        <name>deck</name>
        <qualifiedname>MusicControlPannel::deck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="35" column="11" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1a265ebc998ff106d6e0cf970a4cd3577f" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long MusicControlPannel::fsize</definition>
        <argsstring></argsstring>
        <name>fsize</name>
        <qualifiedname>MusicControlPannel::fsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="36" column="19" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1a782d114ee5d83f0904a556ff19d58706" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; MusicControlPannel::L</definition>
        <argsstring></argsstring>
        <name>L</name>
        <qualifiedname>MusicControlPannel::L</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="37" column="17" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1a50d07acc06b3befe66b5bd149916acd7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; MusicControlPannel::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>MusicControlPannel::R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="38" column="17" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1a5cadec26088b9207b4bbe3a6df1710e4" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* MusicControlPannel::FaustStyle[2]</definition>
        <argsstring>[2]</argsstring>
        <name>FaustStyle</name>
        <qualifiedname>MusicControlPannel::FaustStyle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="39" column="11" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classMusicControlPannel_1aa9c6be0915123d9a4a24681b04a756f7" prot="private" static="no" mutable="no">
        <type><ref refid="FrameCalc_8hpp_1a4ae0f789157647f4609ec87fb5b58e5a" kindref="member">SIMD_FLOAT</ref></type>
        <definition>SIMD_FLOAT MusicControlPannel::tempFrames</definition>
        <argsstring></argsstring>
        <name>tempFrames</name>
        <qualifiedname>MusicControlPannel::tempFrames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="40" column="16" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classMusicControlPannel_1a80888f4f40256430b8482a42fb2f6d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int MusicControlPannel::LoadMusic</definition>
        <argsstring>(const musdata &amp;Mus)</argsstring>
        <name>LoadMusic</name>
        <qualifiedname>MusicControlPannel::LoadMusic</qualifiedname>
        <param>
          <type>const <ref refid="structmusdata" kindref="compound">musdata</ref> &amp;</type>
          <declname>Mus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="43" column="9" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="11" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1a76b9f68b3d3a4fd5b807e4ef9c541e85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::CueMusic</definition>
        <argsstring>(const TITLE &amp;title, const unsigned long long newPos)</argsstring>
        <name>CueMusic</name>
        <qualifiedname>MusicControlPannel::CueMusic</qualifiedname>
        <param>
          <type>const <ref refid="MusicControlPannel_8hpp_1aa42a227ab9a3ce0509fb104969175005" kindref="member">TITLE</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const unsigned long long</type>
          <declname>newPos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="44" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1a998210e51746edd2547833d6584ccece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::SetMusic</definition>
        <argsstring>(const TITLE &amp;title, const bool onOff)</argsstring>
        <name>SetMusic</name>
        <qualifiedname>MusicControlPannel::SetMusic</qualifiedname>
        <param>
          <type>const <ref refid="MusicControlPannel_8hpp_1aa42a227ab9a3ce0509fb104969175005" kindref="member">TITLE</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onOff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="45" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1ad2ab2405535221002f7ad2d096169f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="MusicControlPannel_8hpp_1a4c72c3001db71218d5703fe8033a6792" kindref="member">LOADED_LIST</ref></type>
        <definition>LOADED_LIST MusicControlPannel::GetLoadedMusicList</definition>
        <argsstring>()</argsstring>
        <name>GetLoadedMusicList</name>
        <qualifiedname>MusicControlPannel::GetLoadedMusicList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="46" column="17" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1aab9fd1214bab146fe3de2e4715f41e74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::UnloadMusic</definition>
        <argsstring>(const TITLE &amp;title)</argsstring>
        <name>UnloadMusic</name>
        <qualifiedname>MusicControlPannel::UnloadMusic</qualifiedname>
        <param>
          <type>const <ref refid="MusicControlPannel_8hpp_1aa42a227ab9a3ce0509fb104969175005" kindref="member">TITLE</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="47" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1ac5484c7b650f475d92edaa7bcd7c32d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPannel::GetPCMFrames</definition>
        <argsstring>(float *array, const unsigned long FrameSize)</argsstring>
        <name>GetPCMFrames</name>
        <qualifiedname>MusicControlPannel::GetPCMFrames</qualifiedname>
        <param>
          <type>float *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const unsigned long</type>
          <declname>FrameSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="49" column="10" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="71" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1a42d3ed8e5b7de5f0aabedbdc5bf74d95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classFXControlPannel" kindref="compound">FXControlPannel</ref> *</type>
        <definition>FXControlPannel * MusicControlPannel::getFXHandle</definition>
        <argsstring>(const TITLE &amp;title)</argsstring>
        <name>getFXHandle</name>
        <qualifiedname>MusicControlPannel::getFXHandle</qualifiedname>
        <param>
          <type>const <ref refid="MusicControlPannel_8hpp_1aa42a227ab9a3ce0509fb104969175005" kindref="member">TITLE</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="50" column="21" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="116" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1a5cda48876a96b5ff01e56493ea52f1b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MusicControlPannel::MusicControlPannel</definition>
        <argsstring>(const unsigned long FrameSize)</argsstring>
        <name>MusicControlPannel</name>
        <qualifiedname>MusicControlPannel::MusicControlPannel</qualifiedname>
        <param>
          <type>const unsigned long</type>
          <declname>FrameSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="51" column="5" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classMusicControlPannel_1ad81a485f6df7756f01a2f97779ab1bab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MusicControlPannel::~MusicControlPannel</definition>
        <argsstring>()</argsstring>
        <name>~MusicControlPannel</name>
        <qualifiedname>MusicControlPannel::~MusicControlPannel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="52" column="5" bodyfile="include/audioRender/ManualMix/MusicControlPannel.cpp" bodystart="4" bodyend="7"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>MusicControlPannel</label>
        <link refid="classMusicControlPannel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>deck</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>L</edgelabel>
          <edgelabel>R</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>tempFrames</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::map&lt; TITLE, MusicOnDeck &gt;</label>
      </node>
      <node id="3">
        <label>std::vector&lt; float &gt;</label>
      </node>
      <node id="4">
        <label>std::vector&lt; float, hwy::AlignedAllocator&lt; float &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="include/audioRender/ManualMix/MusicControlPannel.hpp" line="32" column="1" bodyfile="include/audioRender/ManualMix/MusicControlPannel.hpp" bodystart="32" bodyend="54"/>
    <listofallmembers>
      <member refid="classMusicControlPannel_1a76b9f68b3d3a4fd5b807e4ef9c541e85" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>CueMusic</name></member>
      <member refid="classMusicControlPannel_1aaeddd0b360590bc2d0479e78d8c8cc26" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>deck</name></member>
      <member refid="classMusicControlPannel_1a5cadec26088b9207b4bbe3a6df1710e4" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>FaustStyle</name></member>
      <member refid="classMusicControlPannel_1a265ebc998ff106d6e0cf970a4cd3577f" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>fsize</name></member>
      <member refid="classMusicControlPannel_1a42d3ed8e5b7de5f0aabedbdc5bf74d95" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>getFXHandle</name></member>
      <member refid="classMusicControlPannel_1ad2ab2405535221002f7ad2d096169f9e" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>GetLoadedMusicList</name></member>
      <member refid="classMusicControlPannel_1ac5484c7b650f475d92edaa7bcd7c32d0" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>GetPCMFrames</name></member>
      <member refid="classMusicControlPannel_1a782d114ee5d83f0904a556ff19d58706" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>L</name></member>
      <member refid="classMusicControlPannel_1a80888f4f40256430b8482a42fb2f6d8d" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>LoadMusic</name></member>
      <member refid="classMusicControlPannel_1a5cda48876a96b5ff01e56493ea52f1b7" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>MusicControlPannel</name></member>
      <member refid="classMusicControlPannel_1a50d07acc06b3befe66b5bd149916acd7" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>R</name></member>
      <member refid="classMusicControlPannel_1a998210e51746edd2547833d6584ccece" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>SetMusic</name></member>
      <member refid="classMusicControlPannel_1aa9c6be0915123d9a4a24681b04a756f7" prot="private" virt="non-virtual"><scope>MusicControlPannel</scope><name>tempFrames</name></member>
      <member refid="classMusicControlPannel_1aab9fd1214bab146fe3de2e4715f41e74" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>UnloadMusic</name></member>
      <member refid="classMusicControlPannel_1ad81a485f6df7756f01a2f97779ab1bab" prot="public" virt="non-virtual"><scope>MusicControlPannel</scope><name>~MusicControlPannel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
