<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classeditorObject" kind="class" language="C++" prot="public">
    <compoundname>editorObject</compoundname>
    <includes refid="editorObject_8hpp" local="no">editorObject.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classeditorObject_1afe3027bfdc86cf213b3d44191e4ce4e7" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classtempDB" kindref="compound">tempDB</ref> &gt;</type>
        <definition>std::optional&lt;tempDB&gt; editorObject::projectLocalDB</definition>
        <argsstring></argsstring>
        <name>projectLocalDB</name>
        <qualifiedname>editorObject::projectLocalDB</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="23" column="19" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeditorObject_1a9409f6aef52b2cb8a361674da49b97e1" prot="private" static="no" mutable="no">
        <type>fs::path</type>
        <definition>fs::path editorObject::projectRoot</definition>
        <argsstring></argsstring>
        <name>projectRoot</name>
        <qualifiedname>editorObject::projectRoot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="24" column="14" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeditorObject_1a3172e809911096988531fc5228f7055e" prot="private" static="no" mutable="no">
        <type>fs::path</type>
        <definition>fs::path editorObject::mixFilePath</definition>
        <argsstring></argsstring>
        <name>mixFilePath</name>
        <qualifiedname>editorObject::mixFilePath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="25" column="14" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeditorObject_1abeaedacd9b6d9e2fb61772aa348431b1" prot="private" static="no" mutable="no">
        <type>fs::path</type>
        <definition>fs::path editorObject::noteFilePath</definition>
        <argsstring></argsstring>
        <name>noteFilePath</name>
        <qualifiedname>editorObject::noteFilePath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="26" column="14" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeditorObject_1a1a72aaa0a758b9c32f2bcd603a607f3c" prot="private" static="no" mutable="no">
        <type>fs::path</type>
        <definition>fs::path editorObject::kvFilePath</definition>
        <argsstring></argsstring>
        <name>kvFilePath</name>
        <qualifiedname>editorObject::kvFilePath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="27" column="14" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeditorObject_1a76050465d4780555d62af1f9faee05e7" prot="private" static="no" mutable="no">
        <type>fs::path</type>
        <definition>fs::path editorObject::musicFileRootPath</definition>
        <argsstring></argsstring>
        <name>musicFileRootPath</name>
        <qualifiedname>editorObject::musicFileRootPath</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="28" column="14" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classeditorObject_1a23655580a822a7ae6c96ece123f0574d" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classPDJE__Editor" kindref="compound">PDJE_Editor</ref> &gt;</type>
        <definition>std::optional&lt;PDJE_Editor&gt; editorObject::E_obj</definition>
        <argsstring></argsstring>
        <name>E_obj</name>
        <qualifiedname>editorObject::E_obj</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="29" column="19" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classeditorObject_1a59f64efda4392df5f97a1fc893d234dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::DefaultSaveFuntion</definition>
        <argsstring>()</argsstring>
        <name>DefaultSaveFuntion</name>
        <qualifiedname>editorObject::DefaultSaveFuntion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="32" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aebd96635e0fb0919b6560d2e8cd0a5ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::DefaultSaveFuntion</definition>
        <argsstring>(PDJE_Editor::MusicHandleStruct &amp;i, const EDIT_ARG_MUSIC &amp;obj)</argsstring>
        <name>DefaultSaveFuntion</name>
        <qualifiedname>editorObject::DefaultSaveFuntion</qualifiedname>
        <param>
          <type><ref refid="structPDJE__Editor_1_1MusicHandleStruct" kindref="compound">PDJE_Editor::MusicHandleStruct</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="structEDIT__ARG__MUSIC" kindref="compound">EDIT_ARG_MUSIC</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="35" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ae15dae764941d1e194da7623f8bfea4c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structtrackdata" kindref="compound">trackdata</ref></type>
        <definition>trackdata editorObject::makeTrackData</definition>
        <argsstring>(const std::string &amp;trackTitle, TITLE_COMPOSER &amp;titles)</argsstring>
        <name>makeTrackData</name>
        <qualifiedname>editorObject::makeTrackData</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>trackTitle</declname>
        </param>
        <param>
          <type><ref refid="editorObject_8hpp_1a9a6e3086f73f288f3fea77e5b098a444" kindref="member">TITLE_COMPOSER</ref> &amp;</type>
          <declname>titles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="37" column="15" bodyfile="include/MainObjects/editorObject/editorObject.cpp" bodystart="6" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a4e6fa8a1fd2bb33e2d95d134f5453163" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::DefaultSaveFuntion</definition>
        <argsstring>()</argsstring>
        <name>DefaultSaveFuntion</name>
        <qualifiedname>editorObject::DefaultSaveFuntion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/commonfunction.cpp" line="6" column="1" bodyfile="include/MainObjects/editorObject/commonfunction.cpp" bodystart="7" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a4e6fa8a1fd2bb33e2d95d134f5453163" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::DefaultSaveFuntion</definition>
        <argsstring>()</argsstring>
        <name>DefaultSaveFuntion</name>
        <qualifiedname>editorObject::DefaultSaveFuntion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/commonfunction.cpp" line="15" column="1" bodyfile="include/MainObjects/editorObject/commonfunction.cpp" bodystart="16" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a4e6fa8a1fd2bb33e2d95d134f5453163" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::DefaultSaveFuntion</definition>
        <argsstring>()</argsstring>
        <name>DefaultSaveFuntion</name>
        <qualifiedname>editorObject::DefaultSaveFuntion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/commonfunction.cpp" line="24" column="1" bodyfile="include/MainObjects/editorObject/commonfunction.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ada763eda320be440f8b22df4ccc9d41c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::DefaultSaveFuntion</definition>
        <argsstring>(PDJE_Editor::MusicHandleStruct &amp;i, const EDIT_ARG_MUSIC &amp;obj)</argsstring>
        <name>DefaultSaveFuntion</name>
        <qualifiedname>editorObject::DefaultSaveFuntion</qualifiedname>
        <param>
          <type><ref refid="structPDJE__Editor_1_1MusicHandleStruct" kindref="compound">PDJE_Editor::MusicHandleStruct</ref> &amp;</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const <ref refid="structEDIT__ARG__MUSIC" kindref="compound">EDIT_ARG_MUSIC</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/commonfunction.cpp" line="33" column="1" bodyfile="include/MainObjects/editorObject/commonfunction.cpp" bodystart="34" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classeditorObject_1a77eaf52d8c470aadb9af3f3140e6beee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::AddLine</definition>
        <argsstring>(const EDIT_ARG_TYPE &amp;obj)</argsstring>
        <name>AddLine</name>
        <qualifiedname>editorObject::AddLine</qualifiedname>
        <param>
          <type>const EDIT_ARG_TYPE &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="44" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a9a635ff8a0b961fd0a5d8e2a30e0f99b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool editorObject::AddLine</definition>
        <argsstring>(const std::string &amp;musicName, const std::string &amp;firstBar)</argsstring>
        <name>AddLine</name>
        <qualifiedname>editorObject::AddLine</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>firstBar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="46" column="10" bodyfile="include/MainObjects/editorObject/addline.cpp" bodystart="46" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1acec5f49ab4cc77cd842d4eaf1a25ff87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int editorObject::deleteLine</definition>
        <argsstring>(const EDIT_ARG_MIX &amp;obj, bool skipType, bool skipDetail)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>editorObject::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="editorObject_8hpp_1a8c7c688d1e63ff780f13669e00fc091c" kindref="member">EDIT_ARG_MIX</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipDetail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="49" column="9" bodyfile="include/MainObjects/editorObject/deleteline.cpp" bodystart="4" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a74c726d83f0402fa3df6f74ac501dfea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int editorObject::deleteLine</definition>
        <argsstring>(const EDIT_ARG_TYPE &amp;obj)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>editorObject::deleteLine</qualifiedname>
        <param>
          <type>const EDIT_ARG_TYPE &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="55" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a306f80bd65c9d66e2f0bdcecd887e778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool editorObject::render</definition>
        <argsstring>(const std::string &amp;trackTitle, litedb &amp;ROOTDB)</argsstring>
        <name>render</name>
        <qualifiedname>editorObject::render</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>trackTitle</declname>
        </param>
        <param>
          <type><ref refid="classlitedb" kindref="compound">litedb</ref> &amp;</type>
          <declname>ROOTDB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="57" column="10" bodyfile="include/MainObjects/editorObject/render.cpp" bodystart="4" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a918546beb77067065ed35bacf9dfda44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void editorObject::demoPlayInit</definition>
        <argsstring>(std::optional&lt; audioPlayer &gt; &amp;player, unsigned int frameBufferSize, trackdata &amp;td)</argsstring>
        <name>demoPlayInit</name>
        <qualifiedname>editorObject::demoPlayInit</qualifiedname>
        <param>
          <type>std::optional&lt; <ref refid="classaudioPlayer" kindref="compound">audioPlayer</ref> &gt; &amp;</type>
          <declname>player</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>frameBufferSize</declname>
        </param>
        <param>
          <type><ref refid="structtrackdata" kindref="compound">trackdata</ref> &amp;</type>
          <declname>td</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="59" column="10" bodyfile="include/MainObjects/editorObject/editorObject.cpp" bodystart="33" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a12735bfdf61ef6e40ca60144b8d4d30d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool editorObject::pushToRootDB</definition>
        <argsstring>(litedb &amp;ROOTDB, const std::string &amp;trackTitleToPush)</argsstring>
        <name>pushToRootDB</name>
        <qualifiedname>editorObject::pushToRootDB</qualifiedname>
        <param>
          <type><ref refid="classlitedb" kindref="compound">litedb</ref> &amp;</type>
          <declname>ROOTDB</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>trackTitleToPush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="64" column="10" bodyfile="include/MainObjects/editorObject/editorObject.cpp" bodystart="104" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aa1ea9b60567527b9e04f1290f82a0161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool editorObject::pushToRootDB</definition>
        <argsstring>(litedb &amp;ROOTDB, const std::string &amp;musicTitle, const std::string &amp;musicComposer)</argsstring>
        <name>pushToRootDB</name>
        <qualifiedname>editorObject::pushToRootDB</qualifiedname>
        <param>
          <type><ref refid="classlitedb" kindref="compound">litedb</ref> &amp;</type>
          <declname>ROOTDB</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicTitle</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicComposer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="66" column="10" bodyfile="include/MainObjects/editorObject/editorObject.cpp" bodystart="119" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a720a623f570f5fbeafb28e812a127938" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void editorObject::getAll</definition>
        <argsstring>(std::function&lt; void(const EDIT_ARG_TYPE &amp;obj)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>editorObject::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const EDIT_ARG_TYPE &amp;obj)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1af807921cf49ccaa0d561badcb5348087" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Undo</definition>
        <argsstring>()</argsstring>
        <name>Undo</name>
        <qualifiedname>editorObject::Undo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="75" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a1f8cca15a91cc940339ce07a69a50956" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Undo</definition>
        <argsstring>(const std::string &amp;musicName)</argsstring>
        <name>Undo</name>
        <qualifiedname>editorObject::Undo</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="78" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ae24df06774592614acbfb17701f4e2e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Redo</definition>
        <argsstring>()</argsstring>
        <name>Redo</name>
        <qualifiedname>editorObject::Redo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="82" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1adb0412f3a2069d8874442b05889f4da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Redo</definition>
        <argsstring>(const std::string &amp;musicName)</argsstring>
        <name>Redo</name>
        <qualifiedname>editorObject::Redo</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a621c10ef4de5bcb14fa1722913dbf646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Go</definition>
        <argsstring>(const std::string &amp;branchName, git_oid *commitID)</argsstring>
        <name>Go</name>
        <qualifiedname>editorObject::Go</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <param>
          <type>git_oid *</type>
          <declname>commitID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="88" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a59958d8c0a239e9e972b05c2a8667baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string editorObject::GetLogWithJSONGraph</definition>
        <argsstring>()</argsstring>
        <name>GetLogWithJSONGraph</name>
        <qualifiedname>editorObject::GetLogWithJSONGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="91" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aa0d89bf327af255139ce18a63325847f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string editorObject::GetLogWithJSONGraph</definition>
        <argsstring>(const std::string &amp;musicName)</argsstring>
        <name>GetLogWithJSONGraph</name>
        <qualifiedname>editorObject::GetLogWithJSONGraph</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="94" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1af72d99c3cb239afe1f633ad592327ae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>()</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="98" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ab8ef393b0f5a6ab421bce6db1568007f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>(const std::string &amp;branchName)</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="101" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a28dc3aa435512e4ad16ad0f821c64907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename EDIT_ARG_TYPE</type>
          </param>
        </templateparamlist>
        <type><ref refid="structDiffResult" kindref="compound">DiffResult</ref></type>
        <definition>DiffResult editorObject::GetDiff</definition>
        <argsstring>(const gitwrap::commit &amp;oldTimeStamp, const gitwrap::commit &amp;newTimeStamp)</argsstring>
        <name>GetDiff</name>
        <qualifiedname>editorObject::GetDiff</qualifiedname>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>oldTimeStamp</declname>
        </param>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>newTimeStamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="104" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a6d1b276facfb042e63eb18c7320221b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="jsonWrapper_8hpp_1a6c08a6bca89aa954d4bf90371a27dfa9" kindref="member">nj</ref> &amp;</type>
        <definition>nj &amp; editorObject::operator[]</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>operator[]</name>
        <qualifiedname>editorObject::operator[]</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="106" column="8" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a21dbc62e9ced192984dadc1e343245c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string editorObject::DESTROY_PROJECT</definition>
        <argsstring>()</argsstring>
        <name>DESTROY_PROJECT</name>
        <qualifiedname>editorObject::DESTROY_PROJECT</qualifiedname>
        <briefdescription>
<para>WARNING!!! THERE IS NO TURNING BACK. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="111" column="17" bodyfile="include/MainObjects/editorObject/editorObject.cpp" bodystart="49" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a8d507d6174d5f46b5d2b6b008b707447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool editorObject::ConfigNewMusic</definition>
        <argsstring>(const std::string &amp;NewMusicName, const std::string &amp;composer, const std::string &amp;musicPath, const std::string &amp;firstBar=&quot;0&quot;)</argsstring>
        <name>ConfigNewMusic</name>
        <qualifiedname>editorObject::ConfigNewMusic</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>NewMusicName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>composer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicPath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>firstBar</declname>
          <defval>&quot;0&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="113" column="10" bodyfile="include/MainObjects/editorObject/editorObject.cpp" bodystart="70" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a18ffb87e739c3b9964004da4925bf48d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool editorObject::Open</definition>
        <argsstring>(const std::string &amp;projectPath)</argsstring>
        <name>Open</name>
        <qualifiedname>editorObject::Open</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>projectPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="119" column="10" bodyfile="include/MainObjects/editorObject/editorObject.cpp" bodystart="90" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a690ad4f1302edbb56c2ae2cdba91189d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>editorObject::editorObject</definition>
        <argsstring>()=delete</argsstring>
        <name>editorObject</name>
        <qualifiedname>editorObject::editorObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="121" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a4bfe119bfb12f7c4617b4f972c6fe637" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>editorObject::editorObject</definition>
        <argsstring>(const std::string &amp;auth_name, const std::string &amp;auth_email)</argsstring>
        <name>editorObject</name>
        <qualifiedname>editorObject::editorObject</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>auth_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>auth_email</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="123" column="5" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ae5c4229489a3b798968960d7806a96a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>editorObject::~editorObject</definition>
        <argsstring>()=default</argsstring>
        <name>~editorObject</name>
        <qualifiedname>editorObject::~editorObject</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/editorObject.hpp" line="127" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ad3274f4153e7e8845a5c5d048f037901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::AddLine</definition>
        <argsstring>(const EDIT_ARG_MUSIC &amp;obj)</argsstring>
        <name>AddLine</name>
        <qualifiedname>editorObject::AddLine</qualifiedname>
        <param>
          <type>const <ref refid="structEDIT__ARG__MUSIC" kindref="compound">EDIT_ARG_MUSIC</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/addline.cpp" line="5" column="1" bodyfile="include/MainObjects/editorObject/addline.cpp" bodystart="5" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a85dd1bfab830dc51fd12f6f27956ec19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::AddLine</definition>
        <argsstring>(const EDIT_ARG_MIX &amp;obj)</argsstring>
        <name>AddLine</name>
        <qualifiedname>editorObject::AddLine</qualifiedname>
        <param>
          <type>const <ref refid="editorObject_8hpp_1a8c7c688d1e63ff780f13669e00fc091c" kindref="member">EDIT_ARG_MIX</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/addline.cpp" line="19" column="1" bodyfile="include/MainObjects/editorObject/addline.cpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aa6a8bd9998b64a8ee9bc46cd185b518f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::AddLine</definition>
        <argsstring>(const EDIT_ARG_NOTE &amp;obj)</argsstring>
        <name>AddLine</name>
        <qualifiedname>editorObject::AddLine</qualifiedname>
        <param>
          <type>const <ref refid="editorObject_8hpp_1a2de2e14491806b81a5ba85836b550f18" kindref="member">EDIT_ARG_NOTE</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/addline.cpp" line="28" column="1" bodyfile="include/MainObjects/editorObject/addline.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a307c57aa6a231f6394d82be67a1d94ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::AddLine</definition>
        <argsstring>(const EDIT_ARG_KEY_VALUE &amp;obj)</argsstring>
        <name>AddLine</name>
        <qualifiedname>editorObject::AddLine</qualifiedname>
        <param>
          <type>const <ref refid="editorObject_8hpp_1a305098bfe154230cbef2fbe44e5f9220" kindref="member">EDIT_ARG_KEY_VALUE</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/addline.cpp" line="38" column="1" bodyfile="include/MainObjects/editorObject/addline.cpp" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a1470c80235c92292a246fa3f9ce15865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int editorObject::deleteLine</definition>
        <argsstring>(const EDIT_ARG_NOTE &amp;obj)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>editorObject::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="editorObject_8hpp_1a2de2e14491806b81a5ba85836b550f18" kindref="member">EDIT_ARG_NOTE</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/deleteline.cpp" line="25" column="1" bodyfile="include/MainObjects/editorObject/deleteline.cpp" bodystart="25" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a0d5200a4e92a2faee32536810298f590" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int editorObject::deleteLine</definition>
        <argsstring>(const EDIT_ARG_KEY_VALUE &amp;obj)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>editorObject::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="editorObject_8hpp_1a305098bfe154230cbef2fbe44e5f9220" kindref="member">EDIT_ARG_KEY_VALUE</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/deleteline.cpp" line="37" column="1" bodyfile="include/MainObjects/editorObject/deleteline.cpp" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a6ab0f93838db62d7e61e9d4f97838e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int editorObject::deleteLine</definition>
        <argsstring>(const EDIT_ARG_MUSIC &amp;obj)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>editorObject::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="structEDIT__ARG__MUSIC" kindref="compound">EDIT_ARG_MUSIC</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/deleteline.cpp" line="49" column="1" bodyfile="include/MainObjects/editorObject/deleteline.cpp" bodystart="49" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a479985c5e13f1986c6b88ceac67924c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void editorObject::getAll</definition>
        <argsstring>(std::function&lt; void(const EDIT_ARG_KEY_VALUE &amp;obj)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>editorObject::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const <ref refid="editorObject_8hpp_1a305098bfe154230cbef2fbe44e5f9220" kindref="member">EDIT_ARG_KEY_VALUE</ref> &amp;obj)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getall.cpp" line="5" column="1" bodyfile="include/MainObjects/editorObject/getall.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a16ef00ce6ae7569f39a60ff8f382bd1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void editorObject::getAll</definition>
        <argsstring>(std::function&lt; void(const EDIT_ARG_MIX &amp;obj)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>editorObject::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const <ref refid="editorObject_8hpp_1a8c7c688d1e63ff780f13669e00fc091c" kindref="member">EDIT_ARG_MIX</ref> &amp;obj)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getall.cpp" line="12" column="1" bodyfile="include/MainObjects/editorObject/getall.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a77db8c854567b251bec9cebd5e91c662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void editorObject::getAll</definition>
        <argsstring>(std::function&lt; void(const EDIT_ARG_NOTE &amp;obj)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>editorObject::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const <ref refid="editorObject_8hpp_1a2de2e14491806b81a5ba85836b550f18" kindref="member">EDIT_ARG_NOTE</ref> &amp;obj)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getall.cpp" line="19" column="1" bodyfile="include/MainObjects/editorObject/getall.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a5fff7bdde5101a29d10a25989c8e248d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void editorObject::getAll</definition>
        <argsstring>(std::function&lt; void(const EDIT_ARG_MUSIC &amp;obj)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>editorObject::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const <ref refid="structEDIT__ARG__MUSIC" kindref="compound">EDIT_ARG_MUSIC</ref> &amp;obj)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getall.cpp" line="26" column="1" bodyfile="include/MainObjects/editorObject/getall.cpp" bodystart="26" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aac2481cb9b8cdce5b8b4bb955d75ecb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structDiffResult" kindref="compound">DiffResult</ref></type>
        <definition>DiffResult editorObject::GetDiff</definition>
        <argsstring>(const gitwrap::commit &amp;oldTimeStamp, const gitwrap::commit &amp;newTimeStamp)</argsstring>
        <name>GetDiff</name>
        <qualifiedname>editorObject::GetDiff</qualifiedname>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>oldTimeStamp</declname>
        </param>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>newTimeStamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getdiff.cpp" line="4" column="1" bodyfile="include/MainObjects/editorObject/getdiff.cpp" bodystart="5" bodyend="9"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aac2481cb9b8cdce5b8b4bb955d75ecb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structDiffResult" kindref="compound">DiffResult</ref></type>
        <definition>DiffResult editorObject::GetDiff</definition>
        <argsstring>(const gitwrap::commit &amp;oldTimeStamp, const gitwrap::commit &amp;newTimeStamp)</argsstring>
        <name>GetDiff</name>
        <qualifiedname>editorObject::GetDiff</qualifiedname>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>oldTimeStamp</declname>
        </param>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>newTimeStamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getdiff.cpp" line="12" column="1" bodyfile="include/MainObjects/editorObject/getdiff.cpp" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aac2481cb9b8cdce5b8b4bb955d75ecb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structDiffResult" kindref="compound">DiffResult</ref></type>
        <definition>DiffResult editorObject::GetDiff</definition>
        <argsstring>(const gitwrap::commit &amp;oldTimeStamp, const gitwrap::commit &amp;newTimeStamp)</argsstring>
        <name>GetDiff</name>
        <qualifiedname>editorObject::GetDiff</qualifiedname>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>oldTimeStamp</declname>
        </param>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>newTimeStamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getdiff.cpp" line="20" column="1" bodyfile="include/MainObjects/editorObject/getdiff.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aac2481cb9b8cdce5b8b4bb955d75ecb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structDiffResult" kindref="compound">DiffResult</ref></type>
        <definition>DiffResult editorObject::GetDiff</definition>
        <argsstring>(const gitwrap::commit &amp;oldTimeStamp, const gitwrap::commit &amp;newTimeStamp)</argsstring>
        <name>GetDiff</name>
        <qualifiedname>editorObject::GetDiff</qualifiedname>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>oldTimeStamp</declname>
        </param>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>newTimeStamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getdiff.cpp" line="28" column="1" bodyfile="include/MainObjects/editorObject/getdiff.cpp" bodystart="29" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a1e120adaeb4b725a04e65f78266456dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string editorObject::GetLogWithJSONGraph</definition>
        <argsstring>()</argsstring>
        <name>GetLogWithJSONGraph</name>
        <qualifiedname>editorObject::GetLogWithJSONGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getlogwithjsongraph.cpp" line="4" column="1" bodyfile="include/MainObjects/editorObject/getlogwithjsongraph.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a1e120adaeb4b725a04e65f78266456dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string editorObject::GetLogWithJSONGraph</definition>
        <argsstring>()</argsstring>
        <name>GetLogWithJSONGraph</name>
        <qualifiedname>editorObject::GetLogWithJSONGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getlogwithjsongraph.cpp" line="11" column="1" bodyfile="include/MainObjects/editorObject/getlogwithjsongraph.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a1e120adaeb4b725a04e65f78266456dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string editorObject::GetLogWithJSONGraph</definition>
        <argsstring>()</argsstring>
        <name>GetLogWithJSONGraph</name>
        <qualifiedname>editorObject::GetLogWithJSONGraph</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getlogwithjsongraph.cpp" line="18" column="1" bodyfile="include/MainObjects/editorObject/getlogwithjsongraph.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a6a4a2f23cbaadeba8942c3e468ba3c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string editorObject::GetLogWithJSONGraph</definition>
        <argsstring>(const std::string &amp;musicName)</argsstring>
        <name>GetLogWithJSONGraph</name>
        <qualifiedname>editorObject::GetLogWithJSONGraph</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/getlogwithjsongraph.cpp" line="25" column="1" bodyfile="include/MainObjects/editorObject/getlogwithjsongraph.cpp" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a2364b4ffafe1167e1716c497bce97eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Go</definition>
        <argsstring>(const std::string &amp;branchName, git_oid *commitID)</argsstring>
        <name>Go</name>
        <qualifiedname>editorObject::Go</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <param>
          <type>git_oid *</type>
          <declname>commitID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/go.cpp" line="4" column="1" bodyfile="include/MainObjects/editorObject/go.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a2364b4ffafe1167e1716c497bce97eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Go</definition>
        <argsstring>(const std::string &amp;branchName, git_oid *commitID)</argsstring>
        <name>Go</name>
        <qualifiedname>editorObject::Go</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <param>
          <type>git_oid *</type>
          <declname>commitID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/go.cpp" line="11" column="1" bodyfile="include/MainObjects/editorObject/go.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a2364b4ffafe1167e1716c497bce97eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Go</definition>
        <argsstring>(const std::string &amp;branchName, git_oid *commitID)</argsstring>
        <name>Go</name>
        <qualifiedname>editorObject::Go</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <param>
          <type>git_oid *</type>
          <declname>commitID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/go.cpp" line="18" column="1" bodyfile="include/MainObjects/editorObject/go.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a2364b4ffafe1167e1716c497bce97eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Go</definition>
        <argsstring>(const std::string &amp;branchName, git_oid *commitID)</argsstring>
        <name>Go</name>
        <qualifiedname>editorObject::Go</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <param>
          <type>git_oid *</type>
          <declname>commitID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/go.cpp" line="25" column="1" bodyfile="include/MainObjects/editorObject/go.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aefa353d96fd225e77138f1ebb482f2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Redo</definition>
        <argsstring>()</argsstring>
        <name>Redo</name>
        <qualifiedname>editorObject::Redo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/redo.cpp" line="4" column="1" bodyfile="include/MainObjects/editorObject/redo.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aefa353d96fd225e77138f1ebb482f2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Redo</definition>
        <argsstring>()</argsstring>
        <name>Redo</name>
        <qualifiedname>editorObject::Redo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/redo.cpp" line="11" column="1" bodyfile="include/MainObjects/editorObject/redo.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aa3839c846de7623380a2b6d1ad019e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Redo</definition>
        <argsstring>(const std::string &amp;musicName)</argsstring>
        <name>Redo</name>
        <qualifiedname>editorObject::Redo</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/redo.cpp" line="17" column="1" bodyfile="include/MainObjects/editorObject/redo.cpp" bodystart="18" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1aefa353d96fd225e77138f1ebb482f2a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Redo</definition>
        <argsstring>()</argsstring>
        <name>Redo</name>
        <qualifiedname>editorObject::Redo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/redo.cpp" line="28" column="1" bodyfile="include/MainObjects/editorObject/redo.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ab4d9fad40219f8d0abf61d62fe6148ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Undo</definition>
        <argsstring>()</argsstring>
        <name>Undo</name>
        <qualifiedname>editorObject::Undo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/undo.cpp" line="4" column="1" bodyfile="include/MainObjects/editorObject/undo.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ab4d9fad40219f8d0abf61d62fe6148ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Undo</definition>
        <argsstring>()</argsstring>
        <name>Undo</name>
        <qualifiedname>editorObject::Undo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/undo.cpp" line="11" column="1" bodyfile="include/MainObjects/editorObject/undo.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a5838ea997d2ca1c529d93000bc8dbab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Undo</definition>
        <argsstring>(const std::string &amp;musicName)</argsstring>
        <name>Undo</name>
        <qualifiedname>editorObject::Undo</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/undo.cpp" line="18" column="1" bodyfile="include/MainObjects/editorObject/undo.cpp" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1ab4d9fad40219f8d0abf61d62fe6148ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::Undo</definition>
        <argsstring>()</argsstring>
        <name>Undo</name>
        <qualifiedname>editorObject::Undo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/undo.cpp" line="30" column="1" bodyfile="include/MainObjects/editorObject/undo.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a4c49089d69f7f45e1ed9900e67338551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>()</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/updatelog.cpp" line="4" column="1" bodyfile="include/MainObjects/editorObject/updatelog.cpp" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a07219d71e7ca69e0995c93236c0aca97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>(const std::string &amp;branchName)</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/updatelog.cpp" line="11" column="1" bodyfile="include/MainObjects/editorObject/updatelog.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a4c49089d69f7f45e1ed9900e67338551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>()</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/updatelog.cpp" line="19" column="1" bodyfile="include/MainObjects/editorObject/updatelog.cpp" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a07219d71e7ca69e0995c93236c0aca97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>(const std::string &amp;branchName)</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/updatelog.cpp" line="26" column="1" bodyfile="include/MainObjects/editorObject/updatelog.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a4c49089d69f7f45e1ed9900e67338551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>()</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/updatelog.cpp" line="33" column="1" bodyfile="include/MainObjects/editorObject/updatelog.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a07219d71e7ca69e0995c93236c0aca97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>(const std::string &amp;branchName)</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/updatelog.cpp" line="40" column="1" bodyfile="include/MainObjects/editorObject/updatelog.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a4c49089d69f7f45e1ed9900e67338551" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>()</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/updatelog.cpp" line="48" column="1" bodyfile="include/MainObjects/editorObject/updatelog.cpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classeditorObject_1a645bcc27d4d553f05a4eda17150dc585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>bool editorObject::UpdateLog</definition>
        <argsstring>(const std::string &amp;musicName)</argsstring>
        <name>UpdateLog</name>
        <qualifiedname>editorObject::UpdateLog</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>musicName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/MainObjects/editorObject/updatelog.cpp" line="58" column="1" bodyfile="include/MainObjects/editorObject/updatelog.cpp" bodystart="59" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/MainObjects/editorObject/editorObject.hpp" line="21" column="1" bodyfile="include/MainObjects/editorObject/editorObject.hpp" bodystart="21" bodyend="128"/>
    <listofallmembers>
      <member refid="classeditorObject_1a77eaf52d8c470aadb9af3f3140e6beee" prot="public" virt="non-virtual"><scope>editorObject</scope><name>AddLine</name></member>
      <member refid="classeditorObject_1a9a635ff8a0b961fd0a5d8e2a30e0f99b" prot="public" virt="non-virtual"><scope>editorObject</scope><name>AddLine</name></member>
      <member refid="classeditorObject_1ad3274f4153e7e8845a5c5d048f037901" prot="public" virt="non-virtual"><scope>editorObject</scope><name>AddLine</name></member>
      <member refid="classeditorObject_1a85dd1bfab830dc51fd12f6f27956ec19" prot="public" virt="non-virtual"><scope>editorObject</scope><name>AddLine</name></member>
      <member refid="classeditorObject_1aa6a8bd9998b64a8ee9bc46cd185b518f" prot="public" virt="non-virtual"><scope>editorObject</scope><name>AddLine</name></member>
      <member refid="classeditorObject_1a307c57aa6a231f6394d82be67a1d94ae" prot="public" virt="non-virtual"><scope>editorObject</scope><name>AddLine</name></member>
      <member refid="classeditorObject_1a8d507d6174d5f46b5d2b6b008b707447" prot="public" virt="non-virtual"><scope>editorObject</scope><name>ConfigNewMusic</name></member>
      <member refid="classeditorObject_1a59f64efda4392df5f97a1fc893d234dc" prot="private" virt="non-virtual"><scope>editorObject</scope><name>DefaultSaveFuntion</name></member>
      <member refid="classeditorObject_1aebd96635e0fb0919b6560d2e8cd0a5ec" prot="private" virt="non-virtual"><scope>editorObject</scope><name>DefaultSaveFuntion</name></member>
      <member refid="classeditorObject_1a4e6fa8a1fd2bb33e2d95d134f5453163" prot="private" virt="non-virtual"><scope>editorObject</scope><name>DefaultSaveFuntion</name></member>
      <member refid="classeditorObject_1a4e6fa8a1fd2bb33e2d95d134f5453163" prot="private" virt="non-virtual"><scope>editorObject</scope><name>DefaultSaveFuntion</name></member>
      <member refid="classeditorObject_1a4e6fa8a1fd2bb33e2d95d134f5453163" prot="private" virt="non-virtual"><scope>editorObject</scope><name>DefaultSaveFuntion</name></member>
      <member refid="classeditorObject_1ada763eda320be440f8b22df4ccc9d41c" prot="private" virt="non-virtual"><scope>editorObject</scope><name>DefaultSaveFuntion</name></member>
      <member refid="classeditorObject_1acec5f49ab4cc77cd842d4eaf1a25ff87" prot="public" virt="non-virtual"><scope>editorObject</scope><name>deleteLine</name></member>
      <member refid="classeditorObject_1a74c726d83f0402fa3df6f74ac501dfea" prot="public" virt="non-virtual"><scope>editorObject</scope><name>deleteLine</name></member>
      <member refid="classeditorObject_1a1470c80235c92292a246fa3f9ce15865" prot="public" virt="non-virtual"><scope>editorObject</scope><name>deleteLine</name></member>
      <member refid="classeditorObject_1a0d5200a4e92a2faee32536810298f590" prot="public" virt="non-virtual"><scope>editorObject</scope><name>deleteLine</name></member>
      <member refid="classeditorObject_1a6ab0f93838db62d7e61e9d4f97838e2b" prot="public" virt="non-virtual"><scope>editorObject</scope><name>deleteLine</name></member>
      <member refid="classeditorObject_1a918546beb77067065ed35bacf9dfda44" prot="public" virt="non-virtual"><scope>editorObject</scope><name>demoPlayInit</name></member>
      <member refid="classeditorObject_1a21dbc62e9ced192984dadc1e343245c6" prot="public" virt="non-virtual"><scope>editorObject</scope><name>DESTROY_PROJECT</name></member>
      <member refid="classeditorObject_1a23655580a822a7ae6c96ece123f0574d" prot="private" virt="non-virtual"><scope>editorObject</scope><name>E_obj</name></member>
      <member refid="classeditorObject_1a690ad4f1302edbb56c2ae2cdba91189d" prot="public" virt="non-virtual"><scope>editorObject</scope><name>editorObject</name></member>
      <member refid="classeditorObject_1a4bfe119bfb12f7c4617b4f972c6fe637" prot="public" virt="non-virtual"><scope>editorObject</scope><name>editorObject</name></member>
      <member refid="classeditorObject_1a720a623f570f5fbeafb28e812a127938" prot="public" virt="non-virtual"><scope>editorObject</scope><name>getAll</name></member>
      <member refid="classeditorObject_1a479985c5e13f1986c6b88ceac67924c6" prot="public" virt="non-virtual"><scope>editorObject</scope><name>getAll</name></member>
      <member refid="classeditorObject_1a16ef00ce6ae7569f39a60ff8f382bd1c" prot="public" virt="non-virtual"><scope>editorObject</scope><name>getAll</name></member>
      <member refid="classeditorObject_1a77db8c854567b251bec9cebd5e91c662" prot="public" virt="non-virtual"><scope>editorObject</scope><name>getAll</name></member>
      <member refid="classeditorObject_1a5fff7bdde5101a29d10a25989c8e248d" prot="public" virt="non-virtual"><scope>editorObject</scope><name>getAll</name></member>
      <member refid="classeditorObject_1a28dc3aa435512e4ad16ad0f821c64907" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetDiff</name></member>
      <member refid="classeditorObject_1aac2481cb9b8cdce5b8b4bb955d75ecb0" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetDiff</name></member>
      <member refid="classeditorObject_1aac2481cb9b8cdce5b8b4bb955d75ecb0" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetDiff</name></member>
      <member refid="classeditorObject_1aac2481cb9b8cdce5b8b4bb955d75ecb0" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetDiff</name></member>
      <member refid="classeditorObject_1aac2481cb9b8cdce5b8b4bb955d75ecb0" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetDiff</name></member>
      <member refid="classeditorObject_1a59958d8c0a239e9e972b05c2a8667baf" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetLogWithJSONGraph</name></member>
      <member refid="classeditorObject_1aa0d89bf327af255139ce18a63325847f" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetLogWithJSONGraph</name></member>
      <member refid="classeditorObject_1a1e120adaeb4b725a04e65f78266456dc" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetLogWithJSONGraph</name></member>
      <member refid="classeditorObject_1a1e120adaeb4b725a04e65f78266456dc" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetLogWithJSONGraph</name></member>
      <member refid="classeditorObject_1a1e120adaeb4b725a04e65f78266456dc" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetLogWithJSONGraph</name></member>
      <member refid="classeditorObject_1a6a4a2f23cbaadeba8942c3e468ba3c82" prot="public" virt="non-virtual"><scope>editorObject</scope><name>GetLogWithJSONGraph</name></member>
      <member refid="classeditorObject_1a621c10ef4de5bcb14fa1722913dbf646" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Go</name></member>
      <member refid="classeditorObject_1a2364b4ffafe1167e1716c497bce97eb2" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Go</name></member>
      <member refid="classeditorObject_1a2364b4ffafe1167e1716c497bce97eb2" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Go</name></member>
      <member refid="classeditorObject_1a2364b4ffafe1167e1716c497bce97eb2" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Go</name></member>
      <member refid="classeditorObject_1a2364b4ffafe1167e1716c497bce97eb2" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Go</name></member>
      <member refid="classeditorObject_1a1a72aaa0a758b9c32f2bcd603a607f3c" prot="private" virt="non-virtual"><scope>editorObject</scope><name>kvFilePath</name></member>
      <member refid="classeditorObject_1ae15dae764941d1e194da7623f8bfea4c" prot="private" virt="non-virtual"><scope>editorObject</scope><name>makeTrackData</name></member>
      <member refid="classeditorObject_1a3172e809911096988531fc5228f7055e" prot="private" virt="non-virtual"><scope>editorObject</scope><name>mixFilePath</name></member>
      <member refid="classeditorObject_1a76050465d4780555d62af1f9faee05e7" prot="private" virt="non-virtual"><scope>editorObject</scope><name>musicFileRootPath</name></member>
      <member refid="classeditorObject_1abeaedacd9b6d9e2fb61772aa348431b1" prot="private" virt="non-virtual"><scope>editorObject</scope><name>noteFilePath</name></member>
      <member refid="classeditorObject_1a18ffb87e739c3b9964004da4925bf48d" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Open</name></member>
      <member refid="classeditorObject_1a6d1b276facfb042e63eb18c7320221b0" prot="public" virt="non-virtual"><scope>editorObject</scope><name>operator[]</name></member>
      <member refid="classeditorObject_1afe3027bfdc86cf213b3d44191e4ce4e7" prot="private" virt="non-virtual"><scope>editorObject</scope><name>projectLocalDB</name></member>
      <member refid="classeditorObject_1a9409f6aef52b2cb8a361674da49b97e1" prot="private" virt="non-virtual"><scope>editorObject</scope><name>projectRoot</name></member>
      <member refid="classeditorObject_1a12735bfdf61ef6e40ca60144b8d4d30d" prot="public" virt="non-virtual"><scope>editorObject</scope><name>pushToRootDB</name></member>
      <member refid="classeditorObject_1aa1ea9b60567527b9e04f1290f82a0161" prot="public" virt="non-virtual"><scope>editorObject</scope><name>pushToRootDB</name></member>
      <member refid="classeditorObject_1ae24df06774592614acbfb17701f4e2e1" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Redo</name></member>
      <member refid="classeditorObject_1adb0412f3a2069d8874442b05889f4da2" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Redo</name></member>
      <member refid="classeditorObject_1aefa353d96fd225e77138f1ebb482f2a8" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Redo</name></member>
      <member refid="classeditorObject_1aefa353d96fd225e77138f1ebb482f2a8" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Redo</name></member>
      <member refid="classeditorObject_1aa3839c846de7623380a2b6d1ad019e36" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Redo</name></member>
      <member refid="classeditorObject_1aefa353d96fd225e77138f1ebb482f2a8" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Redo</name></member>
      <member refid="classeditorObject_1a306f80bd65c9d66e2f0bdcecd887e778" prot="public" virt="non-virtual"><scope>editorObject</scope><name>render</name></member>
      <member refid="classeditorObject_1af807921cf49ccaa0d561badcb5348087" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Undo</name></member>
      <member refid="classeditorObject_1a1f8cca15a91cc940339ce07a69a50956" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Undo</name></member>
      <member refid="classeditorObject_1ab4d9fad40219f8d0abf61d62fe6148ff" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Undo</name></member>
      <member refid="classeditorObject_1ab4d9fad40219f8d0abf61d62fe6148ff" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Undo</name></member>
      <member refid="classeditorObject_1a5838ea997d2ca1c529d93000bc8dbab3" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Undo</name></member>
      <member refid="classeditorObject_1ab4d9fad40219f8d0abf61d62fe6148ff" prot="public" virt="non-virtual"><scope>editorObject</scope><name>Undo</name></member>
      <member refid="classeditorObject_1af72d99c3cb239afe1f633ad592327ae7" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1ab8ef393b0f5a6ab421bce6db1568007f" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1a4c49089d69f7f45e1ed9900e67338551" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1a07219d71e7ca69e0995c93236c0aca97" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1a4c49089d69f7f45e1ed9900e67338551" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1a07219d71e7ca69e0995c93236c0aca97" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1a4c49089d69f7f45e1ed9900e67338551" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1a07219d71e7ca69e0995c93236c0aca97" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1a4c49089d69f7f45e1ed9900e67338551" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1a645bcc27d4d553f05a4eda17150dc585" prot="public" virt="non-virtual"><scope>editorObject</scope><name>UpdateLog</name></member>
      <member refid="classeditorObject_1ae5c4229489a3b798968960d7806a96a9" prot="public" virt="non-virtual"><scope>editorObject</scope><name>~editorObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
