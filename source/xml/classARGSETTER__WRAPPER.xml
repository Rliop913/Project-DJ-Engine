<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classARGSETTER__WRAPPER" kind="class" language="C++" prot="public">
    <compoundname>ARGSETTER_WRAPPER</compoundname>
    <includes refid="PDJE__interface_8hpp" local="no">PDJE_interface.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classARGSETTER__WRAPPER_1ac460e475724b8ff01c047971b2d65e2f" prot="private" static="no" mutable="no">
        <type><ref refid="classFXControlPannel" kindref="compound">FXControlPannel</ref> *</type>
        <definition>FXControlPannel* ARGSETTER_WRAPPER::fxp</definition>
        <argsstring></argsstring>
        <name>fxp</name>
        <qualifiedname>ARGSETTER_WRAPPER::fxp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interface/PDJE_interface.hpp" line="144" column="21" bodyfile="include/interface/PDJE_interface.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classARGSETTER__WRAPPER_1a8a8b6689af34752a34bee477f338111a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ARGSETTER_WRAPPER::ARGSETTER_WRAPPER</definition>
        <argsstring>(FXControlPannel *pointer)</argsstring>
        <name>ARGSETTER_WRAPPER</name>
        <qualifiedname>ARGSETTER_WRAPPER::ARGSETTER_WRAPPER</qualifiedname>
        <param>
          <type><ref refid="classFXControlPannel" kindref="compound">FXControlPannel</ref> *</type>
          <declname>pointer</declname>
        </param>
        <briefdescription>
<para>Construct a new argsetter wrapper object wraps the <ref refid="classFXControlPannel" kindref="compound">FXControlPannel</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pointer</parametername>
</parameternamelist>
<parameterdescription>
<para>the controlpannel object, you can get this from music handler. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interface/PDJE_interface.hpp" line="151" column="5" bodyfile="include/interface/PDJE_interface.hpp" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classARGSETTER__WRAPPER_1a41a20d9176cd113b42cee80ec464c9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ARGSETTER_WRAPPER::~ARGSETTER_WRAPPER</definition>
        <argsstring>()=default</argsstring>
        <name>~ARGSETTER_WRAPPER</name>
        <qualifiedname>ARGSETTER_WRAPPER::~ARGSETTER_WRAPPER</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interface/PDJE_interface.hpp" line="152" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classARGSETTER__WRAPPER_1a1b2d541718d9f5d474fd5af898a02e76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; ARGSETTER_WRAPPER::GetFXArgKeys</definition>
        <argsstring>(FXList fx)</argsstring>
        <name>GetFXArgKeys</name>
        <qualifiedname>ARGSETTER_WRAPPER::GetFXArgKeys</qualifiedname>
        <param>
          <type><ref refid="ManualMix_8hpp_1ae8d2b13e6207a0b5d8195a3775e3e1c3" kindref="member">FXList</ref></type>
          <declname>fx</declname>
        </param>
        <briefdescription>
<para>gets the available fx list returns available fx key list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fx</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of fx. check the <ref refid="ManualMix_8hpp_1ae8d2b13e6207a0b5d8195a3775e3e1c3" kindref="member">FXList</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;std::string&gt; the key list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interface/PDJE_interface.hpp" line="159" column="17" bodyfile="include/interface/PDJE_polyglot_wraps.cpp" bodystart="16" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classARGSETTER__WRAPPER_1aeec701bc7347401a94ad1e52a7720bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ARGSETTER_WRAPPER::SetFXArg</definition>
        <argsstring>(FXList fx, const std::string &amp;key, double arg)</argsstring>
        <name>SetFXArg</name>
        <qualifiedname>ARGSETTER_WRAPPER::SetFXArg</qualifiedname>
        <param>
          <type><ref refid="ManualMix_8hpp_1ae8d2b13e6207a0b5d8195a3775e3e1c3" kindref="member">FXList</ref></type>
          <declname>fx</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>set fx in realtime. sets the fx in realtime. better to check the fx key before use if you don&apos;t know. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fx</parametername>
</parameternamelist>
<parameterdescription>
<para>the tyoe of fx. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of the fx arg </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>arg</parametername>
</parameternamelist>
<parameterdescription>
<para>value to change </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/interface/PDJE_interface.hpp" line="168" column="5" bodyfile="include/interface/PDJE_polyglot_wraps.cpp" bodystart="30" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>the realtime fx controller wrapper class for binded languages. the argsetter is basically unordered_map. but the binded languges can&apos;t use that, so this wrapper exists. with this, you can control fx in realtime. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>ARGSETTER_WRAPPER</label>
        <link refid="classARGSETTER__WRAPPER"/>
        <childnode refid="2" relation="usage">
          <edgelabel>fxp</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>FXControlPannel</label>
        <link refid="classFXControlPannel"/>
        <childnode refid="3" relation="usage">
          <edgelabel>compressorPannel</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>distortionPannel</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>echoPannel</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>eqPannel</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>filterPannel</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>flangerPannel</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>ocsFilterPannel</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>pannerPannel</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>phaserPannel</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>robotPannel</edgelabel>
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>rollPannel</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>trancePannel</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>volPannel</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::pair&lt; bool, CompressorFAUSTMan &gt;</label>
      </node>
      <node id="4">
        <label>std::pair&lt; bool, DistortionFAUSTMan &gt;</label>
      </node>
      <node id="6">
        <label>std::pair&lt; bool, EQFAUSTMan &gt;</label>
      </node>
      <node id="5">
        <label>std::pair&lt; bool, EchoFAUSTMan &gt;</label>
      </node>
      <node id="7">
        <label>std::pair&lt; bool, FilterFAUSTMan &gt;</label>
      </node>
      <node id="8">
        <label>std::pair&lt; bool, FlangerFAUSTMan &gt;</label>
      </node>
      <node id="9">
        <label>std::pair&lt; bool, OcsFilterFAUSTMan &gt;</label>
      </node>
      <node id="10">
        <label>std::pair&lt; bool, PannerFAUSTMan &gt;</label>
      </node>
      <node id="11">
        <label>std::pair&lt; bool, PhaserFAUSTMan &gt;</label>
      </node>
      <node id="12">
        <label>std::pair&lt; bool, RobotFAUSTMan &gt;</label>
      </node>
      <node id="13">
        <label>std::pair&lt; bool, RollFAUSTMan &gt;</label>
      </node>
      <node id="14">
        <label>std::pair&lt; bool, TranceFAUSTMan &gt;</label>
      </node>
      <node id="15">
        <label>std::pair&lt; bool, VolFAUSTMan &gt;</label>
      </node>
    </collaborationgraph>
    <location file="include/interface/PDJE_interface.hpp" line="142" column="1" bodyfile="include/interface/PDJE_interface.hpp" bodystart="142" bodyend="173"/>
    <listofallmembers>
      <member refid="classARGSETTER__WRAPPER_1a8a8b6689af34752a34bee477f338111a" prot="public" virt="non-virtual"><scope>ARGSETTER_WRAPPER</scope><name>ARGSETTER_WRAPPER</name></member>
      <member refid="classARGSETTER__WRAPPER_1ac460e475724b8ff01c047971b2d65e2f" prot="private" virt="non-virtual"><scope>ARGSETTER_WRAPPER</scope><name>fxp</name></member>
      <member refid="classARGSETTER__WRAPPER_1a1b2d541718d9f5d474fd5af898a02e76" prot="public" virt="non-virtual"><scope>ARGSETTER_WRAPPER</scope><name>GetFXArgKeys</name></member>
      <member refid="classARGSETTER__WRAPPER_1aeec701bc7347401a94ad1e52a7720bb2" prot="public" virt="non-virtual"><scope>ARGSETTER_WRAPPER</scope><name>SetFXArg</name></member>
      <member refid="classARGSETTER__WRAPPER_1a41a20d9176cd113b42cee80ec464c9ff" prot="public" virt="non-virtual"><scope>ARGSETTER_WRAPPER</scope><name>~ARGSETTER_WRAPPER</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
