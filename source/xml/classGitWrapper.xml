<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="classGitWrapper" kind="class" language="C++" prot="public">
    <compoundname>GitWrapper</compoundname>
    <includes refid="gitWrapper_8hpp" local="no">gitWrapper.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGitWrapper_1a2307a0946b74a74440793557682d2787" prot="private" static="no" mutable="no">
        <type>git_signature *</type>
        <definition>git_signature* GitWrapper::auth_sign</definition>
        <argsstring></argsstring>
        <name>auth_sign</name>
        <qualifiedname>GitWrapper::auth_sign</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="27" column="19" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGitWrapper_1a168f82a04ce859e339f9fc4e0286e04d" prot="private" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classAddController" kindref="compound">AddController</ref> &gt;</type>
        <definition>std::optional&lt;AddController&gt; GitWrapper::addIndex</definition>
        <argsstring></argsstring>
        <name>addIndex</name>
        <qualifiedname>GitWrapper::addIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="28" column="19" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classGitWrapper_1a95b889758023dafa8d08563aaf5729ad" prot="public" static="no" mutable="no">
        <type>git_repository *</type>
        <definition>git_repository* GitWrapper::repo</definition>
        <argsstring></argsstring>
        <name>repo</name>
        <qualifiedname>GitWrapper::repo</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="30" column="20" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGitWrapper_1a2c5d649edd00c0a8de2d487082137aee" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classgitwrap_1_1logHandle" kindref="compound">gitwrap::logHandle</ref> &gt;</type>
        <definition>std::optional&lt;gitwrap::logHandle&gt; GitWrapper::log_hdl</definition>
        <argsstring></argsstring>
        <name>log_hdl</name>
        <qualifiedname>GitWrapper::log_hdl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="31" column="19" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGitWrapper_1a6bf7e4eeceae816ce7c423d89843ad0a" prot="public" static="no" mutable="no">
        <type><ref refid="gitWrapper_8hpp_1abf5aad0c0dda41ba18471ae87c3b2346" kindref="member">BRANCH_HANDLE</ref></type>
        <definition>BRANCH_HANDLE GitWrapper::handleBranch</definition>
        <argsstring></argsstring>
        <name>handleBranch</name>
        <qualifiedname>GitWrapper::handleBranch</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="32" column="19" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classGitWrapper_1a67e0f6593a307afee0db7166a725fec3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GitWrapper::add</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>add</name>
        <qualifiedname>GitWrapper::add</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="34" column="10" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1a43de6ab6d8ac6e079d5a652b7ac9ef86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GitWrapper::open</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>open</name>
        <qualifiedname>GitWrapper::open</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="35" column="10" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="60" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1a9248ff6564221374cec0837c97747ca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structDiffResult" kindref="compound">DiffResult</ref></type>
        <definition>DiffResult GitWrapper::diff</definition>
        <argsstring>(const gitwrap::commit &amp;oldCommit, const gitwrap::commit &amp;newCommit)</argsstring>
        <name>diff</name>
        <qualifiedname>GitWrapper::diff</qualifiedname>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>oldCommit</declname>
        </param>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>newCommit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="37" column="16" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="27" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1a7f20922cba4a2a4aadcdde26d9aa910f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="gitWrapper_8hpp_1a40e5ded694a4fe46703b6961ad90bc9b" kindref="member">MAYBE_BLAME</ref></type>
        <definition>MAYBE_BLAME GitWrapper::Blame</definition>
        <argsstring>(const std::string &amp;filepath, const gitwrap::commit &amp;newCommit, const gitwrap::commit &amp;oldCommit)</argsstring>
        <name>Blame</name>
        <qualifiedname>GitWrapper::Blame</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>filepath</declname>
        </param>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>newCommit</declname>
        </param>
        <param>
          <type>const <ref refid="structgitwrap_1_1commit" kindref="compound">gitwrap::commit</ref> &amp;</type>
          <declname>oldCommit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="41" column="17" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="11" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1a4a8155aae8a8e414a3bd11410b95bef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GitWrapper::commit</definition>
        <argsstring>(git_signature *sign, const std::string &amp;message)</argsstring>
        <name>commit</name>
        <qualifiedname>GitWrapper::commit</qualifiedname>
        <param>
          <type>git_signature *</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="46" column="10" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="106" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1a174d1a1a0f8b8b8b15c04fb7d90ea38b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GitWrapper::log</definition>
        <argsstring>()</argsstring>
        <name>log</name>
        <qualifiedname>GitWrapper::log</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="48" column="10" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="161" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1abe24ea986dc68b04555cf2328b5424ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GitWrapper::log</definition>
        <argsstring>(const std::string &amp;branchName)</argsstring>
        <name>log</name>
        <qualifiedname>GitWrapper::log</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>branchName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="49" column="10" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="180" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1a1b411134e5dac271fa3d400e66736df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool GitWrapper::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <qualifiedname>GitWrapper::close</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="55" column="10" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1a2bd651dfe8cbd77c30d4e70186c43c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GitWrapper::GitWrapper</definition>
        <argsstring>()</argsstring>
        <name>GitWrapper</name>
        <qualifiedname>GitWrapper::GitWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="56" column="5" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classGitWrapper_1a36909e3fc709f3a3f24e1e7865254a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GitWrapper::~GitWrapper</definition>
        <argsstring>()</argsstring>
        <name>~GitWrapper</name>
        <qualifiedname>GitWrapper::~GitWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="57" column="5" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="94" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classGitWrapper_1a70db700de34d6793b1c8b5f5c115519f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string GitWrapper::GenTimeStamp</definition>
        <argsstring>()</argsstring>
        <name>GenTimeStamp</name>
        <qualifiedname>GitWrapper::GenTimeStamp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="51" column="24" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.cpp" bodystart="192" bodyend="213"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" line="25" column="1" bodyfile="include/editor/featureWrapper/GitWrap/gitWrapper.hpp" bodystart="25" bodyend="58"/>
    <listofallmembers>
      <member refid="classGitWrapper_1a67e0f6593a307afee0db7166a725fec3" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>add</name></member>
      <member refid="classGitWrapper_1a168f82a04ce859e339f9fc4e0286e04d" prot="private" virt="non-virtual"><scope>GitWrapper</scope><name>addIndex</name></member>
      <member refid="classGitWrapper_1a2307a0946b74a74440793557682d2787" prot="private" virt="non-virtual"><scope>GitWrapper</scope><name>auth_sign</name></member>
      <member refid="classGitWrapper_1a7f20922cba4a2a4aadcdde26d9aa910f" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>Blame</name></member>
      <member refid="classGitWrapper_1a1b411134e5dac271fa3d400e66736df4" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>close</name></member>
      <member refid="classGitWrapper_1a4a8155aae8a8e414a3bd11410b95bef6" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>commit</name></member>
      <member refid="classGitWrapper_1a9248ff6564221374cec0837c97747ca1" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>diff</name></member>
      <member refid="classGitWrapper_1a70db700de34d6793b1c8b5f5c115519f" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>GenTimeStamp</name></member>
      <member refid="classGitWrapper_1a2bd651dfe8cbd77c30d4e70186c43c03" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>GitWrapper</name></member>
      <member refid="classGitWrapper_1a6bf7e4eeceae816ce7c423d89843ad0a" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>handleBranch</name></member>
      <member refid="classGitWrapper_1a174d1a1a0f8b8b8b15c04fb7d90ea38b" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>log</name></member>
      <member refid="classGitWrapper_1abe24ea986dc68b04555cf2328b5424ae" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>log</name></member>
      <member refid="classGitWrapper_1a2c5d649edd00c0a8de2d487082137aee" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>log_hdl</name></member>
      <member refid="classGitWrapper_1a43de6ab6d8ac6e079d5a652b7ac9ef86" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>open</name></member>
      <member refid="classGitWrapper_1a95b889758023dafa8d08563aaf5729ad" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>repo</name></member>
      <member refid="classGitWrapper_1a36909e3fc709f3a3f24e1e7865254a8b" prot="public" virt="non-virtual"><scope>GitWrapper</scope><name>~GitWrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
