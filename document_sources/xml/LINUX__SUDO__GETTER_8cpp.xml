<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="LINUX__SUDO__GETTER_8cpp" kind="file" language="C++">
    <compoundname>LINUX_SUDO_GETTER.cpp</compoundname>
    <includes refid="LINUX__INPUT_8hpp" local="yes">LINUX_INPUT.hpp</includes>
    <includes local="no">filesystem</includes>
    <includes local="no">fcntl.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="3">
        <label>PDJE_INPUT.hpp</label>
        <link refid="PDJE__INPUT_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>LINUX_INPUT.hpp</label>
        <link refid="LINUX__INPUT_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/input/linux/LINUX_SUDO_GETTER.cpp</label>
        <link refid="LINUX__SUDO__GETTER_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>fcntl.h</label>
      </node>
      <node id="7">
        <label>filesystem</label>
      </node>
      <node id="10">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>libevdev-1.0/libevdev/libevdev.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="9">
        <label>unistd.h</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>using EV_LIST =  std::vector&lt;std::string&gt;</definition>
        <argsstring></argsstring>
        <name>EV_LIST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/input/linux/LINUX_SUDO_GETTER.cpp" line="10" column="1" bodyfile="include/input/linux/LINUX_SUDO_GETTER.cpp" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="LINUX__SUDO__GETTER_8cpp_1a071ad4c80a013a30ce51bdc187a8b887" prot="public" static="no">
        <type>std::vector&lt; DeviceData &gt;</type>
        <definition>using DEV_LIST =  std::vector&lt;DeviceData&gt;</definition>
        <argsstring></argsstring>
        <name>DEV_LIST</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/input/linux/LINUX_SUDO_GETTER.cpp" line="11" column="1" bodyfile="include/input/linux/LINUX_SUDO_GETTER.cpp" bodystart="11" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="LINUX__SUDO__GETTER_8cpp_1a392860ee66fd37997232c4adaeb5013f" prot="public" static="no" constexpr="yes" mutable="no">
        <type>auto</type>
        <definition>auto EVENT_ROOT</definition>
        <argsstring></argsstring>
        <name>EVENT_ROOT</name>
        <initializer>= &quot;/dev/input/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/input/linux/LINUX_SUDO_GETTER.cpp" line="6" column="16" bodyfile="include/input/linux/LINUX_SUDO_GETTER.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="LINUX__SUDO__GETTER_8cpp_1aea739ce0b7f7a3387d9cf64bd26d95b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" kindref="member">EV_LIST</ref></type>
        <definition>EV_LIST EventListGetter</definition>
        <argsstring>()</argsstring>
        <name>EventListGetter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/input/linux/LINUX_SUDO_GETTER.cpp" line="14" column="1" bodyfile="include/input/linux/LINUX_SUDO_GETTER.cpp" bodystart="14" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="LINUX__SUDO__GETTER_8cpp_1a9bd9474de4c81e5a75a37839d77b2377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CHK_QWERTY</definition>
        <argsstring>(libevdev *dev)</argsstring>
        <name>CHK_QWERTY</name>
        <param>
          <type>libevdev *</type>
          <declname>dev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/input/linux/LINUX_SUDO_GETTER.cpp" line="29" column="1" bodyfile="include/input/linux/LINUX_SUDO_GETTER.cpp" bodystart="29" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="LINUX__SUDO__GETTER_8cpp_1ab97e546c7a36e4221b605b874bcf9182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="LINUX__SUDO__GETTER_8cpp_1a071ad4c80a013a30ce51bdc187a8b887" kindref="member">DEV_LIST</ref></type>
        <definition>DEV_LIST DeviceDataGetter</definition>
        <argsstring>(const EV_LIST &amp;list)</argsstring>
        <name>DeviceDataGetter</name>
        <param>
          <type>const <ref refid="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" kindref="member">EV_LIST</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/input/linux/LINUX_SUDO_GETTER.cpp" line="42" column="1" bodyfile="include/input/linux/LINUX_SUDO_GETTER.cpp" bodystart="42" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="LINUX__SUDO__GETTER_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/input/linux/LINUX_SUDO_GETTER.cpp" line="76" column="1" bodyfile="include/input/linux/LINUX_SUDO_GETTER.cpp" bodystart="76" bodyend="91"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="LINUX__INPUT_8hpp" kindref="compound">LINUX_INPUT.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="LINUX__SUDO__GETTER_8cpp_1a392860ee66fd37997232c4adaeb5013f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="LINUX__SUDO__GETTER_8cpp_1a392860ee66fd37997232c4adaeb5013f" kindref="member">EVENT_ROOT</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/dev/input/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>=<sp/>std::filesystem;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" kindref="member">EV_LIST</ref><sp/>=<sp/>std::vector&lt;std::string&gt;;</highlight></codeline>
<codeline lineno="11" refid="LINUX__SUDO__GETTER_8cpp_1a071ad4c80a013a30ce51bdc187a8b887" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="LINUX__SUDO__GETTER_8cpp_1a071ad4c80a013a30ce51bdc187a8b887" kindref="member">DEV_LIST</ref><sp/>=<sp/>std::vector&lt;DeviceData&gt;;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" kindref="member">EV_LIST</ref></highlight></codeline>
<codeline lineno="14" refid="LINUX__SUDO__GETTER_8cpp_1aea739ce0b7f7a3387d9cf64bd26d95b8" refkind="member"><highlight class="normal"><ref refid="LINUX__SUDO__GETTER_8cpp_1aea739ce0b7f7a3387d9cf64bd26d95b8" kindref="member">EventListGetter</ref>()</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fs::exists(<ref refid="LINUX__SUDO__GETTER_8cpp_1a392860ee66fd37997232c4adaeb5013f" kindref="member">EVENT_ROOT</ref>)<sp/>||<sp/>!fs::is_directory(<ref refid="LINUX__SUDO__GETTER_8cpp_1a392860ee66fd37997232c4adaeb5013f" kindref="member">EVENT_ROOT</ref>)){</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" kindref="member">EV_LIST</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" kindref="member">EV_LIST</ref><sp/>lists;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>fitr<sp/>:<sp/>fs::directory_iterator(<ref refid="LINUX__SUDO__GETTER_8cpp_1a392860ee66fd37997232c4adaeb5013f" kindref="member">EVENT_ROOT</ref>)){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fitr.path().filename().string().find(</highlight><highlight class="stringliteral">&quot;event&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lists.push_back(fs::absolute(fitr.path()));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lists;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="LINUX__SUDO__GETTER_8cpp_1a9bd9474de4c81e5a75a37839d77b2377" refkind="member"><highlight class="normal"><ref refid="LINUX__SUDO__GETTER_8cpp_1a9bd9474de4c81e5a75a37839d77b2377" kindref="member">CHK_QWERTY</ref>(libevdev*<sp/>dev)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>libevdev_has_event_code(dev,<sp/>EV_KEY,<sp/>KEY_Q)<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>libevdev_has_event_code(dev,<sp/>EV_KEY,<sp/>KEY_W)<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>libevdev_has_event_code(dev,<sp/>EV_KEY,<sp/>KEY_E)<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>libevdev_has_event_code(dev,<sp/>EV_KEY,<sp/>KEY_R)<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>libevdev_has_event_code(dev,<sp/>EV_KEY,<sp/>KEY_T)<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>libevdev_has_event_code(dev,<sp/>EV_KEY,<sp/>KEY_Y)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="LINUX__SUDO__GETTER_8cpp_1a071ad4c80a013a30ce51bdc187a8b887" kindref="member">DEV_LIST</ref></highlight></codeline>
<codeline lineno="42" refid="LINUX__SUDO__GETTER_8cpp_1ab97e546c7a36e4221b605b874bcf9182" refkind="member"><highlight class="normal"><ref refid="LINUX__SUDO__GETTER_8cpp_1ab97e546c7a36e4221b605b874bcf9182" kindref="member">DeviceDataGetter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="LINUX__SUDO__GETTER_8cpp_1a07c29355b1960208b10a600ba440b745" kindref="member">EV_LIST</ref>&amp;<sp/>list)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="LINUX__SUDO__GETTER_8cpp_1a071ad4c80a013a30ce51bdc187a8b887" kindref="member">DEV_LIST</ref><sp/>outs;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>evp<sp/>:<sp/>list){</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>evpFd<sp/>=<sp/>open(evp.c_str(),<sp/>O_RDONLY);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libevdev*<sp/>dev<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(libevdev_new_from_fd(evpFd,<sp/>&amp;dev)<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(evpFd);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DeviceData<sp/>temp;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.deviceName<sp/>=<sp/>libevdev_get_name(dev);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.deviceType.HAS_ABSOLUTE_AXIS_SENSOR<sp/>=<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libevdev_has_event_type(dev,<sp/>EV_ABS)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.deviceType.HAS_KEY_Q_W_E_R_T_Y<sp/>=<sp/><ref refid="LINUX__SUDO__GETTER_8cpp_1a9bd9474de4c81e5a75a37839d77b2377" kindref="member">CHK_QWERTY</ref>(dev);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.deviceType.HAS_RELATIVE_AXIS_SENSOR<sp/>=</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libevdev_has_event_type(dev,<sp/>EV_REL)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.deviceType.HAS_ABSOLUTE_AXIS_SENSOR<sp/>||</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.deviceType.HAS_KEY_Q_W_E_R_T_Y<sp/>||</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.deviceType.HAS_RELATIVE_AXIS_SENSOR</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>){</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outs.push_back(temp);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(evpFd);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>libevdev_free(dev);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>outs;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="76" refid="LINUX__SUDO__GETTER_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"><ref refid="audioTest_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><ref refid="LINUX__SUDO__GETTER_8cpp_1aea739ce0b7f7a3387d9cf64bd26d95b8" kindref="member">EventListGetter</ref>();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Dres<sp/>=<sp/><ref refid="LINUX__SUDO__GETTER_8cpp_1ab97e546c7a36e4221b605b874bcf9182" kindref="member">DeviceDataGetter</ref>(res);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>Dres){</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>i.deviceName</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Has<sp/>qwerty:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i.deviceType.HAS_KEY_Q_W_E_R_T_Y</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Has<sp/>Abs<sp/>sensor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i.deviceType.HAS_ABSOLUTE_AXIS_SENSOR</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Has<sp/>Rel<sp/>sensor:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i.deviceType.HAS_RELATIVE_AXIS_SENSOR</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/input/linux/LINUX_SUDO_GETTER.cpp"/>
  </compounddef>
</doxygen>
