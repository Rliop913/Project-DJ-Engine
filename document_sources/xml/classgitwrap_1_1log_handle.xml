<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="classgitwrap_1_1log_handle" kind="class" language="C++" prot="public">
    <compoundname>gitwrap::logHandle</compoundname>
    <includes refid="git_log_8hpp" local="no">gitLog.hpp</includes>
    <innerclass refid="structgitwrap_1_1log_handle_1_1_o_i_d___e_q_u_a_l" prot="private">gitwrap::logHandle::OID_EQUAL</innerclass>
    <innerclass refid="structgitwrap_1_1log_handle_1_1_o_i_d___h_a_s_h_e_r" prot="private">gitwrap::logHandle::OID_HASHER</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgitwrap_1_1log_handle_1a753671e59426a6944d630e73f899592d" prot="private" static="no" mutable="no">
        <type>git_repository *</type>
        <definition>git_repository* gitwrap::logHandle::repoPointer</definition>
        <argsstring></argsstring>
        <name>repoPointer</name>
        <qualifiedname>gitwrap::logHandle::repoPointer</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" line="45" column="20" bodyfile="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classgitwrap_1_1log_handle_1aca80a03c5e78e5325cf7c15c40a6261e" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; git_oid, <ref refid="structgitwrap_1_1log" kindref="compound">log</ref>, <ref refid="structgitwrap_1_1log_handle_1_1_o_i_d___h_a_s_h_e_r" kindref="compound">OID_HASHER</ref>, <ref refid="structgitwrap_1_1log_handle_1_1_o_i_d___e_q_u_a_l" kindref="compound">OID_EQUAL</ref> &gt;</type>
        <definition>std::unordered_map&lt;git_oid, log, OID_HASHER, OID_EQUAL&gt; gitwrap::logHandle::logs</definition>
        <argsstring></argsstring>
        <name>logs</name>
        <qualifiedname>gitwrap::logHandle::logs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" line="55" column="24" bodyfile="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgitwrap_1_1log_handle_1a743926f38143b9e13b48a46a07d9a19c" prot="public" static="no" mutable="no">
        <type>git_oid</type>
        <definition>git_oid gitwrap::logHandle::ROOT_ID</definition>
        <argsstring></argsstring>
        <name>ROOT_ID</name>
        <qualifiedname>gitwrap::logHandle::ROOT_ID</qualifiedname>
        <initializer>= { { 0 } }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" line="56" column="61" bodyfile="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="variable" id="classgitwrap_1_1log_handle_1aedfd7990069d74a9d196ffeb2b15ede7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structgitwrap_1_1_branch_head" kindref="compound">BranchHead</ref> &gt;</type>
        <definition>std::vector&lt;BranchHead&gt; gitwrap::logHandle::heads</definition>
        <argsstring></argsstring>
        <name>heads</name>
        <qualifiedname>gitwrap::logHandle::heads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" line="57" column="49" bodyfile="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="classgitwrap_1_1log_handle_1a6c4342d961a62096a4122a914b607e53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void logHandle::AddLog</definition>
        <argsstring>(const git_oid &amp;id, git_oid &amp;ChildID, const git_signature *&amp;sign, const std::string &amp;msg)</argsstring>
        <name>AddLog</name>
        <qualifiedname>gitwrap::logHandle::AddLog</qualifiedname>
        <param>
          <type>const git_oid &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>git_oid &amp;</type>
          <declname>ChildID</declname>
        </param>
        <param>
          <type>const git_signature *&amp;</type>
          <declname>sign</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" line="47" column="5" bodyfile="include/editor/featureWrapper/GitWrap/Log/gitLog.cpp" bodystart="108" bodyend="127"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classgitwrap_1_1log_handle_1ac6a7eafa275e397620d65d4cf43d43a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool logHandle::WalkBranch</definition>
        <argsstring>(const DONT_SANITIZE &amp;branchName)</argsstring>
        <name>WalkBranch</name>
        <qualifiedname>gitwrap::logHandle::WalkBranch</qualifiedname>
        <param>
          <type>const <ref refid="file_name_sanitizer_8hpp_1a2ec6d785f45dccabee178706d40c0d7d" kindref="member">DONT_SANITIZE</ref> &amp;</type>
          <declname>branchName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" line="54" column="5" bodyfile="include/editor/featureWrapper/GitWrap/Log/gitLog.cpp" bodystart="47" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classgitwrap_1_1log_handle_1a468cacb03601e6f5798d864488733db4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gitwrap::logHandle::logHandle</definition>
        <argsstring>(git_repository *repo)</argsstring>
        <name>logHandle</name>
        <qualifiedname>gitwrap::logHandle::logHandle</qualifiedname>
        <param>
          <type>git_repository *</type>
          <declname>repo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" line="58" column="5" bodyfile="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Collects logs for a Git repository. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8">
        <label>gitwrap::BranchHead</label>
        <link refid="structgitwrap_1_1_branch_head"/>
        <childnode refid="5" relation="usage">
          <edgelabel>BranchName</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>gitwrap::commit</label>
        <link refid="structgitwrap_1_1commit"/>
        <childnode refid="5" relation="usage">
          <edgelabel>msg</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>gitwrap::log</label>
        <link refid="structgitwrap_1_1log"/>
        <childnode refid="4" relation="usage">
          <edgelabel>now</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>authEmail</edgelabel>
          <edgelabel>authName</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>gitwrap::logHandle</label>
        <link refid="classgitwrap_1_1log_handle"/>
        <childnode refid="2" relation="usage">
          <edgelabel>logs</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>heads</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::unordered_map&lt; git_oid, gitwrap::log, gitwrap::logHandle::OID_HASHER, gitwrap::logHandle::OID_EQUAL &gt;</label>
        <childnode refid="3" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::vector&lt; gitwrap::BranchHead &gt;</label>
        <childnode refid="8" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" line="32" column="1" bodyfile="include/editor/featureWrapper/GitWrap/Log/gitLog.hpp" bodystart="32" bodyend="61"/>
    <listofallmembers>
      <member refid="classgitwrap_1_1log_handle_1a6c4342d961a62096a4122a914b607e53" prot="private" virt="non-virtual"><scope>gitwrap::logHandle</scope><name>AddLog</name></member>
      <member refid="classgitwrap_1_1log_handle_1aedfd7990069d74a9d196ffeb2b15ede7" prot="public" virt="non-virtual"><scope>gitwrap::logHandle</scope><name>heads</name></member>
      <member refid="classgitwrap_1_1log_handle_1a468cacb03601e6f5798d864488733db4" prot="public" virt="non-virtual"><scope>gitwrap::logHandle</scope><name>logHandle</name></member>
      <member refid="classgitwrap_1_1log_handle_1aca80a03c5e78e5325cf7c15c40a6261e" prot="public" virt="non-virtual"><scope>gitwrap::logHandle</scope><name>logs</name></member>
      <member refid="classgitwrap_1_1log_handle_1a753671e59426a6944d630e73f899592d" prot="private" virt="non-virtual"><scope>gitwrap::logHandle</scope><name>repoPointer</name></member>
      <member refid="classgitwrap_1_1log_handle_1a743926f38143b9e13b48a46a07d9a19c" prot="public" virt="non-virtual"><scope>gitwrap::logHandle</scope><name>ROOT_ID</name></member>
      <member refid="classgitwrap_1_1log_handle_1ac6a7eafa275e397620d65d4cf43d43a9" prot="public" virt="non-virtual"><scope>gitwrap::logHandle</scope><name>WalkBranch</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
