<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_music_control_panel" kind="class" language="C++" prot="public">
    <compoundname>MusicControlPanel</compoundname>
    <includes refid="_music_control_panel_8hpp" local="no">MusicControlPanel.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_music_control_panel_1af36b0923a3d05ae3d9cea0905a7400cf" prot="private" static="no" mutable="no">
        <type><ref refid="_music_control_panel_8hpp_1ab133b0d81c222324c3cd46e91d30fb7d" kindref="member">LOADS</ref></type>
        <definition>LOADS MusicControlPanel::deck</definition>
        <argsstring></argsstring>
        <name>deck</name>
        <qualifiedname>MusicControlPanel::deck</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="55" column="24" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_music_control_panel_1a20950af67c74663869998a05316b4ccb" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long MusicControlPanel::fsize</definition>
        <argsstring></argsstring>
        <name>fsize</name>
        <qualifiedname>MusicControlPanel::fsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="56" column="24" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_music_control_panel_1a32eac083fad2d237e4f6a2d8f1bcf99e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; MusicControlPanel::L</definition>
        <argsstring></argsstring>
        <name>L</name>
        <qualifiedname>MusicControlPanel::L</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="57" column="17" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_music_control_panel_1ac3e3b1a967512f82657ef45daf853435" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; MusicControlPanel::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <qualifiedname>MusicControlPanel::R</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="58" column="17" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_music_control_panel_1a265711869310b9b3cb8e2f85913970c5" prot="private" static="no" mutable="no">
        <type>float *</type>
        <definition>float* MusicControlPanel::FaustStyle[2]</definition>
        <argsstring>[2]</argsstring>
        <name>FaustStyle</name>
        <qualifiedname>MusicControlPanel::FaustStyle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="59" column="23" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_music_control_panel_1a6ad29adb184c0c20fba0719699ae795e" prot="private" static="no" mutable="no">
        <type><ref refid="_frame_calc_8hpp_1a4ae0f789157647f4609ec87fb5b58e5a" kindref="member">SIMD_FLOAT</ref></type>
        <definition>SIMD_FLOAT MusicControlPanel::tempFrames</definition>
        <argsstring></argsstring>
        <name>tempFrames</name>
        <qualifiedname>MusicControlPanel::tempFrames</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="60" column="24" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_music_control_panel_1a9be0839875b9dff117fdbcdf73f4e65b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPanel::LoadMusic</definition>
        <argsstring>(litedb &amp;ROOTDB, const musdata &amp;Mus)</argsstring>
        <name>LoadMusic</name>
        <qualifiedname>MusicControlPanel::LoadMusic</qualifiedname>
        <param>
          <type><ref refid="classlitedb" kindref="compound">litedb</ref> &amp;</type>
          <declname>ROOTDB</declname>
        </param>
        <param>
          <type>const <ref refid="structmusdata" kindref="compound">musdata</ref> &amp;</type>
          <declname>Mus</declname>
        </param>
        <briefdescription>
<para>loads music to the deck. doesn&apos;t play music </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Mus</parametername>
</parameternamelist>
<parameterdescription>
<para>Searched music </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int, miniaudio Error code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="70" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="16" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1aff83252ee3ea2fdfaadee240a6b4767f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPanel::CueMusic</definition>
        <argsstring>(const UNSANITIZED &amp;title, const unsigned long long newPos)</argsstring>
        <name>CueMusic</name>
        <qualifiedname>MusicControlPanel::CueMusic</qualifiedname>
        <param>
          <type>const <ref refid="file_name_sanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const unsigned long long</type>
          <declname>newPos</declname>
        </param>
        <briefdescription>
<para>Change playback position of the music. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the music title </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newPos</parametername>
</parameternamelist>
<parameterdescription>
<para>the new playback position of the music </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="81" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="28" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1a1d0dc5b2e370204451d3cb825d06b447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPanel::SetMusic</definition>
        <argsstring>(const UNSANITIZED &amp;title, const bool onOff)</argsstring>
        <name>SetMusic</name>
        <qualifiedname>MusicControlPanel::SetMusic</qualifiedname>
        <param>
          <type>const <ref refid="file_name_sanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onOff</declname>
        </param>
        <briefdescription>
<para>turn on, off the music </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the music title </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onOff</parametername>
</parameternamelist>
<parameterdescription>
<para>True is on, False is off </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="92" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="49" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1a9c907708f446fc07c35b86d4b418e528" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_music_control_panel_8hpp_1ade6cd1e55ebee7c7fbbe63cd3590d1d8" kindref="member">LOADED_LIST</ref></type>
        <definition>LOADED_LIST MusicControlPanel::GetLoadedMusicList</definition>
        <argsstring>()</argsstring>
        <name>GetLoadedMusicList</name>
        <qualifiedname>MusicControlPanel::GetLoadedMusicList</qualifiedname>
        <briefdescription>
<para>get music list on the deck </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="_music_control_panel_8hpp_1ade6cd1e55ebee7c7fbbe63cd3590d1d8" kindref="member">LOADED_LIST</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="100" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="69" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1a3a5480ccf19fc13e60aec7fca85b8563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPanel::UnloadMusic</definition>
        <argsstring>(const UNSANITIZED &amp;title)</argsstring>
        <name>UnloadMusic</name>
        <qualifiedname>MusicControlPanel::UnloadMusic</qualifiedname>
        <param>
          <type>const <ref refid="file_name_sanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>unload music from deck. used to prevent memory leaks. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the target music title </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="110" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="80" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1ae587a6946f1ae53cb97cc97497d3a971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPanel::GetPCMFrames</definition>
        <argsstring>(float *array, const unsigned long FrameSize)</argsstring>
        <name>GetPCMFrames</name>
        <qualifiedname>MusicControlPanel::GetPCMFrames</qualifiedname>
        <param>
          <type>float *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const unsigned long</type>
          <declname>FrameSize</declname>
        </param>
        <briefdescription>
<para>gets decoded pcm frames </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>array</parametername>
</parameternamelist>
<parameterdescription>
<para>pcm array output </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FrameSize</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of frames </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="121" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1a2ea5356a473fdcf9cf14ec319f138dfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_f_x_control_panel" kindref="compound">FXControlPanel</ref> *</type>
        <definition>FXControlPanel * MusicControlPanel::getFXHandle</definition>
        <argsstring>(const UNSANITIZED &amp;title)</argsstring>
        <name>getFXHandle</name>
        <qualifiedname>MusicControlPanel::getFXHandle</qualifiedname>
        <param>
          <type>const <ref refid="file_name_sanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>gets FX handler </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the title of the music </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>FXControlPanel*, the handler pointer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="130" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="102" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1a1c467730a01f21ee57eb54eb0d03c8ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MusicControlPanel::ChangeBpm</definition>
        <argsstring>(const UNSANITIZED &amp;title, const double targetBpm, const double originBpm)</argsstring>
        <name>ChangeBpm</name>
        <qualifiedname>MusicControlPanel::ChangeBpm</qualifiedname>
        <param>
          <type>const <ref refid="file_name_sanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>targetBpm</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>originBpm</declname>
        </param>
        <briefdescription>
<para>changes music&apos;s bpm </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>the title of the music </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>targetBpm</parametername>
</parameternamelist>
<parameterdescription>
<para>the target bpm of the music </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>originBpm</parametername>
</parameternamelist>
<parameterdescription>
<para>the origin bpm of the music </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true </para>
</simplesect>
<simplesect kind="return"><para>false </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="142" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="122" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1a5dea7ded723f169049baa9ebd35694b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>MusicControlPanel::MusicControlPanel</definition>
        <argsstring>(const unsigned long FrameSize)</argsstring>
        <name>MusicControlPanel</name>
        <qualifiedname>MusicControlPanel::MusicControlPanel</qualifiedname>
        <param>
          <type>const unsigned long</type>
          <declname>FrameSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="146" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.hpp" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_music_control_panel_1a9facff0d058bdae7f005cbe3b0868d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MusicControlPanel::~MusicControlPanel</definition>
        <argsstring>()</argsstring>
        <name>~MusicControlPanel</name>
        <qualifiedname>MusicControlPanel::~MusicControlPanel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="149" column="5" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Music handler for manual mode. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>MusicControlPanel</label>
        <link refid="class_music_control_panel"/>
        <childnode refid="2" relation="usage">
          <edgelabel>deck</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>L</edgelabel>
          <edgelabel>R</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>tempFrames</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::map&lt; std::string, MusicOnDeck &gt;</label>
      </node>
      <node id="3">
        <label>std::vector&lt; float &gt;</label>
      </node>
      <node id="4">
        <label>std::vector&lt; float, hwy::AlignedAllocator&lt; float &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="core_include/audioRender/ManualMix/MusicControlPanel.hpp" line="53" column="1" bodyfile="core_include/audioRender/ManualMix/MusicControlPanel.hpp" bodystart="53" bodyend="150"/>
    <listofallmembers>
      <member refid="class_music_control_panel_1a1c467730a01f21ee57eb54eb0d03c8ae" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>ChangeBpm</name></member>
      <member refid="class_music_control_panel_1aff83252ee3ea2fdfaadee240a6b4767f" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>CueMusic</name></member>
      <member refid="class_music_control_panel_1af36b0923a3d05ae3d9cea0905a7400cf" prot="private" virt="non-virtual"><scope>MusicControlPanel</scope><name>deck</name></member>
      <member refid="class_music_control_panel_1a265711869310b9b3cb8e2f85913970c5" prot="private" virt="non-virtual"><scope>MusicControlPanel</scope><name>FaustStyle</name></member>
      <member refid="class_music_control_panel_1a20950af67c74663869998a05316b4ccb" prot="private" virt="non-virtual"><scope>MusicControlPanel</scope><name>fsize</name></member>
      <member refid="class_music_control_panel_1a2ea5356a473fdcf9cf14ec319f138dfd" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>getFXHandle</name></member>
      <member refid="class_music_control_panel_1a9c907708f446fc07c35b86d4b418e528" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>GetLoadedMusicList</name></member>
      <member refid="class_music_control_panel_1ae587a6946f1ae53cb97cc97497d3a971" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>GetPCMFrames</name></member>
      <member refid="class_music_control_panel_1a32eac083fad2d237e4f6a2d8f1bcf99e" prot="private" virt="non-virtual"><scope>MusicControlPanel</scope><name>L</name></member>
      <member refid="class_music_control_panel_1a9be0839875b9dff117fdbcdf73f4e65b" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>LoadMusic</name></member>
      <member refid="class_music_control_panel_1a5dea7ded723f169049baa9ebd35694b4" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>MusicControlPanel</name></member>
      <member refid="class_music_control_panel_1ac3e3b1a967512f82657ef45daf853435" prot="private" virt="non-virtual"><scope>MusicControlPanel</scope><name>R</name></member>
      <member refid="class_music_control_panel_1a1d0dc5b2e370204451d3cb825d06b447" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>SetMusic</name></member>
      <member refid="class_music_control_panel_1a6ad29adb184c0c20fba0719699ae795e" prot="private" virt="non-virtual"><scope>MusicControlPanel</scope><name>tempFrames</name></member>
      <member refid="class_music_control_panel_1a3a5480ccf19fc13e60aec7fca85b8563" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>UnloadMusic</name></member>
      <member refid="class_music_control_panel_1a9facff0d058bdae7f005cbe3b0868d06" prot="public" virt="non-virtual"><scope>MusicControlPanel</scope><name>~MusicControlPanel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
