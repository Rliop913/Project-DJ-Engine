<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="structaudioEngineDataStruct" kind="struct" language="C++" prot="public">
    <compoundname>audioEngineDataStruct</compoundname>
    <includes refid="audioCallbacks_8hpp" local="no">audioCallbacks.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structaudioEngineDataStruct_1aab0d65b85bfb5bf76929c7773a239b26" prot="public" static="no" mutable="no">
        <type>float *</type>
        <definition>float* audioEngineDataStruct::faustPcmPP[2]</definition>
        <argsstring>[2]</argsstring>
        <name>faustPcmPP</name>
        <qualifiedname>audioEngineDataStruct::faustPcmPP</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="17" column="37" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaudioEngineDataStruct_1a43d868f597776d70780535bfa6e6e944" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classFXControlPanel" kindref="compound">FXControlPanel</ref> &gt;</type>
        <definition>std::optional&lt;FXControlPanel&gt; audioEngineDataStruct::FXManualPanel</definition>
        <argsstring></argsstring>
        <name>FXManualPanel</name>
        <qualifiedname>audioEngineDataStruct::FXManualPanel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="18" column="22" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaudioEngineDataStruct_1af8e16a70120ec10649b46c1a29edd024" prot="public" static="no" mutable="no">
        <type>std::optional&lt; <ref refid="classMusicControlPanel" kindref="compound">MusicControlPanel</ref> &gt;</type>
        <definition>std::optional&lt;MusicControlPanel&gt; audioEngineDataStruct::MusCtrPanel</definition>
        <argsstring></argsstring>
        <name>MusCtrPanel</name>
        <qualifiedname>audioEngineDataStruct::MusCtrPanel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="19" column="19" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaudioEngineDataStruct_1a8d268640e253174af00cbbfe8a53df17" prot="public" static="no" mutable="no">
        <type>std::vector&lt; float &gt; *</type>
        <definition>std::vector&lt;float&gt;* audioEngineDataStruct::pcmDataPoint</definition>
        <argsstring></argsstring>
        <name>pcmDataPoint</name>
        <qualifiedname>audioEngineDataStruct::pcmDataPoint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="20" column="30" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaudioEngineDataStruct_1a8c80d4c0987b22ecd0d36d0865790294" prot="public" static="no" mutable="no">
        <type>unsigned long long</type>
        <definition>unsigned long long audioEngineDataStruct::nowCursor</definition>
        <argsstring></argsstring>
        <name>nowCursor</name>
        <qualifiedname>audioEngineDataStruct::nowCursor</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="21" column="38" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaudioEngineDataStruct_1ad4d8e64bb991cbc14357cae3d68f339a" prot="public" static="no" mutable="no">
        <type>unsigned long long</type>
        <definition>unsigned long long audioEngineDataStruct::maxCursor</definition>
        <argsstring></argsstring>
        <name>maxCursor</name>
        <qualifiedname>audioEngineDataStruct::maxCursor</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="22" column="38" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaudioEngineDataStruct_1a13daa0ec5eccfa3235b4dfa0223435c1" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; <ref refid="structaudioSyncData" kindref="compound">audioSyncData</ref> &gt;</type>
        <definition>std::atomic&lt;audioSyncData&gt; audioEngineDataStruct::syncData</definition>
        <argsstring></argsstring>
        <name>syncData</name>
        <qualifiedname>audioEngineDataStruct::syncData</qualifiedname>
        <initializer>=
        <ref refid="structaudioSyncData" kindref="compound">audioSyncData</ref>{ .consumed_frames = 0, .microsecond = 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="23" column="23" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="23" bodyend="24"/>
      </memberdef>
      <memberdef kind="variable" id="structaudioEngineDataStruct_1a993ef28e30d1588f0518c6d5a209325d" prot="public" static="no" mutable="no">
        <type><ref refid="structaudioSyncData" kindref="compound">audioSyncData</ref></type>
        <definition>audioSyncData audioEngineDataStruct::cacheSync</definition>
        <argsstring></argsstring>
        <name>cacheSync</name>
        <qualifiedname>audioEngineDataStruct::cacheSync</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="25" column="31" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structaudioEngineDataStruct_1a7f40a0b02a4ff37f86191b9691f968de" prot="public" static="no" mutable="no">
        <type><ref refid="classPDJE__HIGHRES__CLOCK_1_1CLOCK" kindref="compound">PDJE_HIGHRES_CLOCK::CLOCK</ref></type>
        <definition>PDJE_HIGHRES_CLOCK::CLOCK audioEngineDataStruct::highres_clock</definition>
        <argsstring></argsstring>
        <name>highres_clock</name>
        <qualifiedname>audioEngineDataStruct::highres_clock</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="26" column="31" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structaudioEngineDataStruct_1a5458ea6743868149c4fd47af1c96197b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; float * &gt;</type>
        <definition>std::optional&lt; float * &gt; audioEngineDataStruct::getNowfPointer</definition>
        <argsstring>(const unsigned long frameCount)</argsstring>
        <name>getNowfPointer</name>
        <qualifiedname>audioEngineDataStruct::getNowfPointer</qualifiedname>
        <param>
          <type>const unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
<para>Get Current playback point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of frames to be returned </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::optional&lt;float*&gt; the pointer, return nullopt if exceed range </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="34" column="5" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" bodystart="7" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="structaudioEngineDataStruct_1acfbc94880ac9ca5289ed34fef118f561" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void audioEngineDataStruct::CountUp</definition>
        <argsstring>(const unsigned long frameCount)</argsstring>
        <name>CountUp</name>
        <qualifiedname>audioEngineDataStruct::CountUp</qualifiedname>
        <param>
          <type>const unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
<para>count up function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of frames </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="42" column="5" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" bodystart="17" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="structaudioEngineDataStruct_1aa66ef36888faee74e89b103ebfae4b9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audioEngineDataStruct::GetAfterManFX</definition>
        <argsstring>(float *pOutput, unsigned long frameCount)</argsstring>
        <name>GetAfterManFX</name>
        <qualifiedname>audioEngineDataStruct::GetAfterManFX</qualifiedname>
        <param>
          <type>float *</type>
          <declname>pOutput</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
<para>Return FX processed PCM frames. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pOutput</parametername>
</parameternamelist>
<parameterdescription>
<para>the pcm output. this should be memory allocated.(size: frameCount * CHANNEL * sizeof(float)) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of frames </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="52" column="5" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" bodystart="27" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structaudioEngineDataStruct_1a1b0bca5c75f2851baee4597147f8032e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void audioEngineDataStruct::Get</definition>
        <argsstring>(float *pOutput, unsigned long frameCount)</argsstring>
        <name>Get</name>
        <qualifiedname>audioEngineDataStruct::Get</qualifiedname>
        <param>
          <type>float *</type>
          <declname>pOutput</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
<para>Return PCM frames. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pOutput</parametername>
</parameternamelist>
<parameterdescription>
<para>the pcm output. this should be memory allocated.(size: frameCount * CHANNEL * sizeof(float)) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount of frames </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="62" column="5" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" bodystart="48" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>the core Data </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>PDJE_HIGHRES_CLOCK::CLOCK</label>
        <link refid="classPDJE__HIGHRES__CLOCK_1_1CLOCK"/>
      </node>
      <node id="1">
        <label>audioEngineDataStruct</label>
        <link refid="structaudioEngineDataStruct"/>
        <childnode refid="2" relation="usage">
          <edgelabel>pcmDataPoint</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>syncData</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>cacheSync</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>highres_clock</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>audioSyncData</label>
        <link refid="structaudioSyncData"/>
      </node>
      <node id="3">
        <label>std::atomic&lt; audioSyncData &gt;</label>
        <childnode refid="4" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::vector&lt; float &gt;</label>
      </node>
    </collaborationgraph>
    <location file="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" line="16" column="1" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.hpp" bodystart="16" bodyend="63"/>
    <listofallmembers>
      <member refid="structaudioEngineDataStruct_1a993ef28e30d1588f0518c6d5a209325d" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>cacheSync</name></member>
      <member refid="structaudioEngineDataStruct_1acfbc94880ac9ca5289ed34fef118f561" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>CountUp</name></member>
      <member refid="structaudioEngineDataStruct_1aab0d65b85bfb5bf76929c7773a239b26" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>faustPcmPP</name></member>
      <member refid="structaudioEngineDataStruct_1a43d868f597776d70780535bfa6e6e944" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>FXManualPanel</name></member>
      <member refid="structaudioEngineDataStruct_1a1b0bca5c75f2851baee4597147f8032e" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>Get</name></member>
      <member refid="structaudioEngineDataStruct_1aa66ef36888faee74e89b103ebfae4b9e" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>GetAfterManFX</name></member>
      <member refid="structaudioEngineDataStruct_1a5458ea6743868149c4fd47af1c96197b" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>getNowfPointer</name></member>
      <member refid="structaudioEngineDataStruct_1a7f40a0b02a4ff37f86191b9691f968de" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>highres_clock</name></member>
      <member refid="structaudioEngineDataStruct_1ad4d8e64bb991cbc14357cae3d68f339a" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>maxCursor</name></member>
      <member refid="structaudioEngineDataStruct_1af8e16a70120ec10649b46c1a29edd024" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>MusCtrPanel</name></member>
      <member refid="structaudioEngineDataStruct_1a8c80d4c0987b22ecd0d36d0865790294" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>nowCursor</name></member>
      <member refid="structaudioEngineDataStruct_1a8d268640e253174af00cbbfe8a53df17" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>pcmDataPoint</name></member>
      <member refid="structaudioEngineDataStruct_1a13daa0ec5eccfa3235b4dfa0223435c1" prot="public" virt="non-virtual"><scope>audioEngineDataStruct</scope><name>syncData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
