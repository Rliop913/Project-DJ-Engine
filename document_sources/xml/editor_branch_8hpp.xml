<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="editor_branch_8hpp" kind="file" language="C++">
    <compoundname>editorBranch.hpp</compoundname>
    <includes refid="editor_commit_8hpp" local="yes">editorCommit.hpp</includes>
    <includes local="no">git2.h</includes>
    <includes local="no">optional</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="editor_branch_8cpp" local="yes">core_include/editor/featureWrapper/GitWrap/Branch/editorBranch.cpp</includedby>
    <includedby refid="git_log_8cpp" local="yes">core_include/editor/featureWrapper/GitWrap/Log/gitLog.cpp</includedby>
    <includedby refid="git_log_8hpp" local="yes">core_include/editor/featureWrapper/GitWrap/Log/gitLog.hpp</includedby>
    <includedby refid="git_wrapper_8hpp" local="yes">core_include/editor/featureWrapper/GitWrap/gitWrapper.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>core_include/editor/featureWrapper/GitWrap/Branch/editorBranch.hpp</label>
        <link refid="editor_branch_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>editorCommit.hpp</label>
        <link refid="editor_commit_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>PDJE_EXPORT_SETTER.hpp</label>
        <link refid="_p_d_j_e___e_x_p_o_r_t___s_e_t_t_e_r_8hpp"/>
      </node>
      <node id="3">
        <label>git2.h</label>
      </node>
      <node id="4">
        <label>list</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>core_include/MainObjects/editorObject/addline.cpp</label>
        <link refid="addline_8cpp"/>
      </node>
      <node id="9">
        <label>core_include/MainObjects/editorObject/commonfunction.cpp</label>
        <link refid="commonfunction_8cpp"/>
      </node>
      <node id="10">
        <label>core_include/MainObjects/editorObject/deleteline.cpp</label>
        <link refid="deleteline_8cpp"/>
      </node>
      <node id="11">
        <label>core_include/MainObjects/editorObject/editorObject.cpp</label>
        <link refid="editor_object_8cpp"/>
      </node>
      <node id="7">
        <label>core_include/MainObjects/editorObject/editorObject.hpp</label>
        <link refid="editor_object_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>core_include/MainObjects/editorObject/getall.cpp</label>
        <link refid="getall_8cpp"/>
      </node>
      <node id="13">
        <label>core_include/MainObjects/editorObject/getdiff.cpp</label>
        <link refid="getdiff_8cpp"/>
      </node>
      <node id="14">
        <label>core_include/MainObjects/editorObject/getlogwithjsongraph.cpp</label>
        <link refid="getlogwithjsongraph_8cpp"/>
      </node>
      <node id="15">
        <label>core_include/MainObjects/editorObject/go.cpp</label>
        <link refid="go_8cpp"/>
      </node>
      <node id="16">
        <label>core_include/MainObjects/editorObject/redo.cpp</label>
        <link refid="redo_8cpp"/>
      </node>
      <node id="17">
        <label>core_include/MainObjects/editorObject/render.cpp</label>
        <link refid="render_8cpp"/>
      </node>
      <node id="18">
        <label>core_include/MainObjects/editorObject/undo.cpp</label>
        <link refid="undo_8cpp"/>
      </node>
      <node id="19">
        <label>core_include/MainObjects/editorObject/updatelog.cpp</label>
        <link refid="updatelog_8cpp"/>
      </node>
      <node id="20">
        <label>core_include/SWIG_editor_visitor.hpp</label>
        <link refid="_s_w_i_g__editor__visitor_8hpp"/>
      </node>
      <node id="28">
        <label>core_include/editor/editor.cpp</label>
        <link refid="editor_8cpp"/>
      </node>
      <node id="6">
        <label>core_include/editor/editor.hpp</label>
        <link refid="editor_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>core_include/editor/featureWrapper/GitWrap/Branch/editorBranch.cpp</label>
        <link refid="editor_branch_8cpp"/>
      </node>
      <node id="1">
        <label>core_include/editor/featureWrapper/GitWrap/Branch/editorBranch.hpp</label>
        <link refid="editor_branch_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>core_include/editor/featureWrapper/GitWrap/Log/gitLog.cpp</label>
        <link refid="git_log_8cpp"/>
      </node>
      <node id="4">
        <label>core_include/editor/featureWrapper/GitWrap/Log/gitLog.hpp</label>
        <link refid="git_log_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>core_include/editor/featureWrapper/GitWrap/PDJE_GitHandler.cpp</label>
        <link refid="_p_d_j_e___git_handler_8cpp"/>
      </node>
      <node id="30">
        <label>core_include/editor/featureWrapper/GitWrap/gitWrapper.cpp</label>
        <link refid="git_wrapper_8cpp"/>
      </node>
      <node id="5">
        <label>core_include/editor/featureWrapper/GitWrap/gitWrapper.hpp</label>
        <link refid="git_wrapper_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp</label>
        <link refid="_music_json_8cpp"/>
      </node>
      <node id="23">
        <label>core_include/interface/PDJE_interface.cpp</label>
        <link refid="_p_d_j_e__interface_8cpp"/>
      </node>
      <node id="22">
        <label>core_include/interface/PDJE_interface.hpp</label>
        <link refid="_p_d_j_e__interface_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>core_include/interface/PDJE_polyglot_wraps.cpp</label>
        <link refid="_p_d_j_e__polyglot__wraps_8cpp"/>
      </node>
      <node id="25">
        <label>core_include/tests/dbTest.cpp</label>
        <link refid="db_test_8cpp"/>
      </node>
      <node id="26">
        <label>core_include/tests/editorTest.cpp</label>
        <link refid="editor_test_8cpp"/>
      </node>
      <node id="31">
        <label>core_include/tests/gittest.cpp</label>
        <link refid="gittest_8cpp"/>
      </node>
      <node id="27">
        <label>core_include/tests/interfaceTest.cpp</label>
        <link refid="interface_test_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classgitwrap_1_1branch" prot="public">gitwrap::branch</innerclass>
    <innernamespace refid="namespacegitwrap">gitwrap</innernamespace>
    <briefdescription>
<para>Wrapper utilities for manipulating Git branches. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="editor_commit_8hpp" kindref="compound">editorCommit.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;git2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="namespacegitwrap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegitwrap" kindref="compound">gitwrap</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classgitwrap_1_1branch" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgitwrap_1_1branch_1ac3e5b561ef236b207fad3c4788fc7b89" kindref="member">branch</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22" refid="classgitwrap_1_1branch_1ac5d4fc73cb2f76b3bc1646454840aa95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>git_repository<sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classgitwrap_1_1branch_1ac5d4fc73cb2f76b3bc1646454840aa95" kindref="member">repo_pointer</ref>;</highlight></codeline>
<codeline lineno="23" refid="classgitwrap_1_1branch_1a0c8c937a6057d4d638e4dac6e3482265" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>git_checkout_options<sp/><ref refid="classgitwrap_1_1branch_1a0c8c937a6057d4d638e4dac6e3482265" kindref="member">checkoutOpts</ref><sp/>=<sp/>GIT_CHECKOUT_OPTIONS_INIT;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27" refid="classgitwrap_1_1branch_1a059d40014bd9076186a2450c8792790a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classgitwrap_1_1branch_1a059d40014bd9076186a2450c8792790a" kindref="member">branchName</ref>;</highlight></codeline>
<codeline lineno="29" refid="classgitwrap_1_1branch_1a93b2d69e629d19540344910277a643c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;git_oid&gt;<sp/><ref refid="classgitwrap_1_1branch_1a93b2d69e629d19540344910277a643c3" kindref="member">FLAG_TEMP_CHECKOUT</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="35" refid="classgitwrap_1_1branch_1adf3f8cc3764e9600e78b738fa59e841e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1adf3f8cc3764e9600e78b738fa59e841e" kindref="member">ToBranchRefName</ref>(T<sp/><ref refid="classgitwrap_1_1branch_1a059d40014bd9076186a2450c8792790a" kindref="member">branchName</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1ae0d093973cfdaa5791802c46d3a9309b" kindref="member">ShowExistBranch</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;commit&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a55f244956fde3e69eba54f8454858684" kindref="member">ShowExistCommitsOnBranch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="classgitwrap_1_1branch_1a059d40014bd9076186a2450c8792790a" kindref="member">branchName</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a5e97f25efd4a6a61b06b0e31437c3bfb" kindref="member">SetBranch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="classgitwrap_1_1branch_1a059d40014bd9076186a2450c8792790a" kindref="member">branchName</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a051bd627fd9204e95bcdf55f2356ca68" kindref="member">MakeNewFromHEAD</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;newBranchName);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a2e4615dedd0d65a107fd64548982d4f2" kindref="member">MakeNewFromCommit</ref>(<ref refid="structgitwrap_1_1commit" kindref="compound">commit</ref><sp/>&amp;c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;newBranchName);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a5fc5405a63a380548fa4b8b6c720b672" kindref="member">DeleteBranch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="classgitwrap_1_1branch_1a059d40014bd9076186a2450c8792790a" kindref="member">branchName</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a544e4ab210cea6436eb8238b70946fdb" kindref="member">CheckoutThisHEAD</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1ab313aded5d74b26e3d6f4ccee8c36710" kindref="member">CheckoutCommitTemp</ref>(<ref refid="structgitwrap_1_1commit" kindref="compound">commit</ref><sp/>&amp;c);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>std::optional&lt;commit&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a5df6117c678de498f588cdbb07473cf7" kindref="member">GetHEAD</ref>();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classgitwrap_1_1branch_1a18bc053bbb36db18ab0c9d1080c9f43c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a18bc053bbb36db18ab0c9d1080c9f43c" kindref="member">MergeToBranch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;branchToMerge);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classgitwrap_1_1branch_1ac3e5b561ef236b207fad3c4788fc7b89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1ac3e5b561ef236b207fad3c4788fc7b89" kindref="member">branch</ref>(git_repository<sp/>*repo)<sp/>:<sp/><ref refid="classgitwrap_1_1branch_1ac5d4fc73cb2f76b3bc1646454840aa95" kindref="member">repo_pointer</ref>(repo)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a0c8c937a6057d4d638e4dac6e3482265" kindref="member">checkoutOpts</ref>.checkout_strategy<sp/>=<sp/>GIT_CHECKOUT_SAFE;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>git_reference<sp/>*head_ref<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(git_repository_head(&amp;head_ref,<sp/>repo)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a059d40014bd9076186a2450c8792790a" kindref="member">branchName</ref><sp/>=<sp/>std::string(git_reference_shorthand(head_ref));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>git_reference_free(head_ref);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgitwrap_1_1branch_1a68fbfd72e7aa5aa101e6c8c9822f370a" kindref="member">~branch</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>gitwrap</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="core_include/editor/featureWrapper/GitWrap/Branch/editorBranch.hpp"/>
  </compounddef>
</doxygen>
