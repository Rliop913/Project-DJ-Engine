<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="class_p_d_j_e___j_s_o_n_handler" kind="class" language="C++" prot="public">
    <compoundname>PDJE_JSONHandler</compoundname>
    <includes refid="json_wrapper_8hpp" local="no">jsonWrapper.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename CapnpWriterType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_p_d_j_e___j_s_o_n_handler_1a715fb610427c271c0a8e44e798e4d6d1" prot="private" static="no" mutable="no">
        <type><ref refid="json_wrapper_8hpp_1a6c08a6bca89aa954d4bf90371a27dfa9" kindref="member">nj</ref></type>
        <definition>nj PDJE_JSONHandler&lt; CapnpWriterType &gt;::ROOT</definition>
        <argsstring></argsstring>
        <name>ROOT</name>
        <qualifiedname>PDJE_JSONHandler::ROOT</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="44" column="8" bodyfile="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1ac0eae34433759047ad2fa123be2470f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; CapnpWriterType &gt;</type>
        <definition>std::unique_ptr&lt; CapnpWriterType &gt; PDJE_JSONHandler&lt; CapnpWriterType &gt;::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <qualifiedname>PDJE_JSONHandler::render</qualifiedname>
        <briefdescription>
<para>Convert the current JSON data to a capnp writer object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="49" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1ac37f98c073fe7ad2f0abd08a993e071b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Target</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; CapnpWriterType &gt;::deleteLine</definition>
        <argsstring>(const Target &amp;args, bool skipType, bool skipDetail)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const Target &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipDetail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="53" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a29245f745218c0d3dc3c1e91d12fe63b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Target</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; CapnpWriterType &gt;::deleteLine</definition>
        <argsstring>(const Target &amp;args)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const Target &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="57" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a5538c8692d09f825f14b224433020f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Target</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; CapnpWriterType &gt;::add</definition>
        <argsstring>(const Target &amp;args)</argsstring>
        <name>add</name>
        <qualifiedname>PDJE_JSONHandler::add</qualifiedname>
        <param>
          <type>const Target &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a8f79bd8c69f21c9dee91b927ac5b5646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Target</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void PDJE_JSONHandler&lt; CapnpWriterType &gt;::getAll</definition>
        <argsstring>(std::function&lt; void(const Target &amp;args)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>PDJE_JSONHandler::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const Target &amp;args)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="65" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a2447b4a25741adf41741306f27638fad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; CapnpWriterType &gt;::load</definition>
        <argsstring>(const fs::path &amp;path)</argsstring>
        <name>load</name>
        <qualifiedname>PDJE_JSONHandler::load</qualifiedname>
        <param>
          <type>const fs::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="69" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a43792f758ad088b160dc160d5627e05e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="json_wrapper_8hpp_1a6c08a6bca89aa954d4bf90371a27dfa9" kindref="member">nj</ref> &amp;</type>
        <definition>nj &amp; PDJE_JSONHandler&lt; CapnpWriterType &gt;::operator[]</definition>
        <argsstring>(const DONT_SANITIZE &amp;key)</argsstring>
        <name>operator[]</name>
        <qualifiedname>PDJE_JSONHandler::operator[]</qualifiedname>
        <param>
          <type>const <ref refid="file_name_sanitizer_8hpp_1a2ec6d785f45dccabee178706d40c0d7d" kindref="member">DONT_SANITIZE</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Access underlying JSON data by key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="73" column="5" bodyfile="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1ac7a7b5b61abe8e166f34e20d6bba1f50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; CapnpWriterType &gt;::save</definition>
        <argsstring>(const fs::path &amp;path)</argsstring>
        <name>save</name>
        <qualifiedname>PDJE_JSONHandler::save</qualifiedname>
        <param>
          <type>const fs::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Save the JSON data to disk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="80" column="5" bodyfile="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a58c2031b530983107d9db6dbf7ed60a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; CapnpWriterType &gt;::deleteFile</definition>
        <argsstring>(const fs::path &amp;path)</argsstring>
        <name>deleteFile</name>
        <qualifiedname>PDJE_JSONHandler::deleteFile</qualifiedname>
        <param>
          <type>const fs::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Delete a JSON file from disk. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="93" column="5" bodyfile="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" bodystart="93" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a64bf5adedd053da2a351f84bf2f63ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PDJE_JSONHandler&lt; CapnpWriterType &gt;::PDJE_JSONHandler</definition>
        <argsstring>()=default</argsstring>
        <name>PDJE_JSONHandler</name>
        <qualifiedname>PDJE_JSONHandler::PDJE_JSONHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="102" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a2389e6d75d04f5d416ff558d37607482" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PDJE_JSONHandler&lt; CapnpWriterType &gt;::~PDJE_JSONHandler</definition>
        <argsstring>()=default</argsstring>
        <name>~PDJE_JSONHandler</name>
        <qualifiedname>PDJE_JSONHandler::~PDJE_JSONHandler</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="103" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a706c8423e6c1c7ef5aacaf59bbd795d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; KV_W &gt;::add</definition>
        <argsstring>(const KEY_VALUE &amp;args)</argsstring>
        <name>add</name>
        <qualifiedname>PDJE_JSONHandler::add</qualifiedname>
        <param>
          <type>const <ref refid="json_wrapper_8hpp_1a67473814637ada120f046e947d522b64" kindref="member">KEY_VALUE</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" line="6" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" bodystart="6" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a125e349b4793a73035022ec99cd87cc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; KV_W &gt;::deleteLine</definition>
        <argsstring>(const KEY &amp;args)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="_editor_args_8hpp_1a217a1073c4c083da1400cf99dab75f21" kindref="member">KEY</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" line="15" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1ace4c18d5ea878c54e35bcde5df1955a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PDJE_JSONHandler&lt; KV_W &gt;::getAll</definition>
        <argsstring>(std::function&lt; void(const KEY_VALUE &amp;args)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>PDJE_JSONHandler::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const <ref refid="json_wrapper_8hpp_1a67473814637ada120f046e947d522b64" kindref="member">KEY_VALUE</ref> &amp;args)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" line="24" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" bodystart="24" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1aead07f4ac2b36acfdb20e3428752c03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; KV_W &gt;::load</definition>
        <argsstring>(const fs::path &amp;path)</argsstring>
        <name>load</name>
        <qualifiedname>PDJE_JSONHandler::load</qualifiedname>
        <param>
          <type>const fs::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" line="34" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" bodystart="34" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1aff718e92ad9f2f4a4d618bcbc010dddc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; KV_W &gt;::deleteLine</definition>
        <argsstring>(const DONT_SANITIZE &amp;args, bool skipType, bool skipDetail)=delete</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="file_name_sanitizer_8hpp_1a2ec6d785f45dccabee178706d40c0d7d" kindref="member">DONT_SANITIZE</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipDetail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" line="83" column="18" declfile="core_include/editor/featureWrapper/JSONWrap/KVJson.cpp" declline="83" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1ad9146a40935d8eae4b9629cfcac7645a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; MIX_W &gt;::deleteLine</definition>
        <argsstring>(const MixArgs &amp;args)=delete</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_mix_args" kindref="compound">MixArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" line="6" column="18" declfile="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" declline="6" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a7bb97562fe17d1a91841f85e473d0617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; MIX_W &gt;::deleteLine</definition>
        <argsstring>(const MixArgs &amp;args, bool skipType, bool skipDetail)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_mix_args" kindref="compound">MixArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipDetail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" line="11" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" bodystart="11" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1aa465d610d3ecf091967f93e9a29e52b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; MIX_W &gt;::add</definition>
        <argsstring>(const MixArgs &amp;args)</argsstring>
        <name>add</name>
        <qualifiedname>PDJE_JSONHandler::add</qualifiedname>
        <param>
          <type>const <ref refid="struct_mix_args" kindref="compound">MixArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" line="60" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" bodystart="60" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a745f8be18369f84703982c268cb14db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PDJE_JSONHandler&lt; MIX_W &gt;::getAll</definition>
        <argsstring>(std::function&lt; void(const MixArgs &amp;args)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>PDJE_JSONHandler::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const <ref refid="struct_mix_args" kindref="compound">MixArgs</ref> &amp;args)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" line="85" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" bodystart="85" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1af6e1715db196f0bcfae25dbc0855389e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="json_wrapper_8hpp_1a62a8aadaf6e33bd03a591749fca41482" kindref="member">MIX_W</ref> &gt;</type>
        <definition>std::unique_ptr&lt; MIX_W &gt; PDJE_JSONHandler&lt; MIX_W &gt;::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <qualifiedname>PDJE_JSONHandler::render</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" line="106" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" bodystart="106" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a7a2ad44437897daa2c1220dc59d5da02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; MIX_W &gt;::load</definition>
        <argsstring>(const fs::path &amp;path)</argsstring>
        <name>load</name>
        <qualifiedname>PDJE_JSONHandler::load</qualifiedname>
        <param>
          <type>const fs::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" line="141" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MixJson.cpp" bodystart="141" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a1c58fd40b6190989728fb3f678175266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; MUSIC_W &gt;::deleteLine</definition>
        <argsstring>(const NoteArgs &amp;args, bool skipType, bool skipDetail)=delete</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_note_args" kindref="compound">NoteArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skipDetail</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" line="8" column="18" declfile="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" declline="8" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a88e9b48cecec1626f5ec893bc0395d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; MUSIC_W &gt;::deleteLine</definition>
        <argsstring>(const MusicArgs &amp;args)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_music_args" kindref="compound">MusicArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" line="15" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" bodystart="15" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a71dd8a01a1a7a08b864771e90a82eb02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; MUSIC_W &gt;::add</definition>
        <argsstring>(const MusicArgs &amp;args)</argsstring>
        <name>add</name>
        <qualifiedname>PDJE_JSONHandler::add</qualifiedname>
        <param>
          <type>const <ref refid="struct_music_args" kindref="compound">MusicArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" line="45" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" bodystart="45" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1ad85ac7668e163cd79ea6fb574fe5bc03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="json_wrapper_8hpp_1a5ce6d29d6001f496835f6401276a682e" kindref="member">MUSIC_W</ref> &gt;</type>
        <definition>std::unique_ptr&lt; MUSIC_W &gt; PDJE_JSONHandler&lt; MUSIC_W &gt;::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <qualifiedname>PDJE_JSONHandler::render</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" line="62" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" bodystart="62" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1afc203c3d56a3e2d82b1ee882b50cb93e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PDJE_JSONHandler&lt; MUSIC_W &gt;::getAll</definition>
        <argsstring>(std::function&lt; void(const EDIT_ARG_MUSIC &amp;args)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>PDJE_JSONHandler::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const <ref refid="struct_e_d_i_t___a_r_g___m_u_s_i_c" kindref="compound">EDIT_ARG_MUSIC</ref> &amp;args)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" line="88" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" bodystart="88" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1aabfe1c33cba48a7bf04649e79cd792be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; MUSIC_W &gt;::load</definition>
        <argsstring>(const fs::path &amp;path)</argsstring>
        <name>load</name>
        <qualifiedname>PDJE_JSONHandler::load</qualifiedname>
        <param>
          <type>const fs::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" line="112" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/MusicJson.cpp" bodystart="112" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a343def8a7461fcf261c8989434936ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; NOTE_W &gt;::add</definition>
        <argsstring>(const NoteArgs &amp;args)</argsstring>
        <name>add</name>
        <qualifiedname>PDJE_JSONHandler::add</qualifiedname>
        <param>
          <type>const <ref refid="struct_note_args" kindref="compound">NoteArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" line="6" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" bodystart="6" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1a70206cbd7361ae051b669f10c84ae8c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PDJE_JSONHandler&lt; NOTE_W &gt;::deleteLine</definition>
        <argsstring>(const NoteArgs &amp;args)</argsstring>
        <name>deleteLine</name>
        <qualifiedname>PDJE_JSONHandler::deleteLine</qualifiedname>
        <param>
          <type>const <ref refid="struct_note_args" kindref="compound">NoteArgs</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" line="37" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" bodystart="37" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1afae8a2c3bba91ec9c79831669b215306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PDJE_JSONHandler&lt; NOTE_W &gt;::getAll</definition>
        <argsstring>(std::function&lt; void(const NoteArgs &amp;args)&gt; jsonCallback)</argsstring>
        <name>getAll</name>
        <qualifiedname>PDJE_JSONHandler::getAll</qualifiedname>
        <param>
          <type>std::function&lt; void(const <ref refid="struct_note_args" kindref="compound">NoteArgs</ref> &amp;args)&gt;</type>
          <declname>jsonCallback</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" line="84" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" bodystart="84" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1ac9abd82d3716a90c1190d0f924ac4bc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="json_wrapper_8hpp_1a29a06c37bb7adf0275ebf5975fb7cb89" kindref="member">NOTE_W</ref> &gt;</type>
        <definition>std::unique_ptr&lt; NOTE_W &gt; PDJE_JSONHandler&lt; NOTE_W &gt;::render</definition>
        <argsstring>()</argsstring>
        <name>render</name>
        <qualifiedname>PDJE_JSONHandler::render</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" line="110" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" bodystart="110" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_p_d_j_e___j_s_o_n_handler_1ae83dea4e2bbe7b7710090ed97b370fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool PDJE_JSONHandler&lt; NOTE_W &gt;::load</definition>
        <argsstring>(const fs::path &amp;path)</argsstring>
        <name>load</name>
        <qualifiedname>PDJE_JSONHandler::load</qualifiedname>
        <param>
          <type>const fs::path &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" line="145" column="18" bodyfile="core_include/editor/featureWrapper/JSONWrap/NoteJson.cpp" bodystart="145" bodyend="189"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Generic handler for reading/writing editor JSON files. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" line="42" column="12" bodyfile="core_include/editor/featureWrapper/JSONWrap/jsonWrapper.hpp" bodystart="42" bodyend="104"/>
    <listofallmembers>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a5538c8692d09f825f14b224433020f99" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>add</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a706c8423e6c1c7ef5aacaf59bbd795d3" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>add</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1aa465d610d3ecf091967f93e9a29e52b5" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>add</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a71dd8a01a1a7a08b864771e90a82eb02" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>add</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a343def8a7461fcf261c8989434936ef7" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>add</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a58c2031b530983107d9db6dbf7ed60a0" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteFile</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1ac37f98c073fe7ad2f0abd08a993e071b" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a29245f745218c0d3dc3c1e91d12fe63b" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a125e349b4793a73035022ec99cd87cc7" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1aff718e92ad9f2f4a4d618bcbc010dddc" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1ad9146a40935d8eae4b9629cfcac7645a" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a7bb97562fe17d1a91841f85e473d0617" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a1c58fd40b6190989728fb3f678175266" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a88e9b48cecec1626f5ec893bc0395d41" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a70206cbd7361ae051b669f10c84ae8c8" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>deleteLine</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a8f79bd8c69f21c9dee91b927ac5b5646" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>getAll</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1ace4c18d5ea878c54e35bcde5df1955a6" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>getAll</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a745f8be18369f84703982c268cb14db8" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>getAll</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1afc203c3d56a3e2d82b1ee882b50cb93e" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>getAll</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1afae8a2c3bba91ec9c79831669b215306" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>getAll</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a2447b4a25741adf41741306f27638fad" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>load</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1aead07f4ac2b36acfdb20e3428752c03d" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>load</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a7a2ad44437897daa2c1220dc59d5da02" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>load</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1aabfe1c33cba48a7bf04649e79cd792be" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>load</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1ae83dea4e2bbe7b7710090ed97b370fcf" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>load</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a43792f758ad088b160dc160d5627e05e" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>operator[]</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a64bf5adedd053da2a351f84bf2f63ecb" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>PDJE_JSONHandler</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1ac0eae34433759047ad2fa123be2470f7" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>render</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1af6e1715db196f0bcfae25dbc0855389e" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>render</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1ad85ac7668e163cd79ea6fb574fe5bc03" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>render</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1ac9abd82d3716a90c1190d0f924ac4bc3" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>render</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a715fb610427c271c0a8e44e798e4d6d1" prot="private" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>ROOT</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1ac7a7b5b61abe8e166f34e20d6bba1f50" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>save</name></member>
      <member refid="class_p_d_j_e___j_s_o_n_handler_1a2389e6d75d04f5d416ff558d37607482" prot="public" virt="non-virtual"><scope>PDJE_JSONHandler</scope><name>~PDJE_JSONHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
