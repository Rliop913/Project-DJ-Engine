<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="IPC__SHARE__MEM_8hpp" kind="file" language="C++">
    <compoundname>IPC_SHARE_MEM.hpp</compoundname>
    <includes local="no">limits</includes>
    <includes local="no">string</includes>
    <includes local="no">sys/mman.h</includes>
    <includes local="no">unistd.h</includes>
    <includedby refid="linux__input_8hpp" local="yes">include/input/linux/linux_input.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/input/linux/IPC_SHARE_MEM.hpp</label>
        <link refid="IPC__SHARE__MEM_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>limits</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>sys/mman.h</label>
      </node>
      <node id="5">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>include/input/PDJE_Input.cpp</label>
        <link refid="PDJE__Input_8cpp"/>
      </node>
      <node id="3">
        <label>include/input/PDJE_Input.hpp</label>
        <link refid="PDJE__Input_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/input/linux/IPC_SHARE_MEM.hpp</label>
        <link refid="IPC__SHARE__MEM_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>include/input/linux/linux_input.cpp</label>
        <link refid="linux__input_8cpp"/>
      </node>
      <node id="2">
        <label>include/input/linux/linux_input.hpp</label>
        <link refid="linux__input_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/input/windows/windows_input.cpp</label>
        <link refid="windows__input_8cpp"/>
      </node>
      <node id="6">
        <label>include/tests/INPUT_TESTS/pdjeInputTest.cpp</label>
        <link refid="pdjeInputTest_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classIPCSharedMem" prot="public">IPCSharedMem</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/mman.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="classIPCSharedMem" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEM_PROT_FLAG&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classIPCSharedMem_1ad1283679201f9398abd0bf9c916adc85" kindref="member">IPCSharedMem</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9" refid="classIPCSharedMem_1ad1283679201f9398abd0bf9c916adc85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1ad1283679201f9398abd0bf9c916adc85" kindref="member">IPCSharedMem</ref>(std::string<sp/>*external_logger_string)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>=<sp/>external_logger_string;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="classIPCSharedMem_1a0344140e3c40c95fd54fb0feeef5a820" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1a0344140e3c40c95fd54fb0feeef5a820" kindref="member">IPCSharedMem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIPCSharedMem_1ad1283679201f9398abd0bf9c916adc85" kindref="member">IPCSharedMem</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1ad1283679201f9398abd0bf9c916adc85" kindref="member">IPCSharedMem</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="16" refid="classIPCSharedMem_1a0754ac3cb4fe56f5c71a4921996acacf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1a0754ac3cb4fe56f5c71a4921996acacf" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIPCSharedMem_1ad1283679201f9398abd0bf9c916adc85" kindref="member">IPCSharedMem</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classIPCSharedMem_1a2108153a8d72032eba29bd46aeb53d59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Input__State_8hpp_1a3a9ea0bb92bbb69edb406c9a5ba4e55ca21f40778b7db9343a6ca75ec2c41ccce" kindref="member">T</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classIPCSharedMem_1a2108153a8d72032eba29bd46aeb53d59" kindref="member">ptr</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19" refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="20" refid="classIPCSharedMem_1ae03800f1f566f8f4ae695d24bcdae5ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1ae03800f1f566f8f4ae695d24bcdae5ca" kindref="member">count</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21" refid="classIPCSharedMem_1ad2c21807417f4902b1cb81a5330d7ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1ad2c21807417f4902b1cb81a5330d7ed3" kindref="member">bytes</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22" refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>*<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classIPCSharedMem_1ae822beb5f4e9a83fba4dc9f605c3664a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1ae822beb5f4e9a83fba4dc9f605c3664a" kindref="member">MakeIPCSharedMemory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;memfd_name,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_length)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_copyable_v&lt;T&gt;,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Shared<sp/>mem<sp/>should<sp/>contain<sp/>trivially<sp/>copyable<sp/>types<sp/>only.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_length<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;data_length<sp/>is<sp/>zero\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Tsize<sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="Input__State_8hpp_1a3a9ea0bb92bbb69edb406c9a5ba4e55ca21f40778b7db9343a6ca75ec2c41ccce" kindref="member">T</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Max_length<sp/>=<sp/>std::numeric_limits&lt;size_t&gt;::max()<sp/>/<sp/>Tsize;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Tsize<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>data_length<sp/>&gt;<sp/>Max_length)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;byte<sp/>size<sp/>exceeded<sp/>size_t<sp/>maximum<sp/>value\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref><sp/>=<sp/>memfd_create(memfd_name.c_str(),<sp/>MFD_CLOEXEC);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;memfd<sp/>not<sp/>created\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>byte_length<sp/>=<sp/>Tsize<sp/>*<sp/>data_length;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ftruncate(<ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref>,<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">off_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(byte_length))<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(<ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;ftruncate<sp/>failed\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>mmap(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>byte_length,<sp/>MEM_PROT_FLAG,<sp/>MAP_SHARED,<sp/><ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>MAP_FAILED)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(<ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;map<sp/>failed\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1a2108153a8d72032eba29bd46aeb53d59" kindref="member">ptr</ref><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="Input__State_8hpp_1a3a9ea0bb92bbb69edb406c9a5ba4e55ca21f40778b7db9343a6ca75ec2c41ccce" kindref="member">T</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1ae03800f1f566f8f4ae695d24bcdae5ca" kindref="member">count</ref><sp/>=<sp/>data_length;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1ad2c21807417f4902b1cb81a5330d7ed3" kindref="member">bytes</ref><sp/>=<sp/>byte_length;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classIPCSharedMem_1a860f870a9868a38ae077f1c216cefcf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classIPCSharedMem_1a860f870a9868a38ae077f1c216cefcf7" kindref="member">~IPCSharedMem</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIPCSharedMem_1a2108153a8d72032eba29bd46aeb53d59" kindref="member">ptr</ref><sp/>&amp;&amp;<sp/><ref refid="classIPCSharedMem_1ad2c21807417f4902b1cb81a5330d7ed3" kindref="member">bytes</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(munmap(<ref refid="classIPCSharedMem_1a2108153a8d72032eba29bd46aeb53d59" kindref="member">ptr</ref>,<sp/><ref refid="classIPCSharedMem_1ad2c21807417f4902b1cb81a5330d7ed3" kindref="member">bytes</ref>)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>munmap\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref><sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(close(<ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref>)<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="classIPCSharedMem_1ae694a6764fb7e1685254e54e778c42b1" kindref="member">external_logger</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>close<sp/>FD\n<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="include/input/linux/IPC_SHARE_MEM.hpp"/>
  </compounddef>
</doxygen>
