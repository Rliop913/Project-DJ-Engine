<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="linux__input_8hpp" kind="file" language="C++">
    <compoundname>linux_input.hpp</compoundname>
    <includes refid="Common__Features_8hpp" local="yes">Common_Features.hpp</includes>
    <includes refid="IPC__SHARE__MEM_8hpp" local="yes">IPC_SHARE_MEM.hpp</includes>
    <includes refid="Input__State_8hpp" local="yes">Input_State.hpp</includes>
    <includes local="no">ctime</includes>
    <includes local="no">nlohmann/json.hpp</includes>
    <includes local="no">sys/socket.h</includes>
    <includedby refid="PDJE__Input_8hpp" local="yes">include/input/PDJE_Input.hpp</includedby>
    <includedby refid="linux__input_8cpp" local="yes">include/input/linux/linux_input.cpp</includedby>
    <incdepgraph>
      <node id="16">
        <label>Input_State.hpp</label>
        <link refid="Input__State_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>IPC_SHARE_MEM.hpp</label>
        <link refid="IPC__SHARE__MEM_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Common_Features.hpp</label>
        <link refid="Common__Features_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/input/linux/linux_input.hpp</label>
        <link refid="linux__input_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>arpa/inet.h</label>
      </node>
      <node id="4">
        <label>cerrno</label>
      </node>
      <node id="5">
        <label>cstddef</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="20">
        <label>ctime</label>
      </node>
      <node id="17">
        <label>future</label>
      </node>
      <node id="7">
        <label>limits</label>
      </node>
      <node id="19">
        <label>memory_resource</label>
      </node>
      <node id="8">
        <label>netinet/in.h</label>
      </node>
      <node id="9">
        <label>nlohmann/json.hpp</label>
      </node>
      <node id="18">
        <label>optional</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="14">
        <label>sys/mman.h</label>
      </node>
      <node id="11">
        <label>sys/socket.h</label>
      </node>
      <node id="15">
        <label>unistd.h</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/input/PDJE_Input.cpp</label>
        <link refid="PDJE__Input_8cpp"/>
      </node>
      <node id="2">
        <label>include/input/PDJE_Input.hpp</label>
        <link refid="PDJE__Input_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>include/input/linux/linux_input.cpp</label>
        <link refid="linux__input_8cpp"/>
      </node>
      <node id="1">
        <label>include/input/linux/linux_input.hpp</label>
        <link refid="linux__input_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/input/windows/windows_input.cpp</label>
        <link refid="windows__input_8cpp"/>
      </node>
      <node id="5">
        <label>include/tests/INPUT_TESTS/pdjeInputTest.cpp</label>
        <link refid="pdjeInputTest_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structID" prot="public">ID</innerclass>
    <innerclass refid="classOS__Input" prot="public">OS_Input</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Common__Features_8hpp" kindref="compound">Common_Features.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="IPC__SHARE__MEM_8hpp" kindref="compound">IPC_SHARE_MEM.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Input__State_8hpp" kindref="compound">Input_State.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nlohmann/json.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="structID" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structID" kindref="compound">ID</ref><sp/>{</highlight></codeline>
<codeline lineno="9" refid="structID_1a4fed0482e215955e307d8bc6537a77d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structID_1a4fed0482e215955e307d8bc6537a77d9" kindref="member">socket_fd</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="10" refid="structID_1a46c35781bce85bd345ba5689ab6d14ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structID_1a46c35781bce85bd345ba5689ab6d14ae" kindref="member">client_fd</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="11" refid="structID_1a5a4969e1e296cb42b3024ee34e34a86a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structID_1a5a4969e1e296cb42b3024ee34e34a86a" kindref="member">rt_pid</ref><sp/><sp/><sp/><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="12" refid="structID_1a62cd160f637530664553ee647b66ccef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structID_1a62cd160f637530664553ee647b66ccef" kindref="member">socket_path</ref><sp/>=</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;/tmp/pdje_input_module_libevdev_socket_path.sock&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classOS__Input" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classOS__Input_1ad60a928a455493a7648d1a4d0f97842b" kindref="member">OS_Input</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1a6666290654c4183177b46c68d11ab3a0" kindref="member">OpenClientWithSudo</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;exec_path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;arg);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1a5787a6efcbe23e455a8a641f52592227" kindref="member">CloseClient</ref>();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEM_PROT_FLAG&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1ac18afc431328e05451cc99881e0c31aa" kindref="member">Send_IPCMEM_ToRT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIPCSharedMem" kindref="compound">IPCSharedMem&lt;T, MEM_PROT_FLAG&gt;</ref><sp/>&amp;shared_IPC_mem);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classOS__Input_1a1b378445bf9547af392a2b1b12f74b4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structID" kindref="compound">ID</ref><sp/><ref refid="classOS__Input_1a1b378445bf9547af392a2b1b12f74b4d" kindref="member">importants</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29" refid="classOS__Input_1a60d0ad2aae20ad34df25f7ced3f6dda9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="PDJE__Input__Device__Data_8hpp_1a3a873a3d426e1f5e696c75ac9a68e557" kindref="member">ONE_SHOT_DEV_FUTURE</ref><sp/><ref refid="classOS__Input_1a60d0ad2aae20ad34df25f7ced3f6dda9" kindref="member">config_data</ref>;</highlight></codeline>
<codeline lineno="30" refid="classOS__Input_1a1534b3f617505438f0b84929c32bb261" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="Input__State_8hpp_1a821478f084c5bbe8413cfe70b427f702" kindref="member">ONE_SHOT_RUN_FUTURE</ref><sp/><ref refid="classOS__Input_1a1534b3f617505438f0b84929c32bb261" kindref="member">run_ok</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1aa75064f53d9640242cab6d395eaefcb0" kindref="member">SocketOpen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;exec_path);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1a40c0218fb24c4ef4de9eee228657e2df" kindref="member">SocketClose</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classOS__Input_1a3a94e57f03ba728c189020de199610f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1a3a94e57f03ba728c189020de199610f6" kindref="member">kill</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>todo-<sp/>impl<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;DeviceData&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1a1e267997049cb562cb4b8d4dfe2f218e" kindref="member">getDevices</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1a1c5d8c5f98de73baa8282fe5b1afcf6a" kindref="member">setDevices</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="PDJE__Input__Device__Data_8hpp_1a58503d463081ac24677b1da5c0cf3d87" kindref="member">DEV_LIST</ref><sp/>&amp;devs);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1a40d69fae9cf08cdaf17e5f4f09a3af22" kindref="member">EndSocketTransmission</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classOS__Input_1aefbbfd14e2902be2a2bb8fabb1d23cdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1aefbbfd14e2902be2a2bb8fabb1d23cdd" kindref="member">TrigLoop</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>todo-<sp/>impl<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classOS__Input_1ae3c00214a561fe8736dc37024b88e420" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classOS__Input_1ae3c00214a561fe8736dc37024b88e420" kindref="member">ResetLoop</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>todo-<sp/>impl<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MEM_PROT_FLAG&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classOS__Input_1ac18afc431328e05451cc99881e0c31aa" refkind="member"><highlight class="normal"><ref refid="classOS__Input_1ac18afc431328e05451cc99881e0c31aa" kindref="member">OS_Input::Send_IPCMEM_ToRT</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classIPCSharedMem" kindref="compound">IPCSharedMem&lt;T, MEM_PROT_FLAG&gt;</ref><sp/>&amp;shared_IPC_mem)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">msghdr<sp/>msg<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>trans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">iovec<sp/>iov<sp/>=<sp/>{<sp/>.iov_base<sp/>=</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>실제<sp/>payload<sp/>데이터<sp/>(필수는<sp/>아님)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.iov_len<sp/>=<sp/>1<sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.msg_iov<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;iov;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.msg_iovlen<sp/><sp/><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>dummy<sp/>data<sp/>trans</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cmsgbuf[CMSG_SPACE(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))];<sp/></highlight><highlight class="comment">//<sp/>ancillary<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.msg_control<sp/><sp/><sp/><sp/>=<sp/>cmsgbuf;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>msg.msg_controllen<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cmsgbuf);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmsghdr<sp/>*cmsg<sp/>=<sp/>CMSG_FIRSTHDR(&amp;msg);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>cmsg-&gt;cmsg_level<sp/><sp/><sp/><sp/><sp/>=<sp/>SOL_SOCKET;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>cmsg-&gt;cmsg_type<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SCM_RIGHTS;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>cmsg-&gt;cmsg_len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>CMSG_LEN(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(CMSG_DATA(cmsg),<sp/>&amp;shared_IPC_mem.<ref refid="classIPCSharedMem_1a4ce0fae47486d1ad09821f8ed652e740" kindref="member">FD</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sendmsg(<ref refid="classOS__Input_1a1b378445bf9547af392a2b1b12f74b4d" kindref="member">importants</ref>.client_fd,<sp/>&amp;msg,<sp/>0);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/input/linux/linux_input.hpp"/>
  </compounddef>
</doxygen>
