<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="trackLinter_8cpp" kind="file" language="C++">
    <compoundname>trackLinter.cpp</compoundname>
    <includes refid="CapnpBinary_8hpp" local="yes">CapnpBinary.hpp</includes>
    <includes local="yes">MixBinary.capnp.h</includes>
    <includes refid="fileNameSanitizer_8hpp" local="yes">fileNameSanitizer.hpp</includes>
    <includes refid="pdjeLinter_8hpp" local="yes">pdjeLinter.hpp</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <incdepgraph>
      <node id="2">
        <label>CapnpBinary.hpp</label>
        <link refid="CapnpBinary_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>dbRoot.hpp</label>
        <link refid="dbRoot_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>dbState.hpp</label>
        <link refid="dbState_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>musicDB.hpp</label>
        <link refid="musicDB_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>trackDB.hpp</label>
        <link refid="trackDB_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>pdjeLinter.hpp</label>
        <link refid="pdjeLinter_8hpp"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/core/editor/pdjeLinter/trackLinter.cpp</label>
        <link refid="trackLinter_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>fileNameSanitizer.hpp</label>
        <link refid="fileNameSanitizer_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>PDJE_EXPORT_SETTER.hpp</label>
        <link refid="PDJE__EXPORT__SETTER_8hpp"/>
      </node>
      <node id="11">
        <label>PDJE_LOG_SETTER.hpp</label>
        <link refid="PDJE__LOG__SETTER_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>MixBinary.capnp.h</label>
      </node>
      <node id="8">
        <label>MusicBinary.capnp.h</label>
      </node>
      <node id="9">
        <label>NoteBinary.capnp.h</label>
      </node>
      <node id="5">
        <label>capnp/message.h</label>
      </node>
      <node id="6">
        <label>capnp/serialize.h</label>
      </node>
      <node id="19">
        <label>cppcodec/base64_default_url.hpp</label>
      </node>
      <node id="31">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>filesystem</label>
      </node>
      <node id="3">
        <label>optional</label>
      </node>
      <node id="24">
        <label>rocksdb/db.h</label>
      </node>
      <node id="25">
        <label>rocksdb/filter_policy.h</label>
      </node>
      <node id="26">
        <label>rocksdb/options.h</label>
      </node>
      <node id="27">
        <label>rocksdb/table.h</label>
      </node>
      <node id="13">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="14">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="15">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="23">
        <label>sqlite3.h</label>
      </node>
      <node id="20">
        <label>string</label>
      </node>
      <node id="16">
        <label>string_view</label>
      </node>
      <node id="17">
        <label>type_traits</label>
      </node>
      <node id="32">
        <label>unordered_map</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="trackLinter_8cpp_1a3d5cd7d6a2752dc413cb5ccb5ce21bc6" prot="public" static="no">
        <type>std::unordered_map&lt; int32_t, int &gt;</type>
        <definition>using ID_LOADED =  std::unordered_map&lt;int32_t, int&gt;</definition>
        <argsstring></argsstring>
        <name>ID_LOADED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/editor/pdjeLinter/trackLinter.cpp" line="9" column="1" bodyfile="include/core/editor/pdjeLinter/trackLinter.cpp" bodystart="9" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="trackLinter_8cpp_1a13cfef94ef7a20443052ffa72751e656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FillIdHasLoad</definition>
        <argsstring>(ID_LOADED &amp;accumulate_data, const TypeEnum &amp;type, const int32_t &amp;id)</argsstring>
        <name>FillIdHasLoad</name>
        <param>
          <type><ref refid="trackLinter_8cpp_1a3d5cd7d6a2752dc413cb5ccb5ce21bc6" kindref="member">ID_LOADED</ref> &amp;</type>
          <declname>accumulate_data</declname>
        </param>
        <param>
          <type>const <ref refid="namespacecapnp_1_1schemas_1a1422df7eaf2c604e792649afd941e322" kindref="member">TypeEnum</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const int32_t &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/editor/pdjeLinter/trackLinter.cpp" line="12" column="1" bodyfile="include/core/editor/pdjeLinter/trackLinter.cpp" bodystart="12" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="trackLinter_8cpp_1aac890445b835eeb8cac2351e3150ed80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CheckIDHasLoad</definition>
        <argsstring>(const ID_LOADED &amp;acc_data, UNSANITIZED &amp;msg)</argsstring>
        <name>CheckIDHasLoad</name>
        <param>
          <type>const <ref refid="trackLinter_8cpp_1a3d5cd7d6a2752dc413cb5ccb5ce21bc6" kindref="member">ID_LOADED</ref> &amp;</type>
          <declname>acc_data</declname>
        </param>
        <param>
          <type><ref refid="fileNameSanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/editor/pdjeLinter/trackLinter.cpp" line="26" column="1" bodyfile="include/core/editor/pdjeLinter/trackLinter.cpp" bodystart="26" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CapnpBinary_8hpp" kindref="compound">CapnpBinary.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;MixBinary.capnp.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="fileNameSanitizer_8hpp" kindref="compound">fileNameSanitizer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pdjeLinter_8hpp" kindref="compound">pdjeLinter.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="trackLinter_8cpp_1a3d5cd7d6a2752dc413cb5ccb5ce21bc6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="trackLinter_8cpp_1a3d5cd7d6a2752dc413cb5ccb5ce21bc6" kindref="member">ID_LOADED</ref><sp/>=<sp/>std::unordered_map&lt;int32_t,<sp/>int&gt;;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="trackLinter_8cpp_1a13cfef94ef7a20443052ffa72751e656" refkind="member"><highlight class="normal"><ref refid="trackLinter_8cpp_1a13cfef94ef7a20443052ffa72751e656" kindref="member">FillIdHasLoad</ref>(<ref refid="trackLinter_8cpp_1a3d5cd7d6a2752dc413cb5ccb5ce21bc6" kindref="member">ID_LOADED</ref><sp/><sp/><sp/><sp/><sp/><sp/>&amp;accumulate_data,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="FAKE__CAPNP__ENUMS__FOR__SWIG_8hpp_1a426bf923434a718991540850f58c7770" kindref="member">TypeEnum</ref><sp/>&amp;type,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!accumulate_data.contains(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulate_data[id]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/>TypeEnum::LOAD)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>accumulate_data[id]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="trackLinter_8cpp_1aac890445b835eeb8cac2351e3150ed80" refkind="member"><highlight class="normal"><ref refid="trackLinter_8cpp_1aac890445b835eeb8cac2351e3150ed80" kindref="member">CheckIDHasLoad</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="trackLinter_8cpp_1a3d5cd7d6a2752dc413cb5ccb5ce21bc6" kindref="member">ID_LOADED</ref><sp/>&amp;acc_data,<sp/><ref refid="fileNameSanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref><sp/>&amp;msg)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FLAG_OK<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>:<sp/>acc_data)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.second<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAG_OK<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>ID<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.first)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.second<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(std::to_string(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.second)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>load<sp/>command.\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>load<sp/>command.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FLAG_OK;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classPDJE__Linter_1ae20f9acb9212f82e3ab44a47b9d8ba0a" refkind="member"><highlight class="normal"><ref refid="classPDJE__Linter_1aba3baadd7e99ff1082bc5ba75a132fdb" kindref="member">PDJE_Linter&lt;trackdata&gt;::Lint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structtrackdata" kindref="compound">trackdata</ref><sp/>&amp;target,<sp/><ref refid="fileNameSanitizer_8hpp_1a3dbfced66c4bb073515956060fd59604" kindref="member">UNSANITIZED</ref><sp/>&amp;lint_msg)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>trackReader<sp/>=<sp/><ref refid="classCapReader" kindref="compound">CapReader&lt;MixBinaryCapnpData&gt;</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!trackReader.open(target.<ref refid="structtrackdata_1a155e25ae9bef854aa3441d9702082ac3" kindref="member">mixBinary</ref>))<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lint_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>open<sp/>mix<sp/>data.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>td<sp/>=<sp/>trackReader.Rp-&gt;getDatas();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="trackLinter_8cpp_1a3d5cd7d6a2752dc413cb5ccb5ce21bc6" kindref="member">ID_LOADED</ref><sp/>id_has_load;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>td.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="trackLinter_8cpp_1a13cfef94ef7a20443052ffa72751e656" kindref="member">FillIdHasLoad</ref>(id_has_load,<sp/>td[i].getType(),<sp/>td[i].getId());</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>FLAG_RESULT<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="trackLinter_8cpp_1aac890445b835eeb8cac2351e3150ed80" kindref="member">CheckIDHasLoad</ref>(id_has_load,<sp/>lint_msg))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FLAG_RESULT<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FLAG_RESULT;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/core/editor/pdjeLinter/trackLinter.cpp"/>
  </compounddef>
</doxygen>
