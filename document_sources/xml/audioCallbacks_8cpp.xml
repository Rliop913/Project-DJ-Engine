<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="audioCallbacks_8cpp" kind="file" language="C++">
    <compoundname>audioCallbacks.cpp</compoundname>
    <includes refid="audioCallbacks_8hpp" local="yes">audioCallbacks.hpp</includes>
    <includes refid="FrameCalc_8hpp" local="yes">FrameCalc.hpp</includes>
    <includes local="no">atomic</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="1">
        <label>include/core/MainObjects/audioPlayer/audioCallbacks.cpp</label>
        <link refid="audioCallbacks_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>audioCallbacks.hpp</label>
        <link refid="audioCallbacks_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>ManualMix.hpp</label>
        <link refid="ManualMix_8hpp"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>MusicControlPanel.hpp</label>
        <link refid="MusicControlPanel_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Decoder.hpp</label>
        <link refid="Decoder_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>CapnpBinary.hpp</label>
        <link refid="CapnpBinary_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>FrameCalc.hpp</label>
        <link refid="FrameCalc_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>dbRoot.hpp</label>
        <link refid="dbRoot_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>dbState.hpp</label>
        <link refid="dbState_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>musicDB.hpp</label>
        <link refid="musicDB_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>trackDB.hpp</label>
        <link refid="trackDB_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>fileNameSanitizer.hpp</label>
        <link refid="fileNameSanitizer_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>PDJE_EXPORT_SETTER.hpp</label>
        <link refid="PDJE__EXPORT__SETTER_8hpp"/>
      </node>
      <node id="18">
        <label>PDJE_LOG_SETTER.hpp</label>
        <link refid="PDJE__LOG__SETTER_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>PDJE_SYNC_CORE.hpp</label>
        <link refid="PDJE__SYNC__CORE_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>FAUST_COMPRESSOR_manual.hpp</label>
      </node>
      <node id="43">
        <label>FAUST_DISTORTION_manual.hpp</label>
      </node>
      <node id="44">
        <label>FAUST_ECHO_manual.hpp</label>
      </node>
      <node id="45">
        <label>FAUST_EQ_manual.hpp</label>
      </node>
      <node id="46">
        <label>FAUST_FILTERS_manual.hpp</label>
      </node>
      <node id="47">
        <label>FAUST_FLANGER_manual.hpp</label>
      </node>
      <node id="48">
        <label>FAUST_OCS_FILTER_manual.hpp</label>
      </node>
      <node id="49">
        <label>FAUST_PANNER_manual.hpp</label>
      </node>
      <node id="50">
        <label>FAUST_PHASER_manual.hpp</label>
      </node>
      <node id="51">
        <label>FAUST_ROBOT_manual.hpp</label>
      </node>
      <node id="52">
        <label>FAUST_ROLL_manual.hpp</label>
      </node>
      <node id="53">
        <label>FAUST_TRANCE_manual.hpp</label>
      </node>
      <node id="54">
        <label>FAUST_VOL_manual.hpp</label>
      </node>
      <node id="14">
        <label>MixBinary.capnp.h</label>
      </node>
      <node id="15">
        <label>MusicBinary.capnp.h</label>
      </node>
      <node id="16">
        <label>NoteBinary.capnp.h</label>
      </node>
      <node id="56">
        <label>PDJE_Highres_Clock.hpp</label>
      </node>
      <node id="55">
        <label>SoundTouch.h</label>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
      <node id="59">
        <label>atomic</label>
      </node>
      <node id="12">
        <label>capnp/message.h</label>
      </node>
      <node id="13">
        <label>capnp/serialize.h</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="36">
        <label>cppcodec/base64_default_url.hpp</label>
      </node>
      <node id="58">
        <label>cstdint</label>
      </node>
      <node id="60">
        <label>cstring</label>
      </node>
      <node id="19">
        <label>filesystem</label>
      </node>
      <node id="26">
        <label>hwy/aligned_allocator.h</label>
      </node>
      <node id="39">
        <label>map</label>
      </node>
      <node id="41">
        <label>memory</label>
      </node>
      <node id="38">
        <label>miniaudio.h</label>
      </node>
      <node id="20">
        <label>mutex</label>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="29">
        <label>rocksdb/db.h</label>
      </node>
      <node id="30">
        <label>rocksdb/filter_policy.h</label>
      </node>
      <node id="31">
        <label>rocksdb/options.h</label>
      </node>
      <node id="32">
        <label>rocksdb/table.h</label>
      </node>
      <node id="21">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="22">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="23">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="28">
        <label>sqlite3.h</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="24">
        <label>string_view</label>
      </node>
      <node id="25">
        <label>type_traits</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="audioCallbacks_8cpp_1a1ed2dfba5eeffc302e4639bd95443901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FullPreRender_callback</definition>
        <argsstring>(ma_device *pDevice, void *pOutput, const void *pInput, ma_uint32 frameCount)</argsstring>
        <name>FullPreRender_callback</name>
        <param>
          <type>ma_device *</type>
          <declname>pDevice</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pOutput</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pInput</declname>
        </param>
        <param>
          <type>ma_uint32</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" line="58" column="1" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" bodystart="58" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="audioCallbacks_8cpp_1a7d838e56a4484d297c33aa7a2c01ca91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void HybridRender_callback</definition>
        <argsstring>(ma_device *pDevice, void *pOutput, const void *pInput, ma_uint32 frameCount)</argsstring>
        <name>HybridRender_callback</name>
        <param>
          <type>ma_device *</type>
          <declname>pDevice</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pOutput</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pInput</declname>
        </param>
        <param>
          <type>ma_uint32</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" line="70" column="1" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="audioCallbacks_8cpp_1ae5e4af00326247af37e277759ed98708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FullManualRender_callback</definition>
        <argsstring>(ma_device *pDevice, void *pOutput, const void *pInput, ma_uint32 frameCount)</argsstring>
        <name>FullManualRender_callback</name>
        <param>
          <type>ma_device *</type>
          <declname>pDevice</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pOutput</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pInput</declname>
        </param>
        <param>
          <type>ma_uint32</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" line="84" column="1" bodyfile="include/core/MainObjects/audioPlayer/audioCallbacks.cpp" bodystart="84" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="audioCallbacks_8hpp" kindref="compound">audioCallbacks.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="FrameCalc_8hpp" kindref="compound">FrameCalc.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">std::optional&lt;float<sp/>*&gt;</highlight></codeline>
<codeline lineno="7" refid="structaudioEngineDataStruct_1a5458ea6743868149c4fd47af1c96197b" refkind="member"><highlight class="normal"><ref refid="structaudioEngineDataStruct_1a5458ea6743868149c4fd47af1c96197b" kindref="member">audioEngineDataStruct::getNowfPointer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount)</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="structaudioEngineDataStruct_1a8c80d4c0987b22ecd0d36d0865790294" kindref="member">nowCursor</ref><sp/>+<sp/>frameCount)<sp/>&gt;<sp/><ref refid="structaudioEngineDataStruct_1ad4d8e64bb991cbc14357cae3d68f339a" kindref="member">maxCursor</ref>)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::nullopt;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structaudioEngineDataStruct_1a8d268640e253174af00cbbfe8a53df17" kindref="member">pcmDataPoint</ref>-&gt;data()<sp/>+<sp/>(<ref refid="structaudioEngineDataStruct_1a8c80d4c0987b22ecd0d36d0865790294" kindref="member">nowCursor</ref><sp/>*<sp/><ref refid="FrameCalc_8hpp_1ace6a11e892466500d47d1f45f042bc53" kindref="member">CHANNEL</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="structaudioEngineDataStruct_1acfbc94880ac9ca5289ed34fef118f561" refkind="member"><highlight class="normal"><ref refid="structaudioEngineDataStruct_1acfbc94880ac9ca5289ed34fef118f561" kindref="member">audioEngineDataStruct::CountUp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaudioEngineDataStruct_1a8c80d4c0987b22ecd0d36d0865790294" kindref="member">nowCursor</ref><sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaudioEngineDataStruct_1a993ef28e30d1588f0518c6d5a209325d" kindref="member">cacheSync</ref><sp/>=<sp/><ref refid="structaudioEngineDataStruct_1a13daa0ec5eccfa3235b4dfa0223435c1" kindref="member">syncData</ref>.load(std::memory_order_acquire);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaudioEngineDataStruct_1a993ef28e30d1588f0518c6d5a209325d" kindref="member">cacheSync</ref>.consumed_frames<sp/>+=<sp/>frameCount;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaudioEngineDataStruct_1a993ef28e30d1588f0518c6d5a209325d" kindref="member">cacheSync</ref>.microsecond<sp/>=<sp/><ref refid="structaudioEngineDataStruct_1a7f40a0b02a4ff37f86191b9691f968de" kindref="member">highres_clock</ref>.Get_MicroSecond();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structaudioEngineDataStruct_1a13daa0ec5eccfa3235b4dfa0223435c1" kindref="member">syncData</ref>.store(<ref refid="structaudioEngineDataStruct_1a993ef28e30d1588f0518c6d5a209325d" kindref="member">cacheSync</ref>,<sp/>std::memory_order_release);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="structaudioEngineDataStruct_1aa66ef36888faee74e89b103ebfae4b9e" refkind="member"><highlight class="normal"><ref refid="structaudioEngineDataStruct_1aa66ef36888faee74e89b103ebfae4b9e" kindref="member">audioEngineDataStruct::GetAfterManFX</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOutput,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="structaudioEngineDataStruct_1a43d868f597776d70780535bfa6e6e944" kindref="member">FXManualPanel</ref>.has_value())<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>getres<sp/>=<sp/><ref refid="structaudioEngineDataStruct_1a5458ea6743868149c4fd47af1c96197b" kindref="member">getNowfPointer</ref>(frameCount);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getres.has_value())<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structaudioEngineDataStruct_1a43d868f597776d70780535bfa6e6e944" kindref="member">FXManualPanel</ref>-&gt;checkSomethingOn())<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ManualMix_8hpp_1a79df2887c22c06f21513214917ebbdc4" kindref="member">toFaustStylePCM</ref>(<ref refid="structaudioEngineDataStruct_1aab0d65b85bfb5bf76929c7773a239b26" kindref="member">faustPcmPP</ref>,<sp/>getres.value(),<sp/>frameCount);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structaudioEngineDataStruct_1a43d868f597776d70780535bfa6e6e944" kindref="member">FXManualPanel</ref>-&gt;addFX(<ref refid="structaudioEngineDataStruct_1aab0d65b85bfb5bf76929c7773a239b26" kindref="member">faustPcmPP</ref>,<sp/>frameCount);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ManualMix_8hpp_1ab241d30c14975d15f937dd81b05efc80" kindref="member">toLRStylePCM</ref>(<ref refid="structaudioEngineDataStruct_1aab0d65b85bfb5bf76929c7773a239b26" kindref="member">faustPcmPP</ref>,<sp/>pOutput,<sp/>frameCount);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(pOutput,<sp/>getres.value(),<sp/>frameCount<sp/>*<sp/><ref refid="FrameCalc_8hpp_1ace6a11e892466500d47d1f45f042bc53" kindref="member">CHANNEL</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structaudioEngineDataStruct_1a1b0bca5c75f2851baee4597147f8032e" refkind="member"><highlight class="normal"><ref refid="structaudioEngineDataStruct_1a1b0bca5c75f2851baee4597147f8032e" kindref="member">audioEngineDataStruct::Get</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pOutput,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>getres<sp/>=<sp/><ref refid="structaudioEngineDataStruct_1a5458ea6743868149c4fd47af1c96197b" kindref="member">getNowfPointer</ref>(frameCount);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!getres.has_value())<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(pOutput,<sp/>getres.value(),<sp/>frameCount<sp/>*<sp/><ref refid="FrameCalc_8hpp_1ace6a11e892466500d47d1f45f042bc53" kindref="member">CHANNEL</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="audioCallbacks_8cpp_1a1ed2dfba5eeffc302e4639bd95443901" refkind="member"><highlight class="normal"><ref refid="audioCallbacks_8cpp_1a1ed2dfba5eeffc302e4639bd95443901" kindref="member">FullPreRender_callback</ref>(ma_device<sp/><sp/>*pDevice,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOutput,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pInput,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ma_uint32<sp/><sp/><sp/>frameCount)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rendered<sp/>=</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structaudioEngineDataStruct" kindref="compound">audioEngineDataStruct</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pDevice-&gt;pUserData);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>rendered-&gt;<ref refid="structaudioEngineDataStruct_1acfbc94880ac9ca5289ed34fef118f561" kindref="member">CountUp</ref>(frameCount);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>rendered-&gt;Get(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pOutput),<sp/>frameCount);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="audioCallbacks_8cpp_1a7d838e56a4484d297c33aa7a2c01ca91" refkind="member"><highlight class="normal"><ref refid="audioCallbacks_8cpp_1a7d838e56a4484d297c33aa7a2c01ca91" kindref="member">HybridRender_callback</ref>(ma_device<sp/><sp/>*pDevice,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOutput,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pInput,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ma_uint32<sp/><sp/><sp/>frameCount)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rendered<sp/>=</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structaudioEngineDataStruct" kindref="compound">audioEngineDataStruct</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pDevice-&gt;pUserData);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>rendered-&gt;<ref refid="structaudioEngineDataStruct_1acfbc94880ac9ca5289ed34fef118f561" kindref="member">CountUp</ref>(frameCount);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>rendered-&gt;GetAfterManFX(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pOutput),<sp/>frameCount);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>rendered-&gt;MusCtrPanel-&gt;GetPCMFrames(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pOutput),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="audioCallbacks_8cpp_1ae5e4af00326247af37e277759ed98708" refkind="member"><highlight class="normal"><ref refid="audioCallbacks_8cpp_1ae5e4af00326247af37e277759ed98708" kindref="member">FullManualRender_callback</ref>(ma_device<sp/><sp/>*pDevice,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOutput,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pInput,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ma_uint32<sp/><sp/><sp/>frameCount)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>Data<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"><ref refid="structaudioEngineDataStruct" kindref="compound">audioEngineDataStruct</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pDevice-&gt;pUserData);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>Data-&gt;<ref refid="structaudioEngineDataStruct_1acfbc94880ac9ca5289ed34fef118f561" kindref="member">CountUp</ref>(frameCount);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>Data-&gt;MusCtrPanel-&gt;GetPCMFrames(</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pOutput),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCount);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/core/MainObjects/audioPlayer/audioCallbacks.cpp"/>
  </compounddef>
</doxygen>
