<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="manualAudioTest_8cpp" kind="file" language="C++">
    <compoundname>manualAudioTest.cpp</compoundname>
    <includes refid="ManualMix_8hpp" local="yes">ManualMix.hpp</includes>
    <includes refid="EFFECTS_8hpp" local="yes">EFFECTS.hpp</includes>
    <includes local="yes">miniaudio.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="2">
        <label>ManualMix.hpp</label>
        <link refid="ManualMix_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>DeckData.hpp</label>
        <link refid="DeckData_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>EFFECTS.hpp</label>
        <link refid="EFFECTS_8hpp"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>CapnpBinary.hpp</label>
        <link refid="CapnpBinary_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>FrameCalc.hpp</label>
        <link refid="FrameCalc_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>dbState.hpp</label>
        <link refid="dbState_8hpp"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>musicDB.hpp</label>
        <link refid="musicDB_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>fileNameSanitizer.hpp</label>
        <link refid="fileNameSanitizer_8hpp"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>PDJE_EXPORT_SETTER.hpp</label>
        <link refid="PDJE__EXPORT__SETTER_8hpp"/>
      </node>
      <node id="29">
        <label>PDJE_LOG_SETTER.hpp</label>
        <link refid="PDJE__LOG__SETTER_8hpp"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/tests/manualAudioTest.cpp</label>
        <link refid="manualAudioTest_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>FAUST_COMPRESSOR.hpp</label>
      </node>
      <node id="4">
        <label>FAUST_COMPRESSOR_manual.hpp</label>
      </node>
      <node id="48">
        <label>FAUST_DISTORTION.hpp</label>
      </node>
      <node id="5">
        <label>FAUST_DISTORTION_manual.hpp</label>
      </node>
      <node id="49">
        <label>FAUST_ECHO.hpp</label>
      </node>
      <node id="6">
        <label>FAUST_ECHO_manual.hpp</label>
      </node>
      <node id="50">
        <label>FAUST_EQ.hpp</label>
      </node>
      <node id="7">
        <label>FAUST_EQ_manual.hpp</label>
      </node>
      <node id="51">
        <label>FAUST_FILTERS.hpp</label>
      </node>
      <node id="8">
        <label>FAUST_FILTERS_manual.hpp</label>
      </node>
      <node id="52">
        <label>FAUST_FLANGER.hpp</label>
      </node>
      <node id="9">
        <label>FAUST_FLANGER_manual.hpp</label>
      </node>
      <node id="53">
        <label>FAUST_OCS_FILTER.hpp</label>
      </node>
      <node id="10">
        <label>FAUST_OCS_FILTER_manual.hpp</label>
      </node>
      <node id="54">
        <label>FAUST_PANNER.hpp</label>
      </node>
      <node id="11">
        <label>FAUST_PANNER_manual.hpp</label>
      </node>
      <node id="55">
        <label>FAUST_PHASER.hpp</label>
      </node>
      <node id="12">
        <label>FAUST_PHASER_manual.hpp</label>
      </node>
      <node id="56">
        <label>FAUST_ROBOT.hpp</label>
      </node>
      <node id="13">
        <label>FAUST_ROBOT_manual.hpp</label>
      </node>
      <node id="57">
        <label>FAUST_ROLL.hpp</label>
      </node>
      <node id="14">
        <label>FAUST_ROLL_manual.hpp</label>
      </node>
      <node id="58">
        <label>FAUST_TRANCE.hpp</label>
      </node>
      <node id="15">
        <label>FAUST_TRANCE_manual.hpp</label>
      </node>
      <node id="59">
        <label>FAUST_VOL.hpp</label>
      </node>
      <node id="16">
        <label>FAUST_VOL_manual.hpp</label>
      </node>
      <node id="25">
        <label>MixBinary.capnp.h</label>
      </node>
      <node id="26">
        <label>MusicBinary.capnp.h</label>
      </node>
      <node id="27">
        <label>NoteBinary.capnp.h</label>
      </node>
      <node id="18">
        <label>algorithm</label>
      </node>
      <node id="23">
        <label>capnp/message.h</label>
      </node>
      <node id="24">
        <label>capnp/serialize.h</label>
      </node>
      <node id="19">
        <label>cmath</label>
      </node>
      <node id="42">
        <label>cppcodec/base64_default_url.hpp</label>
      </node>
      <node id="30">
        <label>filesystem</label>
      </node>
      <node id="46">
        <label>functional</label>
      </node>
      <node id="36">
        <label>hwy/aligned_allocator.h</label>
      </node>
      <node id="61">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="60">
        <label>miniaudio.h</label>
      </node>
      <node id="21">
        <label>optional</label>
      </node>
      <node id="31">
        <label>spdlog/sinks/basic_file_sink.h</label>
      </node>
      <node id="32">
        <label>spdlog/sinks/stdout_color_sinks.h</label>
      </node>
      <node id="33">
        <label>spdlog/spdlog.h</label>
      </node>
      <node id="38">
        <label>sqlite3.h</label>
      </node>
      <node id="39">
        <label>string</label>
      </node>
      <node id="34">
        <label>string_view</label>
      </node>
      <node id="44">
        <label>thread</label>
      </node>
      <node id="35">
        <label>type_traits</label>
      </node>
      <node id="22">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="manualAudioTest_8cpp_1a7618272fcf9d87de9616cec36f26d330" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto idx</definition>
        <argsstring></argsstring>
        <name>idx</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tests/manualAudioTest.cpp" line="6" column="20" bodyfile="include/tests/manualAudioTest.cpp" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="manualAudioTest_8cpp_1a1268ed98ba54ca935dd6542e3b89b9cb" prot="public" static="no" mutable="no">
        <type><ref refid="classFXControlPanel" kindref="compound">FXControlPanel</ref> *</type>
        <definition>FXControlPanel* fxcp</definition>
        <argsstring></argsstring>
        <name>fxcp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tests/manualAudioTest.cpp" line="7" column="18" bodyfile="include/tests/manualAudioTest.cpp" bodystart="7" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="manualAudioTest_8cpp_1a70640b91c0ba95b3bb510844154c7ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Lvec</definition>
        <argsstring>(480)</argsstring>
        <name>Lvec</name>
        <param>
          <type>480</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tests/manualAudioTest.cpp" line="8" column="13" declfile="include/tests/manualAudioTest.cpp" declline="8" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="manualAudioTest_8cpp_1ae7e64aa5f55fdf29e77fb1569cf77d4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt; float &gt; Rvec</definition>
        <argsstring>(480)</argsstring>
        <name>Rvec</name>
        <param>
          <type>480</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tests/manualAudioTest.cpp" line="9" column="13" declfile="include/tests/manualAudioTest.cpp" declline="9" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="manualAudioTest_8cpp_1a4450494f995f5d36a0fa8f5774bcb503" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void idle_callback</definition>
        <argsstring>(ma_device *pDevice, void *pOutput, const void *pInput, ma_uint32 frameCount)</argsstring>
        <name>idle_callback</name>
        <param>
          <type>ma_device *</type>
          <declname>pDevice</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>pOutput</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pInput</declname>
        </param>
        <param>
          <type>ma_uint32</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tests/manualAudioTest.cpp" line="12" column="1" bodyfile="include/tests/manualAudioTest.cpp" bodystart="12" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="manualAudioTest_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/tests/manualAudioTest.cpp" line="41" column="1" bodyfile="include/tests/manualAudioTest.cpp" bodystart="41" bodyend="92"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ManualMix_8hpp" kindref="compound">ManualMix.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="EFFECTS_8hpp" kindref="compound">EFFECTS.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;miniaudio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="manualAudioTest_8cpp_1a7618272fcf9d87de9616cec36f26d330" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audioTest_8cpp_1a7618272fcf9d87de9616cec36f26d330" kindref="member">idx</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7" refid="manualAudioTest_8cpp_1a1268ed98ba54ca935dd6542e3b89b9cb" refkind="member"><highlight class="normal"><ref refid="classFXControlPanel" kindref="compound">FXControlPanel</ref><sp/><sp/><sp/>*<ref refid="manualAudioTest_8cpp_1a1268ed98ba54ca935dd6542e3b89b9cb" kindref="member">fxcp</ref>;</highlight></codeline>
<codeline lineno="8" refid="manualAudioTest_8cpp_1a70640b91c0ba95b3bb510844154c7ae0" refkind="member"><highlight class="normal">std::vector&lt;float&gt;<sp/><ref refid="manualAudioTest_8cpp_1a70640b91c0ba95b3bb510844154c7ae0" kindref="member">Lvec</ref>(480);</highlight></codeline>
<codeline lineno="9" refid="manualAudioTest_8cpp_1ae7e64aa5f55fdf29e77fb1569cf77d4f" refkind="member"><highlight class="normal">std::vector&lt;float&gt;<sp/><ref refid="manualAudioTest_8cpp_1ae7e64aa5f55fdf29e77fb1569cf77d4f" kindref="member">Rvec</ref>(480);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="manualAudioTest_8cpp_1a4450494f995f5d36a0fa8f5774bcb503" refkind="member"><highlight class="normal"><ref refid="manualAudioTest_8cpp_1a4450494f995f5d36a0fa8f5774bcb503" kindref="member">idle_callback</ref>(ma_device<sp/><sp/>*pDevice,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOutput,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pInput,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ma_uint32<sp/><sp/><sp/>frameCount)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>dvec<sp/>=<sp/>reinterpret_cast&lt;std::vector&lt;float&gt;*&gt;(pDevice-&gt;pUserData);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dP<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">ma_decoder<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pDevice-&gt;pUserData);<sp/></highlight><highlight class="comment">//<sp/>dvec-&gt;data();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>ma_decoder_read_pcm_frames(dP,<sp/>pOutput,<sp/>frameCount,<sp/>NULL);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lp<sp/>=<sp/><ref refid="manualAudioTest_8cpp_1a70640b91c0ba95b3bb510844154c7ae0" kindref="member">Lvec</ref>.data();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rp<sp/>=<sp/><ref refid="manualAudioTest_8cpp_1ae7e64aa5f55fdf29e77fb1569cf77d4f" kindref="member">Rvec</ref>.data();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*op<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)pOutput;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frameCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(lp++)<sp/>=<sp/>*(op++);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(rp++)<sp/>=<sp/>*(op++);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*Fpcm[2]<sp/>=<sp/>{<sp/><ref refid="manualAudioTest_8cpp_1a70640b91c0ba95b3bb510844154c7ae0" kindref="member">Lvec</ref>.data(),<sp/><ref refid="manualAudioTest_8cpp_1ae7e64aa5f55fdf29e77fb1569cf77d4f" kindref="member">Rvec</ref>.data()<sp/>};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="manualAudioTest_8cpp_1a1268ed98ba54ca935dd6542e3b89b9cb" kindref="member">fxcp</ref>-&gt;addFX(Fpcm,<sp/>frameCount);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>lp<sp/>=<sp/><ref refid="manualAudioTest_8cpp_1a70640b91c0ba95b3bb510844154c7ae0" kindref="member">Lvec</ref>.data();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>rp<sp/>=<sp/><ref refid="manualAudioTest_8cpp_1ae7e64aa5f55fdf29e77fb1569cf77d4f" kindref="member">Rvec</ref>.data();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>op<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)pOutput;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frameCount;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(op++)<sp/>=<sp/>*(lp++);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(op++)<sp/>=<sp/>*(rp++);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="manualAudioTest_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"><ref refid="audioTest_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i<sp/>+=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>ma_device<sp/>dev;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="manualAudioTest_8cpp_1a1268ed98ba54ca935dd6542e3b89b9cb" kindref="member">fxcp</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classFXControlPanel" kindref="compound">FXControlPanel</ref>(48000);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ma_decoder_config<sp/>decconf<sp/>=<sp/>ma_decoder_config_init(ma_format_f32,<sp/>2,<sp/>48000);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>ma_decoder<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dec;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>ma_decoder_init_file(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;../../../../music/Over<sp/>Time<sp/>[bv7xMhvXJjc].wav&quot;</highlight><highlight class="normal">,<sp/>&amp;decconf,<sp/>&amp;dec);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>ma_device_config<sp/>devconf<sp/><sp/><sp/>=<sp/>ma_device_config_init(ma_device_type_playback);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>devconf.playback.format<sp/><sp/><sp/><sp/>=<sp/>ma_format_f32;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>devconf.playback.channels<sp/><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>devconf.sampleRate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>48000;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>devconf.periodSizeInFrames<sp/>=<sp/>480;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>devconf.dataCallback<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="audioTest_8cpp_1a4450494f995f5d36a0fa8f5774bcb503" kindref="member">idle_callback</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>devconf.performanceProfile<sp/>=<sp/>ma_performance_profile_low_latency;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>devconf.pUserData<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(&amp;dec);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>ma_device_init(NULL,<sp/>&amp;devconf,<sp/>&amp;dev);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>ma_device_start(&amp;dev);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="manualAudioTest_8cpp_1a1268ed98ba54ca935dd6542e3b89b9cb" kindref="member">fxcp</ref>-&gt;FX_ON_OFF(<ref refid="ManualMix_8hpp_1ae8d2b13e6207a0b5d8195a3775e3e1c3a9efdc855f3c1477957fb50affec07f8f" kindref="member">FXList::EQ</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>args<sp/>=<sp/><ref refid="manualAudioTest_8cpp_1a1268ed98ba54ca935dd6542e3b89b9cb" kindref="member">fxcp</ref>-&gt;GetArgSetter(<ref refid="ManualMix_8hpp_1ae8d2b13e6207a0b5d8195a3775e3e1c3a9efdc855f3c1477957fb50affec07f8f" kindref="member">FXList::EQ</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>:<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>i.first<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>args[</highlight><highlight class="stringliteral">&quot;EQPower&quot;</highlight><highlight class="normal">](-25);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>args[</highlight><highlight class="stringliteral">&quot;EQSelect&quot;</highlight><highlight class="normal">](2);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[</highlight><highlight class="stringliteral">&quot;EQPower&quot;</highlight><highlight class="normal">](25);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[</highlight><highlight class="stringliteral">&quot;EQPower&quot;</highlight><highlight class="normal">](0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args[</highlight><highlight class="stringliteral">&quot;EQPower&quot;</highlight><highlight class="normal">](-25);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>getchar();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="manualAudioTest_8cpp_1a1268ed98ba54ca935dd6542e3b89b9cb" kindref="member">fxcp</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/tests/manualAudioTest.cpp"/>
  </compounddef>
</doxygen>
