// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PDJS.proto
// Protobuf C++ Version: 5.26.1

#include "PDJS.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr dj_base_activation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        first_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        second_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        third_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::d_type >(0)},
        from_{0},
        what_{static_cast< ::d_what >(0)},
        target_{0},
        sbar_{0},
        ssep_{0},
        sbeat_{0},
        ebar_{0},
        esep_{0},
        ebeat_{0} {}

template <typename>
PROTOBUF_CONSTEXPR dj_base_activation::dj_base_activation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct dj_base_activationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR dj_base_activationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~dj_base_activationDefaultTypeInternal() {}
  union {
    dj_base_activation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 dj_base_activationDefaultTypeInternal _dj_base_activation_default_instance_;

inline constexpr dj_base::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : orders_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR dj_base::dj_base(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct dj_baseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR dj_baseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~dj_baseDefaultTypeInternal() {}
  union {
    dj_base _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 dj_baseDefaultTypeInternal _dj_base_default_instance_;
static ::_pb::Metadata file_level_metadata_PDJS_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_PDJS_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_PDJS_2eproto = nullptr;
const ::uint32_t
    TableStruct_PDJS_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.from_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.what_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.first_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.second_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.third_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.sbar_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.ssep_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.sbeat_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.ebar_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.esep_),
        PROTOBUF_FIELD_OFFSET(::dj_base_activation, _impl_.ebeat_),
        3,
        4,
        5,
        0,
        1,
        2,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::dj_base, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::dj_base, _impl_.orders_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 21, -1, sizeof(::dj_base_activation)},
        {34, -1, -1, sizeof(::dj_base)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_dj_base_activation_default_instance_._instance,
    &::_dj_base_default_instance_._instance,
};
const char descriptor_table_protodef_PDJS_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nPDJS.proto\"\215\002\n\007dj_base\022#\n\006orders\030\001 \003(\013"
    "2\023.dj_base.activation\032\334\001\n\nactivation\022\025\n\004"
    "type\030\001 \002(\0162\007.d_type\022\014\n\004from\030\002 \002(\005\022\025\n\004wha"
    "t\030\003 \001(\0162\007.d_what\022\r\n\005first\030\004 \001(\t\022\016\n\006secon"
    "d\030\005 \001(\t\022\r\n\005third\030\006 \001(\t\022\016\n\006target\030\007 \001(\005\022\014"
    "\n\004Sbar\030\010 \001(\005\022\014\n\004Ssep\030\t \001(\005\022\r\n\005Sbeat\030\n \001("
    "\005\022\014\n\004Ebar\030\013 \001(\005\022\014\n\004Esep\030\014 \001(\005\022\r\n\005Ebeat\030\r"
    " \001(\005*\361\001\n\006d_type\022\n\n\006FILTER\020\000\022\006\n\002EQ\020\001\022\016\n\nD"
    "ISTORTION\020\002\022\013\n\007CONTROL\020\003\022\007\n\003VOL\020\004\022\010\n\004LOA"
    "D\020\005\022\n\n\006UNLOAD\020\006\022\016\n\nBEAT_MATCH\020\007\022\010\n\004SOLA\020"
    "\010\022\013\n\007DJ_COMP\020\t\022\010\n\004INIT\020\n\022\010\n\004ECHO\020\013\022\007\n\003LF"
    "S\020\014\022\013\n\007FLANGER\020\r\022\n\n\006PHASER\020\016\022\n\n\006TRANCE\020\017"
    "\022\n\n\006PANNER\020\020\022\r\n\tBATTLE_DJ\020\021\022\t\n\005ALIVE\020\022\022\010"
    "\n\004ROLL\020\023*\272\001\n\006d_what\022\n\n\006SINGLE\020\000\022\010\n\004HIGH\020"
    "\001\022\007\n\003MID\020\002\022\007\n\003LOW\020\003\022\007\n\003CUE\020\004\022\010\n\004PLAY\020\005\022\t"
    "\n\005PAUSE\020\006\022\010\n\004TRIM\020\007\022\t\n\005FADER\020\010\022\010\n\004WARP\020\t"
    "\022\n\n\006MASTER\020\n\022\007\n\003RAW\020\013\022\010\n\004SPIN\020\014\022\t\n\005BSPIN"
    "\020\r\022\007\n\003REV\020\016\022\013\n\007SCRATCH\020\017\022\013\n\007BSCRATC\020\020"
};
static ::absl::once_flag descriptor_table_PDJS_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_PDJS_2eproto = {
    false,
    false,
    717,
    descriptor_table_protodef_PDJS_2eproto,
    "PDJS.proto",
    &descriptor_table_PDJS_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_PDJS_2eproto::offsets,
    file_level_metadata_PDJS_2eproto,
    file_level_enum_descriptors_PDJS_2eproto,
    file_level_service_descriptors_PDJS_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_PDJS_2eproto_getter() {
  return &descriptor_table_PDJS_2eproto;
}
const ::google::protobuf::EnumDescriptor* d_type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_PDJS_2eproto);
  return file_level_enum_descriptors_PDJS_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t d_type_internal_data_[] = {
    1310720u, 0u, };
bool d_type_IsValid(int value) {
  return 0 <= value && value <= 19;
}
const ::google::protobuf::EnumDescriptor* d_what_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_PDJS_2eproto);
  return file_level_enum_descriptors_PDJS_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t d_what_internal_data_[] = {
    1114112u, 0u, };
bool d_what_IsValid(int value) {
  return 0 <= value && value <= 16;
}
// ===================================================================

class dj_base_activation::_Internal {
 public:
  using HasBits = decltype(std::declval<dj_base_activation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_._has_bits_);
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000018) ^ 0x00000018) != 0;
  }
};

dj_base_activation::dj_base_activation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dj_base.activation)
}
inline PROTOBUF_NDEBUG_INLINE dj_base_activation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        first_(arena, from.first_),
        second_(arena, from.second_),
        third_(arena, from.third_) {}

dj_base_activation::dj_base_activation(
    ::google::protobuf::Arena* arena,
    const dj_base_activation& from)
    : ::google::protobuf::Message(arena) {
  dj_base_activation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, ebeat_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::ebeat_));

  // @@protoc_insertion_point(copy_constructor:dj_base.activation)
}
inline PROTOBUF_NDEBUG_INLINE dj_base_activation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        first_(arena),
        second_(arena),
        third_(arena) {}

inline void dj_base_activation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, ebeat_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::ebeat_));
}
dj_base_activation::~dj_base_activation() {
  // @@protoc_insertion_point(destructor:dj_base.activation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void dj_base_activation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.first_.Destroy();
  _impl_.second_.Destroy();
  _impl_.third_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
dj_base_activation::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_._cached_size_),
              false,
          },
          &dj_base_activation::MergeImpl,
          &dj_base_activation::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void dj_base_activation::Clear() {
// @@protoc_insertion_point(message_clear_start:dj_base.activation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.first_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.second_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.third_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.sbar_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.sbar_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&_impl_.ssep_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ebeat_) -
        reinterpret_cast<char*>(&_impl_.ssep_)) + sizeof(_impl_.ebeat_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* dj_base_activation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 2, 51, 2> dj_base_activation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_dj_base_activation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dj_base_activation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required .d_type type = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 3, 19, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.type_)}},
    // required int32 from = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(dj_base_activation, _impl_.from_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.from_)}},
    // optional .d_what what = 3;
    {::_pbi::TcParser::FastEr0S1,
     {24, 5, 16, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.what_)}},
    // optional string first = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.first_)}},
    // optional string second = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.second_)}},
    // optional string third = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.third_)}},
    // optional int32 target = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(dj_base_activation, _impl_.target_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.target_)}},
    // optional int32 Sbar = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(dj_base_activation, _impl_.sbar_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.sbar_)}},
    // optional int32 Ssep = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(dj_base_activation, _impl_.ssep_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.ssep_)}},
    // optional int32 Sbeat = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(dj_base_activation, _impl_.sbeat_), 9>(),
     {80, 9, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.sbeat_)}},
    // optional int32 Ebar = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(dj_base_activation, _impl_.ebar_), 10>(),
     {88, 10, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.ebar_)}},
    // optional int32 Esep = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(dj_base_activation, _impl_.esep_), 11>(),
     {96, 11, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.esep_)}},
    // optional int32 Ebeat = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(dj_base_activation, _impl_.ebeat_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.ebeat_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required .d_type type = 1;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.type_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // required int32 from = 2;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.from_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional .d_what what = 3;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.what_), _Internal::kHasBitsOffset + 5, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional string first = 4;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.first_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string second = 5;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.second_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string third = 6;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.third_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional int32 target = 7;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.target_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 Sbar = 8;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.sbar_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 Ssep = 9;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.ssep_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 Sbeat = 10;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.sbeat_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 Ebar = 11;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.ebar_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 Esep = 12;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.esep_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 Ebeat = 13;
    {PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.ebeat_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }}, {{
    {0, 20},
    {0, 17},
  }}, {{
    "\22\0\0\0\5\6\5\0\0\0\0\0\0\0\0\0"
    "dj_base.activation"
    "first"
    "second"
    "third"
  }},
};

::uint8_t* dj_base_activation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dj_base.activation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required .d_type type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // required int32 from = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_from(), target);
  }

  // optional .d_what what = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_what(), target);
  }

  // optional string first = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_first();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "dj_base.activation.first");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string second = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_second();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "dj_base.activation.second");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string third = 6;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_third();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "dj_base.activation.third");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional int32 target = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<7>(
            stream, this->_internal_target(), target);
  }

  // optional int32 Sbar = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<8>(
            stream, this->_internal_sbar(), target);
  }

  // optional int32 Ssep = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<9>(
            stream, this->_internal_ssep(), target);
  }

  // optional int32 Sbeat = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<10>(
            stream, this->_internal_sbeat(), target);
  }

  // optional int32 Ebar = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<11>(
            stream, this->_internal_ebar(), target);
  }

  // optional int32 Esep = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<12>(
            stream, this->_internal_esep(), target);
  }

  // optional int32 Ebeat = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<13>(
            stream, this->_internal_ebeat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dj_base.activation)
  return target;
}

::size_t dj_base_activation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dj_base.activation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string first = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_first());
    }

    // optional string second = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_second());
    }

    // optional string third = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_third());
    }

  }
  if (cached_has_bits & 0x00000018u) {
    // required .d_type type = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
    }

    // required int32 from = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_from());
    }

  }
  if (cached_has_bits & 0x000000e0u) {
    // optional .d_what what = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_what());
    }

    // optional int32 target = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_target());
    }

    // optional int32 Sbar = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sbar());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional int32 Ssep = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ssep());
    }

    // optional int32 Sbeat = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_sbeat());
    }

    // optional int32 Ebar = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ebar());
    }

    // optional int32 Esep = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_esep());
    }

    // optional int32 Ebeat = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_ebeat());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void dj_base_activation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<dj_base_activation*>(&to_msg);
  auto& from = static_cast<const dj_base_activation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dj_base.activation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_first(from._internal_first());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_second(from._internal_second());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_third(from._internal_third());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.from_ = from._impl_.from_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.what_ = from._impl_.what_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.target_ = from._impl_.target_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.sbar_ = from._impl_.sbar_;
    }
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.ssep_ = from._impl_.ssep_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.sbeat_ = from._impl_.sbeat_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.ebar_ = from._impl_.ebar_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.esep_ = from._impl_.esep_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.ebeat_ = from._impl_.ebeat_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void dj_base_activation::CopyFrom(const dj_base_activation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dj_base.activation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool dj_base_activation::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

void dj_base_activation::InternalSwap(dj_base_activation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.first_, &other->_impl_.first_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.second_, &other->_impl_.second_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.third_, &other->_impl_.third_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.ebeat_)
      + sizeof(dj_base_activation::_impl_.ebeat_)
      - PROTOBUF_FIELD_OFFSET(dj_base_activation, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata dj_base_activation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_PDJS_2eproto_getter,
                                   &descriptor_table_PDJS_2eproto_once,
                                   file_level_metadata_PDJS_2eproto[0]);
}
// ===================================================================

class dj_base::_Internal {
 public:
};

dj_base::dj_base(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:dj_base)
}
inline PROTOBUF_NDEBUG_INLINE dj_base::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : orders_{visibility, arena, from.orders_},
        _cached_size_{0} {}

dj_base::dj_base(
    ::google::protobuf::Arena* arena,
    const dj_base& from)
    : ::google::protobuf::Message(arena) {
  dj_base* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:dj_base)
}
inline PROTOBUF_NDEBUG_INLINE dj_base::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : orders_{visibility, arena},
        _cached_size_{0} {}

inline void dj_base::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
dj_base::~dj_base() {
  // @@protoc_insertion_point(destructor:dj_base)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void dj_base::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
dj_base::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              nullptr,  // OnDemandRegisterArenaDtor
              PROTOBUF_FIELD_OFFSET(dj_base, _impl_._cached_size_),
              false,
          },
          &dj_base::MergeImpl,
          &dj_base::kDescriptorMethods,
      };
  return &_data_;
}
PROTOBUF_NOINLINE void dj_base::Clear() {
// @@protoc_insertion_point(message_clear_start:dj_base)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orders_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* dj_base::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> dj_base::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_dj_base_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::dj_base>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .dj_base.activation orders = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(dj_base, _impl_.orders_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .dj_base.activation orders = 1;
    {PROTOBUF_FIELD_OFFSET(dj_base, _impl_.orders_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::dj_base_activation>()},
  }}, {{
  }},
};

::uint8_t* dj_base::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dj_base)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .dj_base.activation orders = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_orders_size());
       i < n; i++) {
    const auto& repfield = this->_internal_orders().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dj_base)
  return target;
}

::size_t dj_base::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dj_base)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dj_base.activation orders = 1;
  total_size += 1UL * this->_internal_orders_size();
  for (const auto& msg : this->_internal_orders()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void dj_base::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<dj_base*>(&to_msg);
  auto& from = static_cast<const dj_base&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dj_base)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_orders()->MergeFrom(
      from._internal_orders());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void dj_base::CopyFrom(const dj_base& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dj_base)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool dj_base::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(_internal_orders())) return false;
  return true;
}

void dj_base::InternalSwap(dj_base* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.orders_.InternalSwap(&other->_impl_.orders_);
}

::google::protobuf::Metadata dj_base::GetMetadata() const {
  return ::_pbi::AssignDescriptors(&descriptor_table_PDJS_2eproto_getter,
                                   &descriptor_table_PDJS_2eproto_once,
                                   file_level_metadata_PDJS_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::std::false_type _static_init_ PROTOBUF_UNUSED =
    (::_pbi::AddDescriptors(&descriptor_table_PDJS_2eproto),
     ::std::false_type{});
#include "google/protobuf/port_undef.inc"
