if(NOT DEFINED RT_BIN)
    message(FATAL_ERROR "RT_BIN not provided")
endif()

if(NOT DEFINED OUT_HDR)
    message(FATAL_ERROR "OUT_HDR not provided")
endif()

message(STATUS "GenRTHASH.cmake: RT_BIN=${RT_BIN} OUT_HDR=${OUT_HDR}")

if(NOT EXISTS "${RT_BIN}")
    message(FATAL_ERROR "RT binary ${RT_BIN} does not exists")
endif()

set(__sha_hex "")

#try sha256sum
find_program(SHA256SUM_EXE sha256sum)
if(SHA256SUM_EXE)
    execute_process(COMMAND ${SHA256SUM_EXE} "${RT_BIN}"
        OUTPUT_VARIABLE __shaout
        RESULT_VARIABLE __shares
        OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    if(__shares EQUAL 0)
        string(REGEX REPLACE "^([0-9a-fA-F]+).*" "\\1" __sha_hex "${__shaout}")
    endif()
endif()

#openssl fallback
if(NOT __sha_hex)
    find_program(OPENSSL_EXE openssl)
    if(OPENSSL_EXE)
        execute_process(COMMAND ${OPENSSL_EXE} dgst -sha256 -r "${RT_BIN}"
            OUTPUT_VARIABLE __sslout
            RESULT_VARIABLE __sslres
            OUTPUT_STRIP_TRAILING_WHITESPACE
        )
        if(__sslres EQUAL 0)
            string(REGEX REPLACE "^([0-9a-fA-F]+).*" "\\1" __sha_hex "${__sslout}")
        endif()
    endif()

endif()

if(NOT __sha_hex)
    message(FATAL_ERROR "Failed to compute SHA256 for ${RT_BIN}.")
endif()

string(TOLOWER "${__sha_hex}" __sha_hex)

set(_new_content "// Auto-generated by GenerateHash.cmake\n#pragma once\nstatic const char EMBEDDED_CHILD_SHA256[] = \"${__sha_hex}\";\n")

set(_old_content "")
if(EXISTS "${OUT_HDR}")
  file(READ "${OUT_HDR}" _old_content)
endif()

if(NOT _old_content STREQUAL _new_content)
  file(WRITE "${OUT_HDR}" "${_new_content}")
  message(STATUS "Wrote ${OUT_HDR} with hash ${__sha_hex}")
else()
  message(STATUS "${OUT_HDR} unchanged (same hash ${__sha_hex})")
endif()
