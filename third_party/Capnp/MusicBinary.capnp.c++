// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: MusicBinary.capnp

#include "MusicBinary.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<79> b_d4bee4a10a7128d7 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    215,  40, 113,  10, 161, 228, 190, 212,
     18,   0,   0,   0,   1,   0,   3,   0,
     70, 145, 111,   0,  94, 131, 198, 187,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     22,   0,   0,   0, 122,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 117, 115, 105,  99,  66, 105, 110,
     97, 114, 121,  46,  99,  97, 112, 110,
    112,  58,  77,  77, 101, 116,  97,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    108,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
     98, 112, 109,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 101,  97, 116,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 117,  98,  66, 101,  97, 116,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 101, 112,  97, 114,  97, 116, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      5,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d4bee4a10a7128d7 = b_d4bee4a10a7128d7.words;
#if !CAPNP_LITE
static const uint16_t m_d4bee4a10a7128d7[] = {1, 0, 3, 2};
static const uint16_t i_d4bee4a10a7128d7[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_d4bee4a10a7128d7 = {
  0xd4bee4a10a7128d7, b_d4bee4a10a7128d7.words, 79, nullptr, m_d4bee4a10a7128d7,
  0, 4, i_d4bee4a10a7128d7, nullptr, nullptr, { &s_d4bee4a10a7128d7, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<39> b_f468d27bfddd3a97 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    151,  58, 221, 253, 123, 210, 104, 244,
     18,   0,   0,   0,   1,   0,   0,   0,
     70, 145, 111,   0,  94, 131, 198, 187,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0, 181,   0,   0,   0,
     21,   0,   0,   0,  58,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77, 117, 115, 105,  99,  66, 105, 110,
     97, 114, 121,  46,  99,  97, 112, 110,
    112,  58,  77, 117, 115, 105,  99,  66,
    105, 110,  97, 114, 121,  67,  97, 112,
    110, 112,  68,  97, 116,  97,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    100,  97, 116,  97, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    215,  40, 113,  10, 161, 228, 190, 212,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f468d27bfddd3a97 = b_f468d27bfddd3a97.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f468d27bfddd3a97[] = {
  &s_d4bee4a10a7128d7,
};
static const uint16_t m_f468d27bfddd3a97[] = {0};
static const uint16_t i_f468d27bfddd3a97[] = {0};
const ::capnp::_::RawSchema s_f468d27bfddd3a97 = {
  0xf468d27bfddd3a97, b_f468d27bfddd3a97.words, 39, d_f468d27bfddd3a97, m_f468d27bfddd3a97,
  1, 1, i_f468d27bfddd3a97, nullptr, nullptr, { &s_f468d27bfddd3a97, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// MMeta
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t MMeta::_capnpPrivate::dataWordSize;
constexpr uint16_t MMeta::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind MMeta::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MMeta::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// MusicBinaryCapnpData
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t MusicBinaryCapnpData::_capnpPrivate::dataWordSize;
constexpr uint16_t MusicBinaryCapnpData::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind MusicBinaryCapnpData::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* MusicBinaryCapnpData::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



