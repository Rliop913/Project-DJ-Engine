//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class audioPlayer : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal audioPlayer(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(audioPlayer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~audioPlayer() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          pdje_POLYGLOTPINVOKE.delete_audioPlayer(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public string STATUS {
    set {
      pdje_POLYGLOTPINVOKE.audioPlayer_STATUS_set(swigCPtr, value);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = pdje_POLYGLOTPINVOKE.audioPlayer_STATUS_get(swigCPtr);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string GetStatus() {
    string ret = pdje_POLYGLOTPINVOKE.audioPlayer_GetStatus(swigCPtr);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Activate() {
    bool ret = pdje_POLYGLOTPINVOKE.audioPlayer_Activate(swigCPtr);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool Deactivate() {
    bool ret = pdje_POLYGLOTPINVOKE.audioPlayer_Deactivate(swigCPtr);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void ChangeCursorPos(ulong pos) {
    pdje_POLYGLOTPINVOKE.audioPlayer_ChangeCursorPos(swigCPtr, pos);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
  }

  public ulong GetConsumedFrames() {
    ulong ret = pdje_POLYGLOTPINVOKE.audioPlayer_GetConsumedFrames(swigCPtr);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FXControlPannel GetFXControlPannel(string title) {
    global::System.IntPtr cPtr = pdje_POLYGLOTPINVOKE.audioPlayer_GetFXControlPannel__SWIG_0(swigCPtr, title);
    FXControlPannel ret = (cPtr == global::System.IntPtr.Zero) ? null : new FXControlPannel(cPtr, false);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FXControlPannel GetFXControlPannel() {
    global::System.IntPtr cPtr = pdje_POLYGLOTPINVOKE.audioPlayer_GetFXControlPannel__SWIG_1(swigCPtr);
    FXControlPannel ret = (cPtr == global::System.IntPtr.Zero) ? null : new FXControlPannel(cPtr, false);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public MusicControlPannel GetMusicControlPannel() {
    global::System.IntPtr cPtr = pdje_POLYGLOTPINVOKE.audioPlayer_GetMusicControlPannel(swigCPtr);
    MusicControlPannel ret = (cPtr == global::System.IntPtr.Zero) ? null : new MusicControlPannel(cPtr, false);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public audioPlayer(litedb db, trackdata td, uint frameBufferSize, bool hasManual) : this(pdje_POLYGLOTPINVOKE.new_audioPlayer__SWIG_0(litedb.getCPtr(db), trackdata.getCPtr(td), frameBufferSize, hasManual), true) {
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
  }

  public audioPlayer(litedb db, trackdata td, uint frameBufferSize) : this(pdje_POLYGLOTPINVOKE.new_audioPlayer__SWIG_1(litedb.getCPtr(db), trackdata.getCPtr(td), frameBufferSize), true) {
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
  }

  public audioPlayer(uint frameBufferSize) : this(pdje_POLYGLOTPINVOKE.new_audioPlayer__SWIG_2(frameBufferSize), true) {
  }

  public SWIGTYPE_p_PDJE_CORE_DATA_LINE PullOutDataLine() {
    SWIGTYPE_p_PDJE_CORE_DATA_LINE ret = new SWIGTYPE_p_PDJE_CORE_DATA_LINE(pdje_POLYGLOTPINVOKE.audioPlayer_PullOutDataLine(swigCPtr), true);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
