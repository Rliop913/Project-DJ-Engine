//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class MixArgs : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MixArgs(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MixArgs obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  internal static global::System.Runtime.InteropServices.HandleRef swigRelease(MixArgs obj) {
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new global::System.ApplicationException("Cannot release ownership as memory is not owned");
      global::System.Runtime.InteropServices.HandleRef ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.Dispose();
      return ptr;
    } else {
      return new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
    }
  }

  ~MixArgs() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          pdje_POLYGLOTPINVOKE.delete_MixArgs(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public SWIGTYPE_p_TypeEnum type {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_type_set(swigCPtr, SWIGTYPE_p_TypeEnum.getCPtr(value));
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_TypeEnum ret = new SWIGTYPE_p_TypeEnum(pdje_POLYGLOTPINVOKE.MixArgs_type_get(swigCPtr), true);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_DetailEnum details {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_details_set(swigCPtr, SWIGTYPE_p_DetailEnum.getCPtr(value));
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_DetailEnum ret = new SWIGTYPE_p_DetailEnum(pdje_POLYGLOTPINVOKE.MixArgs_details_get(swigCPtr), true);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int ID {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_ID_set(swigCPtr, value);
    } 
    get {
      int ret = pdje_POLYGLOTPINVOKE.MixArgs_ID_get(swigCPtr);
      return ret;
    } 
  }

  public string first {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_first_set(swigCPtr, value);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = pdje_POLYGLOTPINVOKE.MixArgs_first_get(swigCPtr);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string second {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_second_set(swigCPtr, value);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = pdje_POLYGLOTPINVOKE.MixArgs_second_get(swigCPtr);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string third {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_third_set(swigCPtr, value);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = pdje_POLYGLOTPINVOKE.MixArgs_third_get(swigCPtr);
      if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public long bar {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_bar_set(swigCPtr, value);
    } 
    get {
      long ret = pdje_POLYGLOTPINVOKE.MixArgs_bar_get(swigCPtr);
      return ret;
    } 
  }

  public long beat {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_beat_set(swigCPtr, value);
    } 
    get {
      long ret = pdje_POLYGLOTPINVOKE.MixArgs_beat_get(swigCPtr);
      return ret;
    } 
  }

  public long separate {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_separate_set(swigCPtr, value);
    } 
    get {
      long ret = pdje_POLYGLOTPINVOKE.MixArgs_separate_get(swigCPtr);
      return ret;
    } 
  }

  public long Ebar {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_Ebar_set(swigCPtr, value);
    } 
    get {
      long ret = pdje_POLYGLOTPINVOKE.MixArgs_Ebar_get(swigCPtr);
      return ret;
    } 
  }

  public long Ebeat {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_Ebeat_set(swigCPtr, value);
    } 
    get {
      long ret = pdje_POLYGLOTPINVOKE.MixArgs_Ebeat_get(swigCPtr);
      return ret;
    } 
  }

  public long Eseparate {
    set {
      pdje_POLYGLOTPINVOKE.MixArgs_Eseparate_set(swigCPtr, value);
    } 
    get {
      long ret = pdje_POLYGLOTPINVOKE.MixArgs_Eseparate_get(swigCPtr);
      return ret;
    } 
  }

  public MixArgs() : this(pdje_POLYGLOTPINVOKE.new_EDIT_ARG_MIX(), true) {
  }

}
