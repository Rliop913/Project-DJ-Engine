//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.1
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class litedb : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal litedb(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(litedb obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~litedb() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          pdje_POLYGLOTPINVOKE.delete_litedb(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public bool KVGet(string K, SWIGTYPE_p_std__string V) {
    bool ret = pdje_POLYGLOTPINVOKE.litedb_KVGet(swigCPtr, K, SWIGTYPE_p_std__string.getCPtr(V));
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool KVPut(string K, string V) {
    bool ret = pdje_POLYGLOTPINVOKE.litedb_KVPut(swigCPtr, K, V);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool openDB(SWIGTYPE_p_std__filesystem__path dbPath) {
    bool ret = pdje_POLYGLOTPINVOKE.litedb_openDB(swigCPtr, SWIGTYPE_p_std__filesystem__path.getCPtr(dbPath));
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__filesystem__path getRoot() {
    SWIGTYPE_p_std__filesystem__path ret = new SWIGTYPE_p_std__filesystem__path(pdje_POLYGLOTPINVOKE.litedb_getRoot(swigCPtr), true);
    if (pdje_POLYGLOTPINVOKE.SWIGPendingException.Pending) throw pdje_POLYGLOTPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public litedb() : this(pdje_POLYGLOTPINVOKE.new_litedb(), true) {
  }

}
